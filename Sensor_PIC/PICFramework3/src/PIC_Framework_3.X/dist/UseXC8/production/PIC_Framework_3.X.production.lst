

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Mon Sep 29 15:14:37 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    76  0000                     _ADCON0bits	set	4034
    77  0000                     _ADRESH	set	4036
    78  0000                     _ADRESL	set	4035
    79  0000                     _INTCONbits	set	4082
    80  0000                     _IPR1bits	set	3999
    81  0000                     _LATB	set	3978
    82  0000                     _OSCCON	set	4051
    83  0000                     _OSCCONbits	set	4051
    84  0000                     _OSCTUNEbits	set	3995
    85  0000                     _PIE1bits	set	3997
    86  0000                     _PIR1bits	set	3998
    87  0000                     _PORTDbits	set	3971
    88  0000                     _RCONbits	set	4048
    89  0000                     _RCREG	set	4014
    90  0000                     _RCSTA	set	4011
    91  0000                     _RCSTAbits	set	4011
    92  0000                     _SPBRG	set	4015
    93  0000                     _SPBRGH	set	4016
    94  0000                     _SSPADD	set	4040
    95  0000                     _SSPBUF	set	4041
    96  0000                     _SSPCON1	set	4038
    97  0000                     _SSPCON1bits	set	4038
    98  0000                     _SSPCON2	set	4037
    99  0000                     _SSPCON2bits	set	4037
   100  0000                     _SSPSTAT	set	4039
   101  0000                     _SSPSTATbits	set	4039
   102  0000                     _T0CON	set	4053
   103  0000                     _T0CONbits	set	4053
   104  0000                     _T1CON	set	4045
   105  0000                     _T1CONbits	set	4045
   106  0000                     _TMR0H	set	4055
   107  0000                     _TMR0L	set	4054
   108  0000                     _TMR1H	set	4047
   109  0000                     _TMR1L	set	4046
   110  0000                     _TRISB	set	3987
   111  0000                     _TRISCbits	set	3988
   112  0000                     _TRISDbits	set	3989
   113  0000                     _TXSTA	set	4012
   114  0000                     _TXSTAbits	set	4012
   115                           
   116                           	psect	nvCOMRAM
   117  00004E                     __pnvCOMRAM:
   118                           	opt stack 0
   119  00004E                     _uc_ptr:
   120                           	opt stack 0
   121  00004E                     	ds	2
   122                           
   123                           	psect	nvBANK0
   124  0000C5                     __pnvBANK0:
   125                           	opt stack 0
   126  0000C5                     _ic_ptr:
   127                           	opt stack 0
   128  0000C5                     	ds	2
   129                           
   130                           ; #config settings
   131  0000                     
   132                           	psect	cinit
   133  001D5C                     __pcinit:
   134                           	opt stack 0
   135  001D5C                     start_initialization:
   136                           	opt stack 0
   137  001D5C                     __initialization:
   138                           	opt stack 0
   139                           
   140                           ; Clear objects allocated to BANK2 (54 bytes)
   141  001D5C  EE02  F000         	lfsr	0,__pbssBANK2
   142  001D60  0E36               	movlw	54
   143  001D62                     clear_0:
   144  001D62  6AEE               	clrf	postinc0,c
   145  001D64  06E8               	decf	wreg,f,c
   146  001D66  E1FD               	bnz	clear_0
   147                           
   148                           ; Clear objects allocated to BANK1 (162 bytes)
   149  001D68  EE01  F000         	lfsr	0,__pbssBANK1
   150  001D6C  0EA2               	movlw	162
   151  001D6E                     clear_1:
   152  001D6E  6AEE               	clrf	postinc0,c
   153  001D70  06E8               	decf	wreg,f,c
   154  001D72  E1FD               	bnz	clear_1
   155                           
   156                           ; Clear objects allocated to COMRAM (2 bytes)
   157  001D74  6A51               	clrf	(__pbssCOMRAM+1)& (0+255),c
   158  001D76  6A50               	clrf	__pbssCOMRAM& (0+255),c
   159  001D78                     end_of_initialization:
   160                           	opt stack 0
   161  001D78                     __end_of__initialization:
   162                           	opt stack 0
   163  001D78  0E00               	movlw	low (__Lmediumconst shr (0+16))
   164  001D7A  6EF8               	movwf	tblptru,c
   165  001D7C  0100               	movlb	0
   166  001D7E  EF02  F003         	goto	_main	;jump to C main() function
   167                           tblptru	equ	0xFF8
   168                           postinc0	equ	0xFEE
   169                           wreg	equ	0xFE8
   170                           
   171                           	psect	bssCOMRAM
   172  000050                     __pbssCOMRAM:
   173                           	opt stack 0
   174  000050                     _MQ_Main_Willing_to_block:
   175                           	opt stack 0
   176  000050                     	ds	1
   177  000051                     _USART_Status:
   178                           	opt stack 0
   179  000051                     	ds	1
   180                           tblptru	equ	0xFF8
   181                           postinc0	equ	0xFEE
   182                           wreg	equ	0xFE8
   183                           
   184                           	psect	bssBANK1
   185  000100                     __pbssBANK1:
   186                           	opt stack 0
   187  000100                     _FromMainLow_MQ:
   188                           	opt stack 0
   189  000100                     	ds	54
   190  000136                     _ToMainHigh_MQ:
   191                           	opt stack 0
   192  000136                     	ds	54
   193  00016C                     _ToMainLow_MQ:
   194                           	opt stack 0
   195  00016C                     	ds	54
   196                           tblptru	equ	0xFF8
   197                           postinc0	equ	0xFEE
   198                           wreg	equ	0xFE8
   199                           
   200                           	psect	bssBANK2
   201  000200                     __pbssBANK2:
   202                           	opt stack 0
   203  000200                     _FromMainHigh_MQ:
   204                           	opt stack 0
   205  000200                     	ds	54
   206                           tblptru	equ	0xFF8
   207                           postinc0	equ	0xFEE
   208                           wreg	equ	0xFE8
   209                           
   210                           	psect	cstackBANK1
   211  0001A2                     __pcstackBANK1:
   212                           	opt stack 0
   213  0001A2                     send_msg@qptr:
   214                           	opt stack 0
   215  0001A2                     recv_msg@qptr:
   216                           	opt stack 0
   217                           
   218                           ; 2 bytes @ 0x0
   219  0001A2                     	ds	2
   220  0001A4                     send_msg@length:
   221                           	opt stack 0
   222  0001A4                     recv_msg@maxlength:
   223                           	opt stack 0
   224                           
   225                           ; 1 bytes @ 0x2
   226  0001A4                     	ds	1
   227  0001A5                     send_msg@msgtype:
   228                           	opt stack 0
   229  0001A5                     recv_msg@msgtype:
   230                           	opt stack 0
   231                           
   232                           ; 2 bytes @ 0x3
   233  0001A5                     	ds	1
   234  0001A6                     send_msg@data:
   235                           	opt stack 0
   236                           
   237                           ; 2 bytes @ 0x4
   238  0001A6                     	ds	1
   239  0001A7                     recv_msg@data:
   240                           	opt stack 0
   241                           
   242                           ; 2 bytes @ 0x5
   243  0001A7                     	ds	1
   244  0001A8                     send_msg@tlength:
   245                           	opt stack 0
   246                           
   247                           ; 2 bytes @ 0x6
   248  0001A8                     	ds	1
   249  0001A9                     recv_msg@slot:
   250                           	opt stack 0
   251                           
   252                           ; 1 bytes @ 0x7
   253  0001A9                     	ds	1
   254  0001AA                     send_msg@slot:
   255                           	opt stack 0
   256  0001AA                     recv_msg@tlength:
   257                           	opt stack 0
   258                           
   259                           ; 2 bytes @ 0x8
   260  0001AA                     	ds	1
   261  0001AB                     send_msg@qmsg:
   262                           	opt stack 0
   263                           
   264                           ; 2 bytes @ 0x9
   265  0001AB                     	ds	1
   266  0001AC                     recv_msg@qmsg:
   267                           	opt stack 0
   268                           
   269                           ; 2 bytes @ 0xA
   270  0001AC                     	ds	1
   271  0001AD                     FromMainHigh_sendmsg@msgtype:
   272                           	opt stack 0
   273                           
   274                           ; 1 bytes @ 0xB
   275  0001AD                     	ds	1
   276  0001AE                     ToMainLow_recvmsg@msgtype:
   277                           	opt stack 0
   278  0001AE                     ToMainHigh_recvmsg@msgtype:
   279                           	opt stack 0
   280  0001AE                     FromMainHigh_sendmsg@data:
   281                           	opt stack 0
   282                           
   283                           ; 2 bytes @ 0xC
   284  0001AE                     	ds	2
   285  0001B0                     ToMainLow_recvmsg@data:
   286                           	opt stack 0
   287  0001B0                     ToMainHigh_recvmsg@data:
   288                           	opt stack 0
   289  0001B0                     timer1_lthread@tptr:
   290                           	opt stack 0
   291                           
   292                           ; 2 bytes @ 0xE
   293  0001B0                     	ds	2
   294  0001B2                     timer1_lthread@msgtype:
   295                           	opt stack 0
   296                           
   297                           ; 2 bytes @ 0x10
   298  0001B2                     	ds	2
   299  0001B4                     timer1_lthread@length:
   300                           	opt stack 0
   301                           
   302                           ; 2 bytes @ 0x12
   303  0001B4                     	ds	2
   304  0001B6                     timer1_lthread@msgbuffer:
   305                           	opt stack 0
   306                           
   307                           ; 2 bytes @ 0x14
   308  0001B6                     	ds	2
   309  0001B8                     main@queue_data:
   310                           	opt stack 0
   311                           
   312                           ; 2 bytes @ 0x16
   313  0001B8                     	ds	2
   314  0001BA                     main@msgbuffer:
   315                           	opt stack 0
   316                           
   317                           ; 11 bytes @ 0x18
   318  0001BA                     	ds	11
   319  0001C5                     main@t0thread_data:
   320                           	opt stack 0
   321                           
   322                           ; 2 bytes @ 0x23
   323  0001C5                     	ds	2
   324  0001C7                     main@last_reg_recvd:
   325                           	opt stack 0
   326                           
   327                           ; 1 bytes @ 0x25
   328  0001C7                     	ds	1
   329  0001C8                     main@t1thread_data:
   330                           	opt stack 0
   331                           
   332                           ; 2 bytes @ 0x26
   333  0001C8                     	ds	2
   334  0001CA                     main@uc:
   335                           	opt stack 0
   336                           
   337                           ; 5 bytes @ 0x28
   338  0001CA                     	ds	5
   339  0001CF                     main@uthread_data:
   340                           	opt stack 0
   341                           
   342                           ; 5 bytes @ 0x2D
   343  0001CF                     	ds	5
   344  0001D4                     main@length:
   345                           	opt stack 0
   346                           
   347                           ; 1 bytes @ 0x32
   348  0001D4                     	ds	1
   349  0001D5                     main@msgtype:
   350                           	opt stack 0
   351                           
   352                           ; 1 bytes @ 0x33
   353  0001D5                     	ds	1
   354  0001D6                     main@ic:
   355                           	opt stack 0
   356                           
   357                           ; 28 bytes @ 0x34
   358  0001D6                     	ds	28
   359                           tblptru	equ	0xFF8
   360                           postinc0	equ	0xFEE
   361                           wreg	equ	0xFE8
   362                           
   363                           	psect	cstackBANK0
   364  000080                     __pcstackBANK0:
   365                           	opt stack 0
   366  000080                     ___ftdiv@cntr:
   367                           	opt stack 0
   368  000080                     timer0_int_handler@length:
   369                           	opt stack 0
   370  000080                     i2c_int_handler@error_buf:
   371                           	opt stack 0
   372                           
   373                           ; 3 bytes @ 0x0
   374  000080                     	ds	1
   375  000081                     ___ftdiv@f3:
   376                           	opt stack 0
   377                           
   378                           ; 3 bytes @ 0x1
   379  000081                     	ds	1
   380  000082                     timer0_int_handler@msgtype:
   381                           	opt stack 0
   382                           
   383                           ; 2 bytes @ 0x2
   384  000082                     	ds	1
   385  000083                     i2c_int_handler@data_written:
   386                           	opt stack 0
   387                           
   388                           ; 1 bytes @ 0x3
   389  000083                     	ds	1
   390  000084                     i2c_int_handler@overrun_error:
   391                           	opt stack 0
   392  000084                     ___ftdiv@exp:
   393                           	opt stack 0
   394  000084                     timer0_int_handler@val:
   395                           	opt stack 0
   396                           
   397                           ; 2 bytes @ 0x4
   398  000084                     	ds	1
   399  000085                     i2c_int_handler@i2c_data:
   400                           	opt stack 0
   401  000085                     ___ftdiv@sign:
   402                           	opt stack 0
   403                           
   404                           ; 1 bytes @ 0x5
   405  000085                     	ds	1
   406  000086                     ?___ftmul:
   407                           	opt stack 0
   408  000086                     i2c_int_handler@msg_to_send:
   409                           	opt stack 0
   410  000086                     ___ftmul@f1:
   411                           	opt stack 0
   412                           
   413                           ; 3 bytes @ 0x6
   414  000086                     	ds	1
   415  000087                     i2c_int_handler@msg_ready:
   416                           	opt stack 0
   417                           
   418                           ; 1 bytes @ 0x7
   419  000087                     	ds	1
   420  000088                     i2c_int_handler@data_read:
   421                           	opt stack 0
   422                           
   423                           ; 1 bytes @ 0x8
   424  000088                     	ds	1
   425  000089                     ___ftmul@f2:
   426                           	opt stack 0
   427                           
   428                           ; 3 bytes @ 0x9
   429  000089                     	ds	3
   430  00008C                     ??___ftmul:
   431                           
   432                           ; 0 bytes @ 0xC
   433  00008C                     	ds	3
   434  00008F                     ___ftmul@exp:
   435                           	opt stack 0
   436                           
   437                           ; 1 bytes @ 0xF
   438  00008F                     	ds	1
   439  000090                     ___ftmul@f3_as_product:
   440                           	opt stack 0
   441                           
   442                           ; 3 bytes @ 0x10
   443  000090                     	ds	3
   444  000093                     ___ftmul@cntr:
   445                           	opt stack 0
   446                           
   447                           ; 1 bytes @ 0x13
   448  000093                     	ds	1
   449  000094                     ___ftmul@sign:
   450                           	opt stack 0
   451                           
   452                           ; 1 bytes @ 0x14
   453  000094                     	ds	1
   454  000095                     ?___fttol:
   455                           	opt stack 0
   456  000095                     ___fttol@f1:
   457                           	opt stack 0
   458                           
   459                           ; 3 bytes @ 0x15
   460  000095                     	ds	4
   461  000099                     ??___fttol:
   462                           
   463                           ; 0 bytes @ 0x19
   464  000099                     	ds	5
   465  00009E                     ___fttol@sign1:
   466                           	opt stack 0
   467                           
   468                           ; 1 bytes @ 0x1E
   469  00009E                     	ds	1
   470  00009F                     ___fttol@lval:
   471                           	opt stack 0
   472                           
   473                           ; 4 bytes @ 0x1F
   474  00009F                     	ds	4
   475  0000A3                     ___fttol@exp1:
   476                           	opt stack 0
   477                           
   478                           ; 1 bytes @ 0x23
   479  0000A3                     	ds	1
   480  0000A4                     ??_InterruptHandlerHigh:
   481                           
   482                           ; 0 bytes @ 0x24
   483  0000A4                     	ds	18
   484  0000B6                     InterruptHandlerHigh@a_d_result:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0x36
   488  0000B6                     	ds	2
   489  0000B8                     ?_in_high_int:
   490                           	opt stack 0
   491  0000B8                     ?___lwmod:
   492                           	opt stack 0
   493  0000B8                     i2c_configure_slave@addr:
   494                           	opt stack 0
   495  0000B8                     OpenTimer0@config:
   496                           	opt stack 0
   497  0000B8                     OpenTimer1@config:
   498                           	opt stack 0
   499  0000B8                     Delay1KTCYx@unit:
   500                           	opt stack 0
   501  0000B8                     init_queue@qptr:
   502                           	opt stack 0
   503  0000B8                     check_msg@qptr:
   504                           	opt stack 0
   505  0000B8                     start_i2c_slave_reply@msg:
   506                           	opt stack 0
   507  0000B8                     init_i2c@ic:
   508                           	opt stack 0
   509  0000B8                     init_uart_recv@uc:
   510                           	opt stack 0
   511  0000B8                     timer0_lthread@tptr:
   512                           	opt stack 0
   513  0000B8                     init_timer1_lthread@tptr:
   514                           	opt stack 0
   515  0000B8                     uart_lthread@uptr:
   516                           	opt stack 0
   517  0000B8                     OpenUSART@spbrg:
   518                           	opt stack 0
   519  0000B8                     ___lwmod@dividend:
   520                           	opt stack 0
   521  0000B8                     memcpy@d1:
   522                           	opt stack 0
   523                           
   524                           ; 2 bytes @ 0x38
   525  0000B8                     	ds	2
   526  0000BA                     ??_OpenUSART:
   527  0000BA                     ??_check_msg:
   528  0000BA                     ??_start_i2c_slave_reply:
   529  0000BA                     ?_in_low_int:
   530                           	opt stack 0
   531  0000BA                     init_queue@i:
   532                           	opt stack 0
   533  0000BA                     timer0_lthread@msgtype:
   534                           	opt stack 0
   535  0000BA                     uart_lthread@msgtype:
   536                           	opt stack 0
   537  0000BA                     ___lwmod@divisor:
   538                           	opt stack 0
   539  0000BA                     memcpy@s1:
   540                           	opt stack 0
   541                           
   542                           ; 2 bytes @ 0x3A
   543  0000BA                     	ds	1
   544  0000BB                     
   545                           ; 0 bytes @ 0x3B
   546  0000BB                     	ds	1
   547  0000BC                     ?_in_main:
   548                           	opt stack 0
   549  0000BC                     start_i2c_slave_reply@length:
   550                           	opt stack 0
   551  0000BC                     ___lwmod@counter:
   552                           	opt stack 0
   553  0000BC                     timer0_lthread@length:
   554                           	opt stack 0
   555  0000BC                     uart_lthread@length:
   556                           	opt stack 0
   557  0000BC                     memcpy@n:
   558                           	opt stack 0
   559                           
   560                           ; 2 bytes @ 0x3C
   561  0000BC                     	ds	1
   562  0000BD                     OpenUSART@config:
   563                           	opt stack 0
   564                           
   565                           ; 1 bytes @ 0x3D
   566  0000BD                     	ds	1
   567  0000BE                     timer0_lthread@msgbuffer:
   568                           	opt stack 0
   569  0000BE                     uart_lthread@msgbuffer:
   570                           	opt stack 0
   571  0000BE                     memcpy@d:
   572                           	opt stack 0
   573                           
   574                           ; 2 bytes @ 0x3E
   575  0000BE                     	ds	2
   576  0000C0                     timer0_lthread@msgval:
   577                           	opt stack 0
   578  0000C0                     memcpy@s:
   579                           	opt stack 0
   580                           
   581                           ; 2 bytes @ 0x40
   582  0000C0                     	ds	2
   583  0000C2                     ??_send_msg:
   584  0000C2                     ??_recv_msg:
   585                           
   586                           ; 0 bytes @ 0x42
   587  0000C2                     	ds	1
   588  0000C3                     FromMainHigh_sendmsg@length:
   589                           	opt stack 0
   590                           
   591                           ; 1 bytes @ 0x43
   592  0000C3                     	ds	1
   593  0000C4                     ToMainLow_recvmsg@maxlength:
   594                           	opt stack 0
   595  0000C4                     ToMainHigh_recvmsg@maxlength:
   596                           	opt stack 0
   597  0000C4                     timer1_lthread@retval:
   598                           	opt stack 0
   599                           
   600                           ; 1 bytes @ 0x44
   601  0000C4                     	ds	1
   602  0000C5                     tblptru	equ	0xFF8
   603                           postinc0	equ	0xFEE
   604                           wreg	equ	0xFE8
   605                           
   606                           ; 0 bytes @ 0x45
   607                           
   608                           	psect	cstackCOMRAM
   609  000001                     __pcstackCOMRAM:
   610                           	opt stack 0
   611  000001                     ?_ReadTimer1:
   612                           	opt stack 0
   613  000001                     ReadUSART@data:
   614                           	opt stack 0
   615  000001                     WriteTimer1@timer1:
   616                           	opt stack 0
   617  000001                     i1memcpy@d1:
   618                           	opt stack 0
   619                           
   620                           ; 2 bytes @ 0x0
   621  000001                     	ds	2
   622  000003                     ReadTimer1@timer:
   623                           	opt stack 0
   624  000003                     WriteTimer1@timer:
   625                           	opt stack 0
   626  000003                     i1memcpy@s1:
   627                           	opt stack 0
   628                           
   629                           ; 2 bytes @ 0x2
   630  000003                     	ds	2
   631  000005                     i1memcpy@n:
   632                           	opt stack 0
   633                           
   634                           ; 2 bytes @ 0x4
   635  000005                     	ds	2
   636  000007                     i1memcpy@d:
   637                           	opt stack 0
   638                           
   639                           ; 2 bytes @ 0x6
   640  000007                     	ds	2
   641  000009                     i1memcpy@s:
   642                           	opt stack 0
   643                           
   644                           ; 2 bytes @ 0x8
   645  000009                     	ds	2
   646  00000B                     i1send_msg@qptr:
   647                           	opt stack 0
   648                           
   649                           ; 2 bytes @ 0xA
   650  00000B                     	ds	2
   651  00000D                     i1send_msg@length:
   652                           	opt stack 0
   653                           
   654                           ; 1 bytes @ 0xC
   655  00000D                     	ds	1
   656  00000E                     i1send_msg@msgtype:
   657                           	opt stack 0
   658                           
   659                           ; 1 bytes @ 0xD
   660  00000E                     	ds	1
   661  00000F                     i1send_msg@data:
   662                           	opt stack 0
   663                           
   664                           ; 2 bytes @ 0xE
   665  00000F                     	ds	2
   666  000011                     ??i1_send_msg:
   667                           
   668                           ; 0 bytes @ 0x10
   669  000011                     	ds	1
   670  000012                     i1send_msg@tlength:
   671                           	opt stack 0
   672                           
   673                           ; 2 bytes @ 0x11
   674  000012                     	ds	2
   675  000014                     i1send_msg@slot:
   676                           	opt stack 0
   677                           
   678                           ; 1 bytes @ 0x13
   679  000014                     	ds	1
   680  000015                     i1send_msg@qmsg:
   681                           	opt stack 0
   682                           
   683                           ; 2 bytes @ 0x14
   684  000015                     	ds	2
   685  000017                     ToMainLow_sendmsg@msgtype:
   686                           	opt stack 0
   687                           
   688                           ; 1 bytes @ 0x16
   689  000017                     	ds	1
   690  000018                     ToMainLow_sendmsg@data:
   691                           	opt stack 0
   692                           
   693                           ; 2 bytes @ 0x17
   694  000018                     	ds	2
   695  00001A                     ToMainLow_sendmsg@length:
   696                           	opt stack 0
   697                           
   698                           ; 1 bytes @ 0x19
   699  00001A                     	ds	1
   700  00001B                     ??_uart_recv_int_handler:
   701  00001B                     timer1_int_handler@result:
   702                           	opt stack 0
   703                           
   704                           ; 2 bytes @ 0x1A
   705  00001B                     	ds	2
   706  00001D                     ??_InterruptHandlerLow:
   707                           
   708                           ; 0 bytes @ 0x1C
   709  00001D                     	ds	17
   710  00002E                     ?i2_in_high_int:
   711                           	opt stack 0
   712  00002E                     ?___ftpack:
   713                           	opt stack 0
   714  00002E                     handle_start@data_read:
   715                           	opt stack 0
   716  00002E                     WriteTimer0@timer0:
   717                           	opt stack 0
   718  00002E                     i2check_msg@qptr:
   719                           	opt stack 0
   720  00002E                     i2memcpy@d1:
   721                           	opt stack 0
   722  00002E                     ___ftpack@arg:
   723                           	opt stack 0
   724                           
   725                           ; 3 bytes @ 0x2D
   726  00002E                     	ds	2
   727  000030                     ??i2_check_msg:
   728  000030                     ?i2_in_low_int:
   729                           	opt stack 0
   730  000030                     WriteTimer0@timer:
   731                           	opt stack 0
   732  000030                     i2memcpy@s1:
   733                           	opt stack 0
   734                           
   735                           ; 2 bytes @ 0x2F
   736  000030                     	ds	1
   737  000031                     ___ftpack@exp:
   738                           	opt stack 0
   739                           
   740                           ; 1 bytes @ 0x30
   741  000031                     	ds	1
   742  000032                     ___ftpack@sign:
   743                           	opt stack 0
   744  000032                     i2memcpy@n:
   745                           	opt stack 0
   746                           
   747                           ; 2 bytes @ 0x31
   748  000032                     	ds	1
   749  000033                     ??___ftpack:
   750                           
   751                           ; 0 bytes @ 0x32
   752  000033                     	ds	1
   753  000034                     i2memcpy@d:
   754                           	opt stack 0
   755                           
   756                           ; 2 bytes @ 0x33
   757  000034                     	ds	2
   758  000036                     ?___lwtoft:
   759                           	opt stack 0
   760  000036                     ___lwtoft@c:
   761                           	opt stack 0
   762  000036                     i2memcpy@s:
   763                           	opt stack 0
   764                           
   765                           ; 2 bytes @ 0x35
   766  000036                     	ds	2
   767  000038                     i2send_msg@qptr:
   768                           	opt stack 0
   769  000038                     i2recv_msg@qptr:
   770                           	opt stack 0
   771                           
   772                           ; 2 bytes @ 0x37
   773  000038                     	ds	1
   774  000039                     ?___ftadd:
   775                           	opt stack 0
   776  000039                     ___ftadd@f1:
   777                           	opt stack 0
   778                           
   779                           ; 3 bytes @ 0x38
   780  000039                     	ds	1
   781  00003A                     i2send_msg@length:
   782                           	opt stack 0
   783  00003A                     i2recv_msg@maxlength:
   784                           	opt stack 0
   785                           
   786                           ; 1 bytes @ 0x39
   787  00003A                     	ds	1
   788  00003B                     i2send_msg@msgtype:
   789                           	opt stack 0
   790  00003B                     i2recv_msg@msgtype:
   791                           	opt stack 0
   792                           
   793                           ; 2 bytes @ 0x3A
   794  00003B                     	ds	1
   795  00003C                     i2send_msg@data:
   796                           	opt stack 0
   797  00003C                     ___ftadd@f2:
   798                           	opt stack 0
   799                           
   800                           ; 3 bytes @ 0x3B
   801  00003C                     	ds	1
   802  00003D                     i2recv_msg@data:
   803                           	opt stack 0
   804                           
   805                           ; 2 bytes @ 0x3C
   806  00003D                     	ds	1
   807  00003E                     ??i2_send_msg:
   808                           
   809                           ; 0 bytes @ 0x3D
   810  00003E                     	ds	1
   811  00003F                     ??___ftadd:
   812  00003F                     ??i2_recv_msg:
   813  00003F                     i2send_msg@tlength:
   814                           	opt stack 0
   815                           
   816                           ; 2 bytes @ 0x3E
   817  00003F                     	ds	2
   818  000041                     i2send_msg@slot:
   819                           	opt stack 0
   820  000041                     i2recv_msg@slot:
   821                           	opt stack 0
   822                           
   823                           ; 1 bytes @ 0x40
   824  000041                     	ds	1
   825  000042                     ___ftadd@sign:
   826                           	opt stack 0
   827  000042                     i2send_msg@qmsg:
   828                           	opt stack 0
   829  000042                     i2recv_msg@tlength:
   830                           	opt stack 0
   831                           
   832                           ; 2 bytes @ 0x41
   833  000042                     	ds	1
   834  000043                     ___ftadd@exp2:
   835                           	opt stack 0
   836                           
   837                           ; 1 bytes @ 0x42
   838  000043                     	ds	1
   839  000044                     ToMainHigh_sendmsg@msgtype:
   840                           	opt stack 0
   841  000044                     ___ftadd@exp1:
   842                           	opt stack 0
   843  000044                     i2recv_msg@qmsg:
   844                           	opt stack 0
   845                           
   846                           ; 2 bytes @ 0x43
   847  000044                     	ds	1
   848  000045                     ?___ftdiv:
   849                           	opt stack 0
   850  000045                     ToMainHigh_sendmsg@data:
   851                           	opt stack 0
   852  000045                     ___ftdiv@f1:
   853                           	opt stack 0
   854                           
   855                           ; 3 bytes @ 0x44
   856  000045                     	ds	1
   857  000046                     FromMainHigh_recvmsg@msgtype:
   858                           	opt stack 0
   859                           
   860                           ; 2 bytes @ 0x45
   861  000046                     	ds	1
   862  000047                     ToMainHigh_sendmsg@length:
   863                           	opt stack 0
   864                           
   865                           ; 1 bytes @ 0x46
   866  000047                     	ds	1
   867  000048                     ??_i2c_int_handler:
   868  000048                     FromMainHigh_recvmsg@data:
   869                           	opt stack 0
   870  000048                     ___ftdiv@f2:
   871                           	opt stack 0
   872                           
   873                           ; 3 bytes @ 0x47
   874  000048                     	ds	2
   875  00004A                     FromMainHigh_recvmsg@maxlength:
   876                           	opt stack 0
   877                           
   878                           ; 1 bytes @ 0x49
   879  00004A                     	ds	1
   880  00004B                     ??___ftdiv:
   881                           
   882                           ; 0 bytes @ 0x4A
   883  00004B                     	ds	3
   884                           tblptru	equ	0xFF8
   885                           postinc0	equ	0xFEE
   886                           wreg	equ	0xFE8
   887                           
   888 ;;
   889 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   890 ;;
   891 ;; *************** function _main *****************
   892 ;; Defined at:
   893 ;;		line 187 in file "../src/main.c"
   894 ;; Parameters:    Size  Location     Type
   895 ;;		None
   896 ;; Auto vars:     Size  Location     Type
   897 ;;  ic             28   52[BANK1 ] struct __i2c_comm
   898 ;;  msgbuffer      11   24[BANK1 ] unsigned char [11]
   899 ;;  uthread_data    5   45[BANK1 ] struct __uart_thread_str
   900 ;;  uc              5   40[BANK1 ] struct __uart_comm
   901 ;;  t1thread_dat    2   38[BANK1 ] struct __timer1_thread_s
   902 ;;  t0thread_dat    2   35[BANK1 ] struct __timer0_thread_s
   903 ;;  queue_data      2   22[BANK1 ] unsigned short 
   904 ;;  msgtype         1   51[BANK1 ] unsigned char 
   905 ;;  length          1   50[BANK1 ] char 
   906 ;;  last_reg_rec    1   37[BANK1 ] unsigned char 
   907 ;;  i               1    0        unsigned char 
   908 ;;  c               1    0        unsigned char 
   909 ;; Return value:  Size  Location     Type
   910 ;;		None               void
   911 ;; Registers used:
   912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   913 ;; Tracked objects:
   914 ;;		On entry : 0/0
   915 ;;		On exit  : 0/0
   916 ;;		Unchanged: 0/0
   917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   918 ;;      Params:         0       0       0       0       0
   919 ;;      Locals:         0       0      58       0       0
   920 ;;      Temps:          0       0       0       0       0
   921 ;;      Totals:         0       0      58       0       0
   922 ;;Total ram usage:       58 bytes
   923 ;; Hardware stack levels required when called:   14
   924 ;; This function calls:
   925 ;;		_OpenTimer0
   926 ;;		_OpenTimer1
   927 ;;		_OpenUSART
   928 ;;		_ToMainHigh_recvmsg
   929 ;;		_ToMainLow_recvmsg
   930 ;;		_block_on_To_msgqueues
   931 ;;		_enable_interrupts
   932 ;;		_i2c_configure_slave
   933 ;;		_init_debug
   934 ;;		_init_i2c
   935 ;;		_init_queues
   936 ;;		_init_timer1_lthread
   937 ;;		_init_uart_recv
   938 ;;		_start_i2c_slave_reply
   939 ;;		_timer0_lthread
   940 ;;		_timer1_lthread
   941 ;;		_uart_lthread
   942 ;; This function is called by:
   943 ;;		Startup code after reset
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           	psect	text0
   948  000604                     __ptext0:
   949                           	opt stack 0
   950  000604                     _main:
   951                           	opt stack 17
   952                           
   953                           ;main.c: 188: char c;
   954                           ;main.c: 189: unsigned short int queue_data;
   955                           ;main.c: 190: signed char length;
   956                           ;main.c: 191: unsigned char msgtype;
   957                           ;main.c: 192: unsigned char last_reg_recvd;
   958                           ;main.c: 193: uart_comm uc;
   959                           ;main.c: 194: i2c_comm ic;
   960                           ;main.c: 195: unsigned char msgbuffer[10 + 1];
   961                           ;main.c: 196: unsigned char i;
   962                           ;main.c: 197: uart_thread_struct uthread_data;
   963                           ;main.c: 198: timer1_thread_struct t1thread_data;
   964                           ;main.c: 199: timer0_thread_struct t0thread_data;
   965                           ;main.c: 209: OSCCON = 0x82;
   966                           
   967                           ;incstack = 0
   968  000604  0E82               	movlw	130
   969  000606  6ED3               	movwf	4051,c	;volatile
   970                           
   971                           ;main.c: 210: OSCTUNEbits.PLLEN = 0;
   972  000608  9C9B               	bcf	3995,6,c	;volatile
   973                           
   974                           ;main.c: 228: init_debug();
   975  00060A  EC4D  F00F         	call	_init_debug	;wreg free
   976                           
   977                           ;main.c: 231: init_uart_recv(&uc);
   978  00060E  0101               	movlb	1	; () banked
   979  000610  0E01               	movlw	high main@uc
   980  000612  0100               	movlb	0	; () banked
   981  000614  6FB9               	movwf	(init_uart_recv@uc+1)& (0+255),b
   982  000616  0101               	movlb	1	; () banked
   983  000618  0ECA               	movlw	low main@uc
   984  00061A  0100               	movlb	0	; () banked
   985  00061C  6FB8               	movwf	init_uart_recv@uc& (0+255),b
   986  00061E  EC1C  F00F         	call	_init_uart_recv	;wreg free
   987                           
   988                           ;main.c: 234: init_i2c(&ic);
   989  000622  0101               	movlb	1	; () banked
   990  000624  0E01               	movlw	high main@ic
   991  000626  0100               	movlb	0	; () banked
   992  000628  6FB9               	movwf	(init_i2c@ic+1)& (0+255),b
   993  00062A  0101               	movlb	1	; () banked
   994  00062C  0ED6               	movlw	low main@ic
   995  00062E  0100               	movlb	0	; () banked
   996  000630  6FB8               	movwf	init_i2c@ic& (0+255),b
   997  000632  ECC2  F00B         	call	_init_i2c	;wreg free
   998                           
   999                           ;main.c: 237: init_timer1_lthread(&t1thread_data);
  1000  000636  0101               	movlb	1	; () banked
  1001  000638  0E01               	movlw	high main@t1thread_data
  1002  00063A  0100               	movlb	0	; () banked
  1003  00063C  6FB9               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1004  00063E  0101               	movlb	1	; () banked
  1005  000640  0EC8               	movlw	low main@t1thread_data
  1006  000642  0100               	movlb	0	; () banked
  1007  000644  6FB8               	movwf	init_timer1_lthread@tptr& (0+255),b
  1008  000646  EC44  F00F         	call	_init_timer1_lthread	;wreg free
  1009                           
  1010                           ;main.c: 240: init_queues();
  1011  00064A  ECE2  F00C         	call	_init_queues	;wreg free
  1012                           
  1013                           ;main.c: 244: TRISB = 0x0;
  1014  00064E  0E00               	movlw	0
  1015  000650  6E93               	movwf	3987,c	;volatile
  1016                           
  1017                           ;main.c: 245: LATB = 0x0;
  1018  000652  0E00               	movlw	0
  1019  000654  6E8A               	movwf	3978,c	;volatile
  1020                           
  1021                           ;main.c: 258: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110110);
  1022  000656  0E96               	movlw	150
  1023  000658  ECC1  F00E         	call	_OpenTimer0
  1024                           
  1025                           ;main.c: 267: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
  1026  00065C  0EF5               	movlw	245
  1027  00065E  EC28  F00E         	call	_OpenTimer1
  1028                           
  1029                           ;main.c: 274: IPR1bits.TMR1IP = 0;
  1030  000662  909F               	bcf	3999,0,c	;volatile
  1031                           
  1032                           ;main.c: 276: IPR1bits.RCIP = 0;
  1033  000664  9A9F               	bcf	3999,5,c	;volatile
  1034                           
  1035                           ;main.c: 278: IPR1bits.SSPIP = 1;
  1036  000666  869F               	bsf	3999,3,c	;volatile
  1037                           
  1038                           ;main.c: 287: i2c_configure_slave(0x80);
  1039  000668  0E80               	movlw	128
  1040  00066A  EC86  F00E         	call	_i2c_configure_slave
  1041                           
  1042                           ;main.c: 303: PIE1bits.SSPIE = 1;
  1043  00066E  869D               	bsf	3997,3,c	;volatile
  1044                           
  1045                           ;main.c: 348: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1046                           ;main.c: 349: 0b11111111 & 0b11101111, 0x19);
  1047  000670  0E00               	movlw	0
  1048  000672  0100               	movlb	0	; () banked
  1049  000674  6FB9               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1050  000676  0E19               	movlw	25
  1051  000678  0100               	movlb	0	; () banked
  1052  00067A  6FB8               	movwf	OpenUSART@spbrg& (0+255),b
  1053  00067C  0E6C               	movlw	108
  1054  00067E  EC44  F00B         	call	_OpenUSART
  1055                           
  1056                           ;main.c: 355: enable_interrupts();
  1057  000682  EC86  F00F         	call	_enable_interrupts	;wreg free
  1058  000686                     l3794:
  1059                           
  1060                           ;main.c: 379: block_on_To_msgqueues();
  1061  000686  EC86  F00C         	call	_block_on_To_msgqueues	;wreg free
  1062                           
  1063                           ;main.c: 386: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1064  00068A  0101               	movlb	1	; () banked
  1065  00068C  0E01               	movlw	high main@msgtype
  1066  00068E  0101               	movlb	1	; () banked
  1067  000690  6FAF               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1068  000692  0101               	movlb	1	; () banked
  1069  000694  0ED5               	movlw	low main@msgtype
  1070  000696  0101               	movlb	1	; () banked
  1071  000698  6FAE               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1072  00069A  0101               	movlb	1	; () banked
  1073  00069C  0E01               	movlw	high main@msgbuffer
  1074  00069E  0101               	movlb	1	; () banked
  1075  0006A0  6FB1               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1076  0006A2  0101               	movlb	1	; () banked
  1077  0006A4  0EBA               	movlw	low main@msgbuffer
  1078  0006A6  0101               	movlb	1	; () banked
  1079  0006A8  6FB0               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1080  0006AA  0E0A               	movlw	10
  1081  0006AC  ECF4  F00D         	call	_ToMainHigh_recvmsg
  1082  0006B0  0101               	movlb	1	; () banked
  1083  0006B2  6FD4               	movwf	main@length& (0+255),b
  1084                           
  1085                           ; BSR set to: 1
  1086                           ;main.c: 387: if (length < 0) {
  1087  0006B4  0101               	movlb	1	; () banked
  1088  0006B6  BFD4               	btfsc	main@length& (0+255),7,b
  1089  0006B8  D063               	goto	l3822
  1090  0006BA  D051               	goto	l3820
  1091  0006BC                     l3802:
  1092                           
  1093                           ; BSR set to: 1
  1094                           ;main.c: 395: {
  1095                           ;main.c: 396: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1096  0006BC  0101               	movlb	1	; () banked
  1097  0006BE  0E01               	movlw	high main@t0thread_data
  1098  0006C0  0100               	movlb	0	; () banked
  1099  0006C2  6FB9               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1100  0006C4  0101               	movlb	1	; () banked
  1101  0006C6  0EC5               	movlw	low main@t0thread_data
  1102  0006C8  0100               	movlb	0	; () banked
  1103  0006CA  6FB8               	movwf	timer0_lthread@tptr& (0+255),b
  1104  0006CC  0101               	movlb	1	; () banked
  1105  0006CE  0100               	movlb	0	; () banked
  1106  0006D0  C1D5  F0BA         	movff	main@msgtype,timer0_lthread@msgtype
  1107  0006D4  0100               	movlb	0	; () banked
  1108  0006D6  6BBB               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1109  0006D8  0101               	movlb	1	; () banked
  1110  0006DA  51D4               	movf	main@length& (0+255),w,b
  1111  0006DC  0100               	movlb	0	; () banked
  1112  0006DE  6FBC               	movwf	timer0_lthread@length& (0+255),b
  1113  0006E0  0100               	movlb	0	; () banked
  1114  0006E2  6BBD               	clrf	(timer0_lthread@length+1)& (0+255),b
  1115  0006E4  0100               	movlb	0	; () banked
  1116  0006E6  BFBC               	btfsc	timer0_lthread@length& (0+255),7,b
  1117  0006E8  07BD               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1118  0006EA  0101               	movlb	1	; () banked
  1119  0006EC  0E01               	movlw	high main@msgbuffer
  1120  0006EE  0100               	movlb	0	; () banked
  1121  0006F0  6FBF               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1122  0006F2  0101               	movlb	1	; () banked
  1123  0006F4  0EBA               	movlw	low main@msgbuffer
  1124  0006F6  0100               	movlb	0	; () banked
  1125  0006F8  6FBE               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1126  0006FA  EC79  F00F         	call	_timer0_lthread	;wreg free
  1127                           
  1128                           ;main.c: 397: break;
  1129  0006FE  D040               	goto	l3822
  1130  000700                     l362:
  1131                           
  1132                           ;main.c: 400: case 41:
  1133                           ;main.c: 401: {
  1134                           ;main.c: 404: last_reg_recvd = msgbuffer[0];
  1135  000700  C1BA  F1C7         	movff	main@msgbuffer,main@last_reg_recvd
  1136                           
  1137                           ;main.c: 405: break;
  1138  000704  D03D               	goto	l3822
  1139  000706                     l363:
  1140                           
  1141                           ; BSR set to: 1
  1142                           ;main.c: 408: queue_data = *(unsigned short int*) msgbuffer;
  1143  000706  C1BA  F1B8         	movff	main@msgbuffer,main@queue_data
  1144  00070A  C1BB  F1B9         	movff	main@msgbuffer+1,main@queue_data+1
  1145                           
  1146                           ;main.c: 409: break;
  1147  00070E  D038               	goto	l3822
  1148  000710                     l3804:
  1149                           
  1150                           ; BSR set to: 1
  1151                           ;main.c: 421: {
  1152                           ;main.c: 422: length = 2;
  1153  000710  0E02               	movlw	2
  1154  000712  0101               	movlb	1	; () banked
  1155  000714  6FD4               	movwf	main@length& (0+255),b
  1156                           
  1157                           ; BSR set to: 1
  1158                           ;main.c: 423: msgbuffer[0] = queue_data | 0xFF;
  1159  000716  0101               	movlb	1	; () banked
  1160  000718  69BA               	setf	main@msgbuffer& (0+255),b
  1161                           
  1162                           ; BSR set to: 1
  1163                           ;main.c: 424: msgbuffer[1] = (queue_data >> 8) | 0xFF;
  1164  00071A  0101               	movlb	1	; () banked
  1165  00071C  69BB               	setf	(main@msgbuffer+1)& (0+255),b
  1166                           
  1167                           ;main.c: 425: break;
  1168  00071E  D005               	goto	l367
  1169  000720                     l3812:
  1170                           
  1171                           ; BSR set to: 1
  1172  000720  0101               	movlb	1	; () banked
  1173  000722  51C7               	movf	main@last_reg_recvd& (0+255),w,b
  1174                           
  1175                           ; Switch size 1, requested type "space"
  1176                           ; Number of cases is 1, Range of values is 170 to 170
  1177                           ; switch strategies available:
  1178                           ; Name         Instructions Cycles
  1179                           ; simple_byte            4     3 (average)
  1180                           ;	Chosen strategy is simple_byte
  1181  000724  0AAA               	xorlw	170	; case 170
  1182  000726  B4D8               	btfsc	status,2,c
  1183  000728  D7F3               	goto	l3804
  1184  00072A                     l367:
  1185                           
  1186                           ; BSR set to: 1
  1187                           ;main.c: 441: if (!uthread_data.read)
  1188  00072A  0101               	movlb	1	; () banked
  1189  00072C  67D1               	tstfsz	(main@uthread_data+2)& (0+255),b
  1190  00072E  D00D               	goto	l3816
  1191                           
  1192                           ; BSR set to: 1
  1193                           ;main.c: 442: start_i2c_slave_reply(uthread_data.size, uthread_data.data);
  1194  000730  0101               	movlb	1	; () banked
  1195  000732  0100               	movlb	0	; () banked
  1196  000734  C1D0  F0B9         	movff	main@uthread_data+1,start_i2c_slave_reply@msg+1
  1197  000738  0101               	movlb	1	; () banked
  1198  00073A  0100               	movlb	0	; () banked
  1199  00073C  C1CF  F0B8         	movff	main@uthread_data,start_i2c_slave_reply@msg
  1200  000740  0101               	movlb	1	; () banked
  1201  000742  51D2               	movf	(main@uthread_data+3)& (0+255),w,b
  1202  000744  EC36  F008         	call	_start_i2c_slave_reply
  1203  000748  D01B               	goto	l3822
  1204  00074A                     l3816:
  1205                           
  1206                           ;main.c: 443: else
  1207                           ;main.c: 444: start_i2c_slave_reply(0,0);
  1208  00074A  0E00               	movlw	0
  1209  00074C  0100               	movlb	0	; () banked
  1210  00074E  6FB9               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1211  000750  0E00               	movlw	0
  1212  000752  0100               	movlb	0	; () banked
  1213  000754  6FB8               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1214  000756  0E00               	movlw	0
  1215  000758  EC36  F008         	call	_start_i2c_slave_reply
  1216  00075C  D011               	goto	l3822
  1217  00075E                     l3820:
  1218  00075E  0101               	movlb	1	; () banked
  1219  000760  51D5               	movf	main@msgtype& (0+255),w,b
  1220                           
  1221                           ; Switch size 1, requested type "space"
  1222                           ; Number of cases is 5, Range of values is 10 to 51
  1223                           ; switch strategies available:
  1224                           ; Name         Instructions Cycles
  1225                           ; simple_byte           16     9 (average)
  1226                           ;	Chosen strategy is simple_byte
  1227  000762  0A0A               	xorlw	10	; case 10
  1228  000764  B4D8               	btfsc	status,2,c
  1229  000766  D7AA               	goto	l3802
  1230  000768  0A22               	xorlw	34	; case 40
  1231  00076A  B4D8               	btfsc	status,2,c
  1232  00076C  D7C9               	goto	l362
  1233  00076E  0A01               	xorlw	1	; case 41
  1234  000770  B4D8               	btfsc	status,2,c
  1235  000772  D7C6               	goto	l362
  1236  000774  0A03               	xorlw	3	; case 42
  1237  000776  B4D8               	btfsc	status,2,c
  1238  000778  D7D3               	goto	l3812
  1239  00077A  0A19               	xorlw	25	; case 51
  1240  00077C  B4D8               	btfsc	status,2,c
  1241  00077E  D7C3               	goto	l363
  1242  000780                     l3822:
  1243                           
  1244                           ;main.c: 453: }
  1245                           ;main.c: 456: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1246  000780  0101               	movlb	1	; () banked
  1247  000782  0E01               	movlw	high main@msgtype
  1248  000784  0101               	movlb	1	; () banked
  1249  000786  6FAF               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1250  000788  0101               	movlb	1	; () banked
  1251  00078A  0ED5               	movlw	low main@msgtype
  1252  00078C  0101               	movlb	1	; () banked
  1253  00078E  6FAE               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1254  000790  0101               	movlb	1	; () banked
  1255  000792  0E01               	movlw	high main@msgbuffer
  1256  000794  0101               	movlb	1	; () banked
  1257  000796  6FB1               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1258  000798  0101               	movlb	1	; () banked
  1259  00079A  0EBA               	movlw	low main@msgbuffer
  1260  00079C  0101               	movlb	1	; () banked
  1261  00079E  6FB0               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1262  0007A0  0E0A               	movlw	10
  1263  0007A2  ECD9  F00D         	call	_ToMainLow_recvmsg
  1264  0007A6  0101               	movlb	1	; () banked
  1265  0007A8  6FD4               	movwf	main@length& (0+255),b
  1266                           
  1267                           ; BSR set to: 1
  1268                           ;main.c: 457: if (length < 0) {
  1269  0007AA  0101               	movlb	1	; () banked
  1270  0007AC  BFD4               	btfsc	main@length& (0+255),7,b
  1271  0007AE  D76B               	goto	l3794
  1272  0007B0  D043               	goto	l3834
  1273  0007B2                     l3828:
  1274                           
  1275                           ; BSR set to: 1
  1276                           ;main.c: 465: {
  1277                           ;main.c: 466: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1278  0007B2  0101               	movlb	1	; () banked
  1279  0007B4  0E01               	movlw	high main@t1thread_data
  1280  0007B6  0101               	movlb	1	; () banked
  1281  0007B8  6FB1               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1282  0007BA  0101               	movlb	1	; () banked
  1283  0007BC  0EC8               	movlw	low main@t1thread_data
  1284  0007BE  0101               	movlb	1	; () banked
  1285  0007C0  6FB0               	movwf	timer1_lthread@tptr& (0+255),b
  1286  0007C2  0101               	movlb	1	; () banked
  1287  0007C4  C1D5  F1B2         	movff	main@msgtype,timer1_lthread@msgtype
  1288  0007C8  0101               	movlb	1	; () banked
  1289  0007CA  6BB3               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1290  0007CC  0101               	movlb	1	; () banked
  1291  0007CE  51D4               	movf	main@length& (0+255),w,b
  1292  0007D0  0101               	movlb	1	; () banked
  1293  0007D2  6FB4               	movwf	timer1_lthread@length& (0+255),b
  1294  0007D4  0101               	movlb	1	; () banked
  1295  0007D6  6BB5               	clrf	(timer1_lthread@length+1)& (0+255),b
  1296  0007D8  0101               	movlb	1	; () banked
  1297  0007DA  BFB4               	btfsc	timer1_lthread@length& (0+255),7,b
  1298  0007DC  07B5               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1299  0007DE  0101               	movlb	1	; () banked
  1300  0007E0  0E01               	movlw	high main@msgbuffer
  1301  0007E2  0101               	movlb	1	; () banked
  1302  0007E4  6FB7               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1303  0007E6  0101               	movlb	1	; () banked
  1304  0007E8  0EBA               	movlw	low main@msgbuffer
  1305  0007EA  0101               	movlb	1	; () banked
  1306  0007EC  6FB6               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1307  0007EE  EC57  F00C         	call	_timer1_lthread	;wreg free
  1308                           
  1309                           ;main.c: 467: break;
  1310  0007F2  D749               	goto	l3794
  1311  0007F4                     l3830:
  1312                           
  1313                           ;main.c: 470: case 31:
  1314                           ;main.c: 471: {
  1315                           ;main.c: 472: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1316  0007F4  0101               	movlb	1	; () banked
  1317  0007F6  0E01               	movlw	high main@uthread_data
  1318  0007F8  0100               	movlb	0	; () banked
  1319  0007FA  6FB9               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1320  0007FC  0101               	movlb	1	; () banked
  1321  0007FE  0ECF               	movlw	low main@uthread_data
  1322  000800  0100               	movlb	0	; () banked
  1323  000802  6FB8               	movwf	uart_lthread@uptr& (0+255),b
  1324  000804  0101               	movlb	1	; () banked
  1325  000806  0100               	movlb	0	; () banked
  1326  000808  C1D5  F0BA         	movff	main@msgtype,uart_lthread@msgtype
  1327  00080C  0100               	movlb	0	; () banked
  1328  00080E  6BBB               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1329  000810  0101               	movlb	1	; () banked
  1330  000812  51D4               	movf	main@length& (0+255),w,b
  1331  000814  0100               	movlb	0	; () banked
  1332  000816  6FBC               	movwf	uart_lthread@length& (0+255),b
  1333  000818  0100               	movlb	0	; () banked
  1334  00081A  6BBD               	clrf	(uart_lthread@length+1)& (0+255),b
  1335  00081C  0100               	movlb	0	; () banked
  1336  00081E  BFBC               	btfsc	uart_lthread@length& (0+255),7,b
  1337  000820  07BD               	decf	(uart_lthread@length+1)& (0+255),f,b
  1338  000822  0101               	movlb	1	; () banked
  1339  000824  0E01               	movlw	high main@msgbuffer
  1340  000826  0100               	movlb	0	; () banked
  1341  000828  6FBF               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1342  00082A  0101               	movlb	1	; () banked
  1343  00082C  0EBA               	movlw	low main@msgbuffer
  1344  00082E  0100               	movlb	0	; () banked
  1345  000830  6FBE               	movwf	uart_lthread@msgbuffer& (0+255),b
  1346  000832  EC85  F00B         	call	_uart_lthread	;wreg free
  1347                           
  1348                           ;main.c: 473: break;
  1349  000836  D727               	goto	l3794
  1350  000838                     l3834:
  1351  000838  0101               	movlb	1	; () banked
  1352  00083A  51D5               	movf	main@msgtype& (0+255),w,b
  1353                           
  1354                           ; Switch size 1, requested type "space"
  1355                           ; Number of cases is 3, Range of values is 11 to 31
  1356                           ; switch strategies available:
  1357                           ; Name         Instructions Cycles
  1358                           ; simple_byte           10     6 (average)
  1359                           ;	Chosen strategy is simple_byte
  1360  00083C  0A0B               	xorlw	11	; case 11
  1361  00083E  B4D8               	btfsc	status,2,c
  1362  000840  D7B8               	goto	l3828
  1363  000842  0A15               	xorlw	21	; case 30
  1364  000844  B4D8               	btfsc	status,2,c
  1365  000846  D7D6               	goto	l3830
  1366  000848  0A01               	xorlw	1	; case 31
  1367  00084A  B4D8               	btfsc	status,2,c
  1368  00084C  D7D3               	goto	l3830
  1369  00084E  D71B               	goto	l3794
  1370  000850                     __end_of_main:
  1371                           	opt stack 0
  1372                           tblptru	equ	0xFF8
  1373                           postinc0	equ	0xFEE
  1374                           wreg	equ	0xFE8
  1375                           status	equ	0xFD8
  1376                           
  1377 ;; *************** function _uart_lthread *****************
  1378 ;; Defined at:
  1379 ;;		line 9 in file "../src/uart_thread.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;  uptr            2   56[BANK0 ] PTR struct __uart_thread
  1382 ;;		 -> main@uthread_data(5), 
  1383 ;;  msgtype         2   58[BANK0 ] int 
  1384 ;;  length          2   60[BANK0 ] int 
  1385 ;;  msgbuffer       2   62[BANK0 ] PTR unsigned char 
  1386 ;;		 -> main@msgbuffer(11), 
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;		None
  1389 ;; Return value:  Size  Location     Type
  1390 ;;                  2   56[BANK0 ] int 
  1391 ;; Registers used:
  1392 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1393 ;; Tracked objects:
  1394 ;;		On entry : 0/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1398 ;;      Params:         0       8       0       0       0
  1399 ;;      Locals:         0       0       0       0       0
  1400 ;;      Temps:          0       0       0       0       0
  1401 ;;      Totals:         0       8       0       0       0
  1402 ;;Total ram usage:        8 bytes
  1403 ;; Hardware stack levels used:    1
  1404 ;; Hardware stack levels required when called:   10
  1405 ;; This function calls:
  1406 ;;		Nothing
  1407 ;; This function is called by:
  1408 ;;		_main
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           	psect	text1
  1413  00170A                     __ptext1:
  1414                           	opt stack 0
  1415  00170A                     _uart_lthread:
  1416                           	opt stack 20
  1417                           
  1418                           ;uart_thread.c: 10: if (msgtype == 30) {
  1419                           
  1420                           ; BSR set to: 1
  1421                           ;incstack = 0
  1422  00170A  0100               	movlb	0	; () banked
  1423  00170C  51BA               	movf	uart_lthread@msgtype& (0+255),w,b
  1424  00170E  0A1E               	xorlw	30
  1425  001710  11BB               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1426  001712  B4D8               	btfsc	status,2,c
  1427  001714  0012               	return	
  1428                           
  1429                           ; BSR set to: 0
  1430                           ;uart_thread.c: 12: else if (msgtype == 31) {
  1431                           
  1432                           ; BSR set to: 0
  1433                           
  1434                           ; BSR set to: 0
  1435                           ;uart_thread.c: 11: }
  1436  001716  0100               	movlb	0	; () banked
  1437  001718  51BA               	movf	uart_lthread@msgtype& (0+255),w,b
  1438  00171A  0A1F               	xorlw	31
  1439  00171C  11BB               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1440  00171E  A4D8               	btfss	status,2,c
  1441  001720  0012               	return	
  1442                           
  1443                           ; BSR set to: 0
  1444                           ;uart_thread.c: 15: msgbuffer[length] = '\0';
  1445  001722  0100               	movlb	0	; () banked
  1446  001724  51BC               	movf	uart_lthread@length& (0+255),w,b
  1447  001726  0100               	movlb	0	; () banked
  1448  001728  25BE               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1449  00172A  6ED9               	movwf	fsr2l,c
  1450  00172C  0100               	movlb	0	; () banked
  1451  00172E  51BD               	movf	(uart_lthread@length+1)& (0+255),w,b
  1452  001730  0100               	movlb	0	; () banked
  1453  001732  21BF               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1454  001734  6EDA               	movwf	fsr2h,c
  1455  001736  0E00               	movlw	0
  1456  001738  6EDF               	movwf	indf2,c
  1457                           
  1458                           ; BSR set to: 0
  1459                           ;uart_thread.c: 17: uptr->data = msgbuffer;
  1460  00173A  C0B8  FFD9         	movff	uart_lthread@uptr,fsr2l
  1461  00173E  C0B9  FFDA         	movff	uart_lthread@uptr+1,fsr2h
  1462  001742  0100               	movlb	0	; () banked
  1463  001744  C0BE  FFDE         	movff	uart_lthread@msgbuffer,postinc2
  1464  001748  0100               	movlb	0	; () banked
  1465  00174A  C0BF  FFDD         	movff	uart_lthread@msgbuffer+1,postdec2
  1466                           
  1467                           ; BSR set to: 0
  1468                           ;uart_thread.c: 18: uptr->read = 0;
  1469  00174E  0100               	movlb	0	; () banked
  1470  001750  EE20 F002          	lfsr	2,2
  1471  001754  0100               	movlb	0	; () banked
  1472  001756  51B8               	movf	uart_lthread@uptr& (0+255),w,b
  1473  001758  26D9               	addwf	fsr2l,f,c
  1474  00175A  0100               	movlb	0	; () banked
  1475  00175C  51B9               	movf	(uart_lthread@uptr+1)& (0+255),w,b
  1476  00175E  22DA               	addwfc	fsr2h,f,c
  1477  001760  0E00               	movlw	0
  1478  001762  6EDF               	movwf	indf2,c
  1479                           
  1480                           ; BSR set to: 0
  1481                           ;uart_thread.c: 19: uptr->size = length;
  1482  001764  0100               	movlb	0	; () banked
  1483  001766  EE20 F003          	lfsr	2,3
  1484  00176A  0100               	movlb	0	; () banked
  1485  00176C  51B8               	movf	uart_lthread@uptr& (0+255),w,b
  1486  00176E  26D9               	addwf	fsr2l,f,c
  1487  001770  0100               	movlb	0	; () banked
  1488  001772  51B9               	movf	(uart_lthread@uptr+1)& (0+255),w,b
  1489  001774  22DA               	addwfc	fsr2h,f,c
  1490  001776  0100               	movlb	0	; () banked
  1491  001778  C0BC  FFDE         	movff	uart_lthread@length,postinc2
  1492  00177C  0100               	movlb	0	; () banked
  1493  00177E  C0BD  FFDD         	movff	uart_lthread@length+1,postdec2
  1494  001782  0012               	return	
  1495  001784                     __end_of_uart_lthread:
  1496                           	opt stack 0
  1497                           tblptru	equ	0xFF8
  1498                           postinc0	equ	0xFEE
  1499                           wreg	equ	0xFE8
  1500                           indf2	equ	0xFDF
  1501                           postinc2	equ	0xFDE
  1502                           postdec2	equ	0xFDD
  1503                           fsr2h	equ	0xFDA
  1504                           fsr2l	equ	0xFD9
  1505                           status	equ	0xFD8
  1506                           
  1507 ;; *************** function _timer1_lthread *****************
  1508 ;; Defined at:
  1509 ;;		line 14 in file "../src/timer1_thread.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;  tptr            2   14[BANK1 ] PTR struct __timer1_thre
  1512 ;;		 -> main@t1thread_data(2), 
  1513 ;;  msgtype         2   16[BANK1 ] int 
  1514 ;;  length          2   18[BANK1 ] int 
  1515 ;;  msgbuffer       2   20[BANK1 ] PTR unsigned char 
  1516 ;;		 -> main@msgbuffer(11), 
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;  retval          1   68[BANK0 ] char 
  1519 ;; Return value:  Size  Location     Type
  1520 ;;                  2   14[BANK1 ] int 
  1521 ;; Registers used:
  1522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1523 ;; Tracked objects:
  1524 ;;		On entry : 0/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1528 ;;      Params:         0       0       8       0       0
  1529 ;;      Locals:         0       1       0       0       0
  1530 ;;      Temps:          0       0       0       0       0
  1531 ;;      Totals:         0       1       8       0       0
  1532 ;;Total ram usage:        9 bytes
  1533 ;; Hardware stack levels used:    1
  1534 ;; Hardware stack levels required when called:   13
  1535 ;; This function calls:
  1536 ;;		_FromMainHigh_sendmsg
  1537 ;;		___lwmod
  1538 ;; This function is called by:
  1539 ;;		_main
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           	psect	text2
  1544  0018AE                     __ptext2:
  1545                           	opt stack 0
  1546  0018AE                     _timer1_lthread:
  1547                           	opt stack 17
  1548                           
  1549                           ;timer1_thread.c: 15: signed char retval;
  1550                           ;timer1_thread.c: 17: tptr->msgcount++;
  1551                           
  1552                           ; BSR set to: 0
  1553                           ;incstack = 0
  1554  0018AE  C1B0  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1555  0018B2  C1B1  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1556  0018B6  2ADE               	incf	postinc2,f,c
  1557  0018B8  0E00               	movlw	0
  1558  0018BA  22DD               	addwfc	postdec2,f,c
  1559                           
  1560                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1561  0018BC  C1B0  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1562  0018C0  C1B1  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1563  0018C4  0100               	movlb	0	; () banked
  1564  0018C6  CFDE F0B8          	movff	postinc2,___lwmod@dividend
  1565  0018CA  0100               	movlb	0	; () banked
  1566  0018CC  CFDD F0B9          	movff	postdec2,___lwmod@dividend+1
  1567  0018D0  0E00               	movlw	0
  1568  0018D2  0100               	movlb	0	; () banked
  1569  0018D4  6FBB               	movwf	(___lwmod@divisor+1)& (0+255),b
  1570  0018D6  0E0A               	movlw	10
  1571  0018D8  0100               	movlb	0	; () banked
  1572  0018DA  6FBA               	movwf	___lwmod@divisor& (0+255),b
  1573  0018DC  EC27  F00C         	call	___lwmod	;wreg free
  1574  0018E0  0100               	movlb	0	; () banked
  1575  0018E2  51B8               	movf	?___lwmod& (0+255),w,b
  1576  0018E4  0A09               	xorlw	9
  1577  0018E6  0100               	movlb	0	; () banked
  1578  0018E8  11B9               	iorwf	(?___lwmod+1)& (0+255),w,b
  1579  0018EA  A4D8               	btfss	status,2,c
  1580  0018EC  0012               	return	
  1581                           
  1582                           ; BSR set to: 0
  1583                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1584  0018EE  0E14               	movlw	20
  1585  0018F0  0101               	movlb	1	; () banked
  1586  0018F2  6FAD               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1587  0018F4  0101               	movlb	1	; () banked
  1588  0018F6  C1B1  F1AF         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1589  0018FA  0101               	movlb	1	; () banked
  1590  0018FC  C1B0  F1AE         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1591  001900  0E02               	movlw	2
  1592  001902  EC41  F00E         	call	_FromMainHigh_sendmsg
  1593  001906  0100               	movlb	0	; () banked
  1594  001908  6FC4               	movwf	timer1_lthread@retval& (0+255),b
  1595  00190A  0012               	return	
  1596  00190C                     __end_of_timer1_lthread:
  1597                           	opt stack 0
  1598                           tblptru	equ	0xFF8
  1599                           postinc0	equ	0xFEE
  1600                           wreg	equ	0xFE8
  1601                           indf2	equ	0xFDF
  1602                           postinc2	equ	0xFDE
  1603                           postdec2	equ	0xFDD
  1604                           fsr2h	equ	0xFDA
  1605                           fsr2l	equ	0xFD9
  1606                           status	equ	0xFD8
  1607                           
  1608 ;; *************** function ___lwmod *****************
  1609 ;; Defined at:
  1610 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\lwmod.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;  dividend        2   56[BANK0 ] unsigned int 
  1613 ;;  divisor         2   58[BANK0 ] unsigned int 
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;  counter         1   60[BANK0 ] unsigned char 
  1616 ;; Return value:  Size  Location     Type
  1617 ;;                  2   56[BANK0 ] unsigned int 
  1618 ;; Registers used:
  1619 ;;		wreg, status,2, status,0
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1625 ;;      Params:         0       4       0       0       0
  1626 ;;      Locals:         0       1       0       0       0
  1627 ;;      Temps:          0       0       0       0       0
  1628 ;;      Totals:         0       5       0       0       0
  1629 ;;Total ram usage:        5 bytes
  1630 ;; Hardware stack levels used:    1
  1631 ;; Hardware stack levels required when called:   10
  1632 ;; This function calls:
  1633 ;;		Nothing
  1634 ;; This function is called by:
  1635 ;;		_timer1_lthread
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           
  1639                           	psect	text3
  1640  00184E                     __ptext3:
  1641                           	opt stack 0
  1642  00184E                     ___lwmod:
  1643                           	opt stack 19
  1644                           
  1645                           ; BSR set to: 0
  1646                           ;incstack = 0
  1647  00184E  0100               	movlb	0	; () banked
  1648  001850  51BB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1649  001852  11BA               	iorwf	___lwmod@divisor& (0+255),w,b
  1650  001854  B4D8               	btfsc	status,2,c
  1651  001856  D026               	goto	l1017
  1652                           
  1653                           ; BSR set to: 0
  1654  001858  0E01               	movlw	1
  1655  00185A  0100               	movlb	0	; () banked
  1656  00185C  6FBC               	movwf	___lwmod@counter& (0+255),b
  1657  00185E  D006               	goto	l3462
  1658  001860                     l3460:
  1659                           
  1660                           ; BSR set to: 0
  1661  001860  0100               	movlb	0	; () banked
  1662  001862  90D8               	bcf	status,0,c
  1663  001864  37BA               	rlcf	___lwmod@divisor& (0+255),f,b
  1664  001866  37BB               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1665  001868  0100               	movlb	0	; () banked
  1666  00186A  2BBC               	incf	___lwmod@counter& (0+255),f,b
  1667  00186C                     l3462:
  1668                           
  1669                           ; BSR set to: 0
  1670  00186C  0100               	movlb	0	; () banked
  1671  00186E  AFBB               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1672  001870  D7F7               	goto	l3460
  1673  001872                     l3464:
  1674                           
  1675                           ; BSR set to: 0
  1676  001872  0100               	movlb	0	; () banked
  1677  001874  51BA               	movf	___lwmod@divisor& (0+255),w,b
  1678  001876  0100               	movlb	0	; () banked
  1679  001878  5DB8               	subwf	___lwmod@dividend& (0+255),w,b
  1680  00187A  0100               	movlb	0	; () banked
  1681  00187C  51BB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1682  00187E  0100               	movlb	0	; () banked
  1683  001880  59B9               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1684  001882  A0D8               	btfss	status,0,c
  1685  001884  D008               	goto	l3468
  1686                           
  1687                           ; BSR set to: 0
  1688  001886  0100               	movlb	0	; () banked
  1689  001888  51BA               	movf	___lwmod@divisor& (0+255),w,b
  1690  00188A  0100               	movlb	0	; () banked
  1691  00188C  5FB8               	subwf	___lwmod@dividend& (0+255),f,b
  1692  00188E  0100               	movlb	0	; () banked
  1693  001890  51BB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1694  001892  0100               	movlb	0	; () banked
  1695  001894  5BB9               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1696  001896                     l3468:
  1697                           
  1698                           ; BSR set to: 0
  1699  001896  0100               	movlb	0	; () banked
  1700  001898  90D8               	bcf	status,0,c
  1701  00189A  33BB               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1702  00189C  33BA               	rrcf	___lwmod@divisor& (0+255),f,b
  1703                           
  1704                           ; BSR set to: 0
  1705  00189E  0100               	movlb	0	; () banked
  1706  0018A0  2FBC               	decfsz	___lwmod@counter& (0+255),f,b
  1707  0018A2  D7E7               	goto	l3464
  1708  0018A4                     l1017:
  1709                           
  1710                           ; BSR set to: 0
  1711  0018A4  C0B8  F0B8         	movff	___lwmod@dividend,?___lwmod
  1712  0018A8  C0B9  F0B9         	movff	___lwmod@dividend+1,?___lwmod+1
  1713                           
  1714                           ; BSR set to: 0
  1715  0018AC  0012               	return	
  1716  0018AE                     __end_of___lwmod:
  1717                           	opt stack 0
  1718                           tblptru	equ	0xFF8
  1719                           postinc0	equ	0xFEE
  1720                           wreg	equ	0xFE8
  1721                           indf2	equ	0xFDF
  1722                           postinc2	equ	0xFDE
  1723                           postdec2	equ	0xFDD
  1724                           fsr2h	equ	0xFDA
  1725                           fsr2l	equ	0xFD9
  1726                           status	equ	0xFD8
  1727                           
  1728 ;; *************** function _FromMainHigh_sendmsg *****************
  1729 ;; Defined at:
  1730 ;;		line 174 in file "../src/messages.c"
  1731 ;; Parameters:    Size  Location     Type
  1732 ;;  length          1    wreg     unsigned char 
  1733 ;;  msgtype         1   11[BANK1 ] unsigned char 
  1734 ;;  data            2   12[BANK1 ] PTR void 
  1735 ;;		 -> main@t1thread_data(2), 
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;  length          1   67[BANK0 ] unsigned char 
  1738 ;; Return value:  Size  Location     Type
  1739 ;;                  1    wreg      char 
  1740 ;; Registers used:
  1741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1747 ;;      Params:         0       0       3       0       0
  1748 ;;      Locals:         0       1       0       0       0
  1749 ;;      Temps:          0       0       0       0       0
  1750 ;;      Totals:         0       1       3       0       0
  1751 ;;Total ram usage:        4 bytes
  1752 ;; Hardware stack levels used:    1
  1753 ;; Hardware stack levels required when called:   12
  1754 ;; This function calls:
  1755 ;;		_send_msg
  1756 ;; This function is called by:
  1757 ;;		_timer1_lthread
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761                           	psect	text4
  1762  001C82                     __ptext4:
  1763                           	opt stack 0
  1764  001C82                     _FromMainHigh_sendmsg:
  1765                           	opt stack 17
  1766                           
  1767                           ; BSR set to: 0
  1768                           ;incstack = 0
  1769                           ;FromMainHigh_sendmsg@length stored from wreg
  1770  001C82  0100               	movlb	0	; () banked
  1771  001C84  6FC3               	movwf	FromMainHigh_sendmsg@length& (0+255),b
  1772                           
  1773                           ; BSR set to: 0
  1774                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  1775  001C86  0102               	movlb	2	; () banked
  1776  001C88  0E02               	movlw	high _FromMainHigh_MQ
  1777  001C8A  0101               	movlb	1	; () banked
  1778  001C8C  6FA3               	movwf	(send_msg@qptr+1)& (0+255),b
  1779  001C8E  0102               	movlb	2	; () banked
  1780  001C90  0E00               	movlw	low _FromMainHigh_MQ
  1781  001C92  0101               	movlb	1	; () banked
  1782  001C94  6FA2               	movwf	send_msg@qptr& (0+255),b
  1783  001C96  C0C3  F1A4         	movff	FromMainHigh_sendmsg@length,send_msg@length
  1784  001C9A  C1AD  F1A5         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  1785  001C9E  0101               	movlb	1	; () banked
  1786  001CA0  C1AF  F1A7         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  1787  001CA4  0101               	movlb	1	; () banked
  1788  001CA6  C1AE  F1A6         	movff	FromMainHigh_sendmsg@data,send_msg@data
  1789  001CAA  ECB8  F008         	call	_send_msg	;wreg free
  1790  001CAE  0012               	return	
  1791  001CB0                     __end_of_FromMainHigh_sendmsg:
  1792                           	opt stack 0
  1793                           tblptru	equ	0xFF8
  1794                           postinc0	equ	0xFEE
  1795                           wreg	equ	0xFE8
  1796                           indf2	equ	0xFDF
  1797                           postinc2	equ	0xFDE
  1798                           postdec2	equ	0xFDD
  1799                           fsr2h	equ	0xFDA
  1800                           fsr2l	equ	0xFD9
  1801                           status	equ	0xFD8
  1802                           
  1803 ;; *************** function _send_msg *****************
  1804 ;; Defined at:
  1805 ;;		line 24 in file "../src/messages.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  1808 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1809 ;;  length          1    2[BANK1 ] unsigned char 
  1810 ;;  msgtype         1    3[BANK1 ] unsigned char 
  1811 ;;  data            2    4[BANK1 ] PTR void 
  1812 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), timer0_int_handler@val(2), 
  1813 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), RAM(1023), 
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;  qmsg            2    9[BANK1 ] PTR struct __msg
  1816 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  1817 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1818 ;;  tlength         2    6[BANK1 ] unsigned int 
  1819 ;;  slot            1    8[BANK1 ] unsigned char 
  1820 ;; Return value:  Size  Location     Type
  1821 ;;                  1    wreg      char 
  1822 ;; Registers used:
  1823 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1824 ;; Tracked objects:
  1825 ;;		On entry : 0/0
  1826 ;;		On exit  : 0/0
  1827 ;;		Unchanged: 0/0
  1828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1829 ;;      Params:         0       0       6       0       0
  1830 ;;      Locals:         0       0       5       0       0
  1831 ;;      Temps:          0       1       0       0       0
  1832 ;;      Totals:         0       1      11       0       0
  1833 ;;Total ram usage:       12 bytes
  1834 ;; Hardware stack levels used:    1
  1835 ;; Hardware stack levels required when called:   11
  1836 ;; This function calls:
  1837 ;;		_memcpy
  1838 ;; This function is called by:
  1839 ;;		_FromMainHigh_sendmsg
  1840 ;;		_FromMainLow_sendmsg
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844                           	psect	text5
  1845  001170                     __ptext5:
  1846                           	opt stack 0
  1847  001170                     _send_msg:
  1848                           	opt stack 17
  1849                           
  1850                           ;messages.c: 25: unsigned char slot;
  1851                           ;messages.c: 27: msg *qmsg;
  1852                           ;messages.c: 28: size_t tlength = length;
  1853                           
  1854                           ;incstack = 0
  1855  001170  0101               	movlb	1	; () banked
  1856  001172  C1A4  F1A8         	movff	send_msg@length,send_msg@tlength
  1857  001176  0101               	movlb	1	; () banked
  1858  001178  6BA9               	clrf	(send_msg@tlength+1)& (0+255),b
  1859                           
  1860                           ; BSR set to: 1
  1861                           ;messages.c: 38: slot = qptr->cur_write_ind;
  1862  00117A  0101               	movlb	1	; () banked
  1863  00117C  EE20 F034          	lfsr	2,52
  1864  001180  0101               	movlb	1	; () banked
  1865  001182  51A2               	movf	send_msg@qptr& (0+255),w,b
  1866  001184  26D9               	addwf	fsr2l,f,c
  1867  001186  0101               	movlb	1	; () banked
  1868  001188  51A3               	movf	(send_msg@qptr+1)& (0+255),w,b
  1869  00118A  22DA               	addwfc	fsr2h,f,c
  1870  00118C  50DF               	movf	indf2,w,c
  1871  00118E  0101               	movlb	1	; () banked
  1872  001190  6FAA               	movwf	send_msg@slot& (0+255),b
  1873                           
  1874                           ; BSR set to: 1
  1875                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  1876  001192  0101               	movlb	1	; () banked
  1877  001194  51AA               	movf	send_msg@slot& (0+255),w,b
  1878  001196  0D0D               	mullw	13
  1879  001198  50F3               	movf	prodl,w,c
  1880  00119A  0101               	movlb	1	; () banked
  1881  00119C  25A2               	addwf	send_msg@qptr& (0+255),w,b
  1882  00119E  0101               	movlb	1	; () banked
  1883  0011A0  6FAB               	movwf	send_msg@qmsg& (0+255),b
  1884  0011A2  50F4               	movf	prodh,w,c
  1885  0011A4  0101               	movlb	1	; () banked
  1886  0011A6  21A3               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  1887  0011A8  0101               	movlb	1	; () banked
  1888  0011AA  6FAC               	movwf	(send_msg@qmsg+1)& (0+255),b
  1889                           
  1890                           ; BSR set to: 1
  1891                           ;messages.c: 41: if (qmsg->full != 0) {
  1892  0011AC  C1AB  FFD9         	movff	send_msg@qmsg,fsr2l
  1893  0011B0  C1AC  FFDA         	movff	send_msg@qmsg+1,fsr2h
  1894  0011B4  50DF               	movf	indf2,w,c
  1895  0011B6  B4D8               	btfsc	status,2,c
  1896  0011B8  D002               	goto	l3300
  1897                           
  1898                           ; BSR set to: 1
  1899                           ;messages.c: 42: return (-1);
  1900  0011BA  0EFF               	movlw	255
  1901  0011BC  0012               	return	
  1902  0011BE                     l3300:
  1903                           
  1904                           ; BSR set to: 1
  1905                           ;messages.c: 43: }
  1906                           ;messages.c: 46: qmsg->length = length;
  1907  0011BE  0101               	movlb	1	; () banked
  1908  0011C0  EE20 F001          	lfsr	2,1
  1909  0011C4  0101               	movlb	1	; () banked
  1910  0011C6  51AB               	movf	send_msg@qmsg& (0+255),w,b
  1911  0011C8  26D9               	addwf	fsr2l,f,c
  1912  0011CA  0101               	movlb	1	; () banked
  1913  0011CC  51AC               	movf	(send_msg@qmsg+1)& (0+255),w,b
  1914  0011CE  22DA               	addwfc	fsr2h,f,c
  1915  0011D0  0101               	movlb	1	; () banked
  1916  0011D2  C1A4  FFDF         	movff	send_msg@length,indf2
  1917                           
  1918                           ;messages.c: 47: qmsg->msgtype = msgtype;
  1919  0011D6  0101               	movlb	1	; () banked
  1920  0011D8  EE20 F002          	lfsr	2,2
  1921  0011DC  0101               	movlb	1	; () banked
  1922  0011DE  51AB               	movf	send_msg@qmsg& (0+255),w,b
  1923  0011E0  26D9               	addwf	fsr2l,f,c
  1924  0011E2  0101               	movlb	1	; () banked
  1925  0011E4  51AC               	movf	(send_msg@qmsg+1)& (0+255),w,b
  1926  0011E6  22DA               	addwfc	fsr2h,f,c
  1927  0011E8  0101               	movlb	1	; () banked
  1928  0011EA  C1A5  FFDF         	movff	send_msg@msgtype,indf2
  1929                           
  1930                           ; BSR set to: 1
  1931                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  1932  0011EE  0E03               	movlw	3
  1933  0011F0  0101               	movlb	1	; () banked
  1934  0011F2  25AB               	addwf	send_msg@qmsg& (0+255),w,b
  1935  0011F4  0100               	movlb	0	; () banked
  1936  0011F6  6FB8               	movwf	memcpy@d1& (0+255),b
  1937  0011F8  0E00               	movlw	0
  1938  0011FA  0101               	movlb	1	; () banked
  1939  0011FC  21AC               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  1940  0011FE  0100               	movlb	0	; () banked
  1941  001200  6FB9               	movwf	(memcpy@d1+1)& (0+255),b
  1942  001202  0101               	movlb	1	; () banked
  1943  001204  0100               	movlb	0	; () banked
  1944  001206  C1A7  F0BB         	movff	send_msg@data+1,memcpy@s1+1
  1945  00120A  0101               	movlb	1	; () banked
  1946  00120C  0100               	movlb	0	; () banked
  1947  00120E  C1A6  F0BA         	movff	send_msg@data,memcpy@s1
  1948  001212  C1A8  F0BC         	movff	send_msg@tlength,memcpy@n
  1949  001216  C1A9  F0BD         	movff	send_msg@tlength+1,memcpy@n+1
  1950  00121A  EC0D  F00D         	call	_memcpy	;wreg free
  1951                           
  1952                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  1953  00121E  0101               	movlb	1	; () banked
  1954  001220  EE20 F034          	lfsr	2,52
  1955  001224  0101               	movlb	1	; () banked
  1956  001226  51A2               	movf	send_msg@qptr& (0+255),w,b
  1957  001228  26D9               	addwf	fsr2l,f,c
  1958  00122A  0101               	movlb	1	; () banked
  1959  00122C  51A3               	movf	(send_msg@qptr+1)& (0+255),w,b
  1960  00122E  22DA               	addwfc	fsr2h,f,c
  1961  001230  0101               	movlb	1	; () banked
  1962  001232  EE10 F034          	lfsr	1,52
  1963  001236  0101               	movlb	1	; () banked
  1964  001238  51A2               	movf	send_msg@qptr& (0+255),w,b
  1965  00123A  26E1               	addwf	fsr1l,f,c
  1966  00123C  0101               	movlb	1	; () banked
  1967  00123E  51A3               	movf	(send_msg@qptr+1)& (0+255),w,b
  1968  001240  22E2               	addwfc	fsr1h,f,c
  1969  001242  50E7               	movf	indf1,w,c
  1970  001244  0100               	movlb	0	; () banked
  1971  001246  6FC2               	movwf	??_send_msg& (0+255),b
  1972  001248  0100               	movlb	0	; () banked
  1973  00124A  29C2               	incf	??_send_msg& (0+255),w,b
  1974  00124C  0B03               	andlw	3
  1975  00124E  6EDF               	movwf	indf2,c
  1976                           
  1977                           ; BSR set to: 0
  1978                           ;messages.c: 59: qmsg->full = 1;
  1979  001250  C1AB  FFD9         	movff	send_msg@qmsg,fsr2l
  1980  001254  C1AC  FFDA         	movff	send_msg@qmsg+1,fsr2h
  1981  001258  0E01               	movlw	1
  1982  00125A  6EDF               	movwf	indf2,c
  1983                           
  1984                           ; BSR set to: 0
  1985                           ;messages.c: 60: return (1);
  1986  00125C  0E01               	movlw	1
  1987  00125E  0012               	return	
  1988  001260                     __end_of_send_msg:
  1989                           	opt stack 0
  1990                           tblptru	equ	0xFF8
  1991                           prodh	equ	0xFF4
  1992                           prodl	equ	0xFF3
  1993                           postinc0	equ	0xFEE
  1994                           wreg	equ	0xFE8
  1995                           indf1	equ	0xFE7
  1996                           fsr1h	equ	0xFE2
  1997                           fsr1l	equ	0xFE1
  1998                           indf2	equ	0xFDF
  1999                           postinc2	equ	0xFDE
  2000                           postdec2	equ	0xFDD
  2001                           fsr2h	equ	0xFDA
  2002                           fsr2l	equ	0xFD9
  2003                           status	equ	0xFD8
  2004                           
  2005 ;; *************** function _timer0_lthread *****************
  2006 ;; Defined at:
  2007 ;;		line 9 in file "../src/timer0_thread.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;  tptr            2   56[BANK0 ] PTR struct __timer0_thre
  2010 ;;		 -> main@t0thread_data(2), 
  2011 ;;  msgtype         2   58[BANK0 ] int 
  2012 ;;  length          2   60[BANK0 ] int 
  2013 ;;  msgbuffer       2   62[BANK0 ] PTR unsigned char 
  2014 ;;		 -> main@msgbuffer(11), 
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;  msgval          2   64[BANK0 ] PTR unsigned int 
  2017 ;;		 -> main@msgbuffer(11), 
  2018 ;; Return value:  Size  Location     Type
  2019 ;;                  2   56[BANK0 ] int 
  2020 ;; Registers used:
  2021 ;;		wreg, status,2, status,0
  2022 ;; Tracked objects:
  2023 ;;		On entry : 0/0
  2024 ;;		On exit  : 0/0
  2025 ;;		Unchanged: 0/0
  2026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2027 ;;      Params:         0       8       0       0       0
  2028 ;;      Locals:         0       2       0       0       0
  2029 ;;      Temps:          0       0       0       0       0
  2030 ;;      Totals:         0      10       0       0       0
  2031 ;;Total ram usage:       10 bytes
  2032 ;; Hardware stack levels used:    1
  2033 ;; Hardware stack levels required when called:   10
  2034 ;; This function calls:
  2035 ;;		Nothing
  2036 ;; This function is called by:
  2037 ;;		_main
  2038 ;; This function uses a non-reentrant model
  2039 ;;
  2040                           
  2041                           	psect	text6
  2042  001EF2                     __ptext6:
  2043                           	opt stack 0
  2044  001EF2                     _timer0_lthread:
  2045                           	opt stack 20
  2046                           
  2047                           ;timer0_thread.c: 10: unsigned int *msgval;
  2048                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2049                           
  2050                           ;incstack = 0
  2051  001EF2  0100               	movlb	0	; () banked
  2052  001EF4  C0BF  F0C1         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2053  001EF8  0100               	movlb	0	; () banked
  2054  001EFA  C0BE  F0C0         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2055                           
  2056                           ; BSR set to: 0
  2057  001EFE  0012               	return	
  2058  001F00                     __end_of_timer0_lthread:
  2059                           	opt stack 0
  2060                           tblptru	equ	0xFF8
  2061                           prodh	equ	0xFF4
  2062                           prodl	equ	0xFF3
  2063                           postinc0	equ	0xFEE
  2064                           wreg	equ	0xFE8
  2065                           indf1	equ	0xFE7
  2066                           fsr1h	equ	0xFE2
  2067                           fsr1l	equ	0xFE1
  2068                           indf2	equ	0xFDF
  2069                           postinc2	equ	0xFDE
  2070                           postdec2	equ	0xFDD
  2071                           fsr2h	equ	0xFDA
  2072                           fsr2l	equ	0xFD9
  2073                           status	equ	0xFD8
  2074                           
  2075 ;; *************** function _start_i2c_slave_reply *****************
  2076 ;; Defined at:
  2077 ;;		line 53 in file "../src/my_i2c.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;  length          1    wreg     unsigned char 
  2080 ;;  msg             2   56[BANK0 ] PTR unsigned char 
  2081 ;;		 -> main@msgbuffer(11), NULL(0), 
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;  length          1   60[BANK0 ] unsigned char 
  2084 ;; Return value:  Size  Location     Type
  2085 ;;		None               void
  2086 ;; Registers used:
  2087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2093 ;;      Params:         0       2       0       0       0
  2094 ;;      Locals:         0       1       0       0       0
  2095 ;;      Temps:          0       2       0       0       0
  2096 ;;      Totals:         0       5       0       0       0
  2097 ;;Total ram usage:        5 bytes
  2098 ;; Hardware stack levels used:    1
  2099 ;; Hardware stack levels required when called:   10
  2100 ;; This function calls:
  2101 ;;		Nothing
  2102 ;; This function is called by:
  2103 ;;		_main
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           	psect	text7
  2108  00106C                     __ptext7:
  2109                           	opt stack 0
  2110  00106C                     _start_i2c_slave_reply:
  2111                           	opt stack 20
  2112                           
  2113                           ; BSR set to: 0
  2114                           ;incstack = 0
  2115                           ;start_i2c_slave_reply@length stored from wreg
  2116  00106C  0100               	movlb	0	; () banked
  2117  00106E  6FBC               	movwf	start_i2c_slave_reply@length& (0+255),b
  2118                           
  2119                           ; BSR set to: 0
  2120                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  2121  001070  0100               	movlb	0	; () banked
  2122  001072  EE20 F019          	lfsr	2,25
  2123  001076  0100               	movlb	0	; () banked
  2124  001078  51C5               	movf	_ic_ptr& (0+255),w,b
  2125  00107A  26D9               	addwf	fsr2l,f,c
  2126  00107C  0100               	movlb	0	; () banked
  2127  00107E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2128  001080  22DA               	addwfc	fsr2h,f,c
  2129  001082  0E00               	movlw	0
  2130  001084  6EDF               	movwf	indf2,c
  2131  001086  D03E               	goto	l2774
  2132  001088                     l2770:
  2133                           
  2134                           ; BSR set to: 0
  2135                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2136  001088  0100               	movlb	0	; () banked
  2137  00108A  EE20 F019          	lfsr	2,25
  2138  00108E  0100               	movlb	0	; () banked
  2139  001090  51C5               	movf	_ic_ptr& (0+255),w,b
  2140  001092  26D9               	addwf	fsr2l,f,c
  2141  001094  0100               	movlb	0	; () banked
  2142  001096  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2143  001098  22DA               	addwfc	fsr2h,f,c
  2144  00109A  50DF               	movf	indf2,w,c
  2145  00109C  0100               	movlb	0	; () banked
  2146  00109E  6FBA               	movwf	??_start_i2c_slave_reply& (0+255),b
  2147  0010A0  0100               	movlb	0	; () banked
  2148  0010A2  51BA               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2149  0010A4  0D01               	mullw	1
  2150  0010A6  50F3               	movf	prodl,w,c
  2151  0010A8  0100               	movlb	0	; () banked
  2152  0010AA  25B8               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  2153  0010AC  6ED9               	movwf	fsr2l,c
  2154  0010AE  50F4               	movf	prodh,w,c
  2155  0010B0  0100               	movlb	0	; () banked
  2156  0010B2  21B9               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  2157  0010B4  6EDA               	movwf	fsr2h,c
  2158  0010B6  0100               	movlb	0	; () banked
  2159  0010B8  EE10 F019          	lfsr	1,25
  2160  0010BC  0100               	movlb	0	; () banked
  2161  0010BE  51C5               	movf	_ic_ptr& (0+255),w,b
  2162  0010C0  26E1               	addwf	fsr1l,f,c
  2163  0010C2  0100               	movlb	0	; () banked
  2164  0010C4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2165  0010C6  22E2               	addwfc	fsr1h,f,c
  2166  0010C8  50E7               	movf	indf1,w,c
  2167  0010CA  0100               	movlb	0	; () banked
  2168  0010CC  6FBB               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2169  0010CE  0100               	movlb	0	; () banked
  2170  0010D0  51BB               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2171  0010D2  0D01               	mullw	1
  2172  0010D4  0E0F               	movlw	15
  2173  0010D6  26F3               	addwf	prodl,f,c
  2174  0010D8  0E00               	movlw	0
  2175  0010DA  22F4               	addwfc	prodh,f,c
  2176  0010DC  50F3               	movf	prodl,w,c
  2177  0010DE  0100               	movlb	0	; () banked
  2178  0010E0  25C5               	addwf	_ic_ptr& (0+255),w,b
  2179  0010E2  6EE1               	movwf	fsr1l,c
  2180  0010E4  50F4               	movf	prodh,w,c
  2181  0010E6  0100               	movlb	0	; () banked
  2182  0010E8  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2183  0010EA  6EE2               	movwf	fsr1h,c
  2184  0010EC  CFDF FFE7          	movff	indf2,indf1
  2185                           
  2186                           ; BSR set to: 0
  2187  0010F0  0100               	movlb	0	; () banked
  2188  0010F2  EE20 F019          	lfsr	2,25
  2189  0010F6  0100               	movlb	0	; () banked
  2190  0010F8  51C5               	movf	_ic_ptr& (0+255),w,b
  2191  0010FA  26D9               	addwf	fsr2l,f,c
  2192  0010FC  0100               	movlb	0	; () banked
  2193  0010FE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2194  001100  22DA               	addwfc	fsr2h,f,c
  2195  001102  2ADF               	incf	indf2,f,c
  2196  001104                     l2774:
  2197                           
  2198                           ; BSR set to: 0
  2199  001104  0100               	movlb	0	; () banked
  2200  001106  EE20 F019          	lfsr	2,25
  2201  00110A  0100               	movlb	0	; () banked
  2202  00110C  51C5               	movf	_ic_ptr& (0+255),w,b
  2203  00110E  26D9               	addwf	fsr2l,f,c
  2204  001110  0100               	movlb	0	; () banked
  2205  001112  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2206  001114  22DA               	addwfc	fsr2h,f,c
  2207  001116  50DF               	movf	indf2,w,c
  2208  001118  0100               	movlb	0	; () banked
  2209  00111A  6FBA               	movwf	??_start_i2c_slave_reply& (0+255),b
  2210  00111C  0100               	movlb	0	; () banked
  2211  00111E  51BC               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2212  001120  0100               	movlb	0	; () banked
  2213  001122  5DBA               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2214  001124  A0D8               	btfss	status,0,c
  2215  001126  D7B0               	goto	l2770
  2216                           
  2217                           ; BSR set to: 0
  2218                           ;my_i2c.c: 57: }
  2219                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  2220                           
  2221                           ; BSR set to: 0
  2222  001128  0100               	movlb	0	; () banked
  2223  00112A  EE20 F019          	lfsr	2,25
  2224  00112E  0100               	movlb	0	; () banked
  2225  001130  51C5               	movf	_ic_ptr& (0+255),w,b
  2226  001132  26D9               	addwf	fsr2l,f,c
  2227  001134  0100               	movlb	0	; () banked
  2228  001136  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2229  001138  22DA               	addwfc	fsr2h,f,c
  2230  00113A  0100               	movlb	0	; () banked
  2231  00113C  C0BC  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2232                           
  2233                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  2234  001140  0100               	movlb	0	; () banked
  2235  001142  EE20 F01A          	lfsr	2,26
  2236  001146  0100               	movlb	0	; () banked
  2237  001148  51C5               	movf	_ic_ptr& (0+255),w,b
  2238  00114A  26D9               	addwf	fsr2l,f,c
  2239  00114C  0100               	movlb	0	; () banked
  2240  00114E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2241  001150  22DA               	addwfc	fsr2h,f,c
  2242  001152  0E01               	movlw	1
  2243  001154  6EDF               	movwf	indf2,c
  2244                           
  2245                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  2246  001156  0100               	movlb	0	; () banked
  2247  001158  EE20 F00F          	lfsr	2,15
  2248  00115C  0100               	movlb	0	; () banked
  2249  00115E  51C5               	movf	_ic_ptr& (0+255),w,b
  2250  001160  26D9               	addwf	fsr2l,f,c
  2251  001162  0100               	movlb	0	; () banked
  2252  001164  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2253  001166  22DA               	addwfc	fsr2h,f,c
  2254  001168  50DF               	movf	indf2,w,c
  2255  00116A  6EC9               	movwf	4041,c	;volatile
  2256                           
  2257                           ; BSR set to: 0
  2258                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  2259  00116C  88C6               	bsf	4038,4,c	;volatile
  2260                           
  2261                           ; BSR set to: 0
  2262  00116E  0012               	return	
  2263  001170                     __end_of_start_i2c_slave_reply:
  2264                           	opt stack 0
  2265                           tblptru	equ	0xFF8
  2266                           prodh	equ	0xFF4
  2267                           prodl	equ	0xFF3
  2268                           postinc0	equ	0xFEE
  2269                           wreg	equ	0xFE8
  2270                           indf1	equ	0xFE7
  2271                           fsr1h	equ	0xFE2
  2272                           fsr1l	equ	0xFE1
  2273                           indf2	equ	0xFDF
  2274                           postinc2	equ	0xFDE
  2275                           postdec2	equ	0xFDD
  2276                           fsr2h	equ	0xFDA
  2277                           fsr2l	equ	0xFD9
  2278                           status	equ	0xFD8
  2279                           
  2280 ;; *************** function _init_uart_recv *****************
  2281 ;; Defined at:
  2282 ;;		line 49 in file "../src/my_uart.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;  uc              2   56[BANK0 ] PTR struct __uart_comm
  2285 ;;		 -> main@uc(5), 
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;		None
  2288 ;; Return value:  Size  Location     Type
  2289 ;;		None               void
  2290 ;; Registers used:
  2291 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2292 ;; Tracked objects:
  2293 ;;		On entry : 0/0
  2294 ;;		On exit  : 0/0
  2295 ;;		Unchanged: 0/0
  2296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2297 ;;      Params:         0       2       0       0       0
  2298 ;;      Locals:         0       0       0       0       0
  2299 ;;      Temps:          0       0       0       0       0
  2300 ;;      Totals:         0       2       0       0       0
  2301 ;;Total ram usage:        2 bytes
  2302 ;; Hardware stack levels used:    1
  2303 ;; Hardware stack levels required when called:   10
  2304 ;; This function calls:
  2305 ;;		Nothing
  2306 ;; This function is called by:
  2307 ;;		_main
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           	psect	text8
  2312  001E38                     __ptext8:
  2313                           	opt stack 0
  2314  001E38                     _init_uart_recv:
  2315                           	opt stack 20
  2316                           
  2317                           ;my_uart.c: 50: uc_ptr = uc;
  2318                           
  2319                           ; BSR set to: 0
  2320                           ;incstack = 0
  2321  001E38  0100               	movlb	0	; () banked
  2322  001E3A  C0B9  F04F         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2323  001E3E  0100               	movlb	0	; () banked
  2324  001E40  C0B8  F04E         	movff	init_uart_recv@uc,_uc_ptr
  2325                           
  2326                           ; BSR set to: 0
  2327                           ;my_uart.c: 51: uc_ptr->buflen = 0;
  2328  001E44  EE20 F004          	lfsr	2,4
  2329  001E48  504E               	movf	_uc_ptr,w,c
  2330  001E4A  26D9               	addwf	fsr2l,f,c
  2331  001E4C  504F               	movf	_uc_ptr+1,w,c
  2332  001E4E  22DA               	addwfc	fsr2h,f,c
  2333  001E50  0E00               	movlw	0
  2334  001E52  6EDF               	movwf	indf2,c
  2335                           
  2336                           ; BSR set to: 0
  2337  001E54  0012               	return	
  2338  001E56                     __end_of_init_uart_recv:
  2339                           	opt stack 0
  2340                           tblptru	equ	0xFF8
  2341                           prodh	equ	0xFF4
  2342                           prodl	equ	0xFF3
  2343                           postinc0	equ	0xFEE
  2344                           wreg	equ	0xFE8
  2345                           indf1	equ	0xFE7
  2346                           fsr1h	equ	0xFE2
  2347                           fsr1l	equ	0xFE1
  2348                           indf2	equ	0xFDF
  2349                           postinc2	equ	0xFDE
  2350                           postdec2	equ	0xFDD
  2351                           fsr2h	equ	0xFDA
  2352                           fsr2l	equ	0xFD9
  2353                           status	equ	0xFD8
  2354                           
  2355 ;; *************** function _init_timer1_lthread *****************
  2356 ;; Defined at:
  2357 ;;		line 6 in file "../src/timer1_thread.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;  tptr            2   56[BANK0 ] PTR struct __timer1_thre
  2360 ;;		 -> main@t1thread_data(2), 
  2361 ;; Auto vars:     Size  Location     Type
  2362 ;;		None
  2363 ;; Return value:  Size  Location     Type
  2364 ;;		None               void
  2365 ;; Registers used:
  2366 ;;		wreg, fsr2l, fsr2h
  2367 ;; Tracked objects:
  2368 ;;		On entry : 0/0
  2369 ;;		On exit  : 0/0
  2370 ;;		Unchanged: 0/0
  2371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2372 ;;      Params:         0       2       0       0       0
  2373 ;;      Locals:         0       0       0       0       0
  2374 ;;      Temps:          0       0       0       0       0
  2375 ;;      Totals:         0       2       0       0       0
  2376 ;;Total ram usage:        2 bytes
  2377 ;; Hardware stack levels used:    1
  2378 ;; Hardware stack levels required when called:   10
  2379 ;; This function calls:
  2380 ;;		Nothing
  2381 ;; This function is called by:
  2382 ;;		_main
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386                           	psect	text9
  2387  001E88                     __ptext9:
  2388                           	opt stack 0
  2389  001E88                     _init_timer1_lthread:
  2390                           	opt stack 20
  2391                           
  2392                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2393                           
  2394                           ; BSR set to: 0
  2395                           ;incstack = 0
  2396  001E88  C0B8  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2397  001E8C  C0B9  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2398  001E90  0E00               	movlw	0
  2399  001E92  6EDE               	movwf	postinc2,c
  2400  001E94  0E00               	movlw	0
  2401  001E96  6EDD               	movwf	postdec2,c
  2402  001E98  0012               	return	
  2403  001E9A                     __end_of_init_timer1_lthread:
  2404                           	opt stack 0
  2405                           tblptru	equ	0xFF8
  2406                           prodh	equ	0xFF4
  2407                           prodl	equ	0xFF3
  2408                           postinc0	equ	0xFEE
  2409                           wreg	equ	0xFE8
  2410                           indf1	equ	0xFE7
  2411                           fsr1h	equ	0xFE2
  2412                           fsr1l	equ	0xFE1
  2413                           indf2	equ	0xFDF
  2414                           postinc2	equ	0xFDE
  2415                           postdec2	equ	0xFDD
  2416                           fsr2h	equ	0xFDA
  2417                           fsr2l	equ	0xFD9
  2418                           status	equ	0xFD8
  2419                           
  2420 ;; *************** function _init_queues *****************
  2421 ;; Defined at:
  2422 ;;		line 194 in file "../src/messages.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;		None
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;		None
  2427 ;; Return value:  Size  Location     Type
  2428 ;;		None               void
  2429 ;; Registers used:
  2430 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2431 ;; Tracked objects:
  2432 ;;		On entry : 0/0
  2433 ;;		On exit  : 0/0
  2434 ;;		Unchanged: 0/0
  2435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2436 ;;      Params:         0       0       0       0       0
  2437 ;;      Locals:         0       0       0       0       0
  2438 ;;      Temps:          0       0       0       0       0
  2439 ;;      Totals:         0       0       0       0       0
  2440 ;;Total ram usage:        0 bytes
  2441 ;; Hardware stack levels used:    1
  2442 ;; Hardware stack levels required when called:   11
  2443 ;; This function calls:
  2444 ;;		_init_queue
  2445 ;; This function is called by:
  2446 ;;		_main
  2447 ;; This function uses a non-reentrant model
  2448 ;;
  2449                           
  2450                           	psect	text10
  2451  0019C4                     __ptext10:
  2452                           	opt stack 0
  2453  0019C4                     _init_queues:
  2454                           	opt stack 19
  2455                           
  2456                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2457                           
  2458                           ;incstack = 0
  2459  0019C4  0E00               	movlw	0
  2460  0019C6  6E50               	movwf	_MQ_Main_Willing_to_block,c
  2461                           
  2462                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2463  0019C8  0101               	movlb	1	; () banked
  2464  0019CA  0E01               	movlw	high _ToMainLow_MQ
  2465  0019CC  0100               	movlb	0	; () banked
  2466  0019CE  6FB9               	movwf	(init_queue@qptr+1)& (0+255),b
  2467  0019D0  0101               	movlb	1	; () banked
  2468  0019D2  0E6C               	movlw	low _ToMainLow_MQ
  2469  0019D4  0100               	movlb	0	; () banked
  2470  0019D6  6FB8               	movwf	init_queue@qptr& (0+255),b
  2471  0019D8  ECF5  F00B         	call	_init_queue	;wreg free
  2472                           
  2473                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2474  0019DC  0101               	movlb	1	; () banked
  2475  0019DE  0E01               	movlw	high _ToMainHigh_MQ
  2476  0019E0  0100               	movlb	0	; () banked
  2477  0019E2  6FB9               	movwf	(init_queue@qptr+1)& (0+255),b
  2478  0019E4  0101               	movlb	1	; () banked
  2479  0019E6  0E36               	movlw	low _ToMainHigh_MQ
  2480  0019E8  0100               	movlb	0	; () banked
  2481  0019EA  6FB8               	movwf	init_queue@qptr& (0+255),b
  2482  0019EC  ECF5  F00B         	call	_init_queue	;wreg free
  2483                           
  2484                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2485  0019F0  0101               	movlb	1	; () banked
  2486  0019F2  0E01               	movlw	high _FromMainLow_MQ
  2487  0019F4  0100               	movlb	0	; () banked
  2488  0019F6  6FB9               	movwf	(init_queue@qptr+1)& (0+255),b
  2489  0019F8  0101               	movlb	1	; () banked
  2490  0019FA  0E00               	movlw	low _FromMainLow_MQ
  2491  0019FC  0100               	movlb	0	; () banked
  2492  0019FE  6FB8               	movwf	init_queue@qptr& (0+255),b
  2493  001A00  ECF5  F00B         	call	_init_queue	;wreg free
  2494                           
  2495                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2496  001A04  0102               	movlb	2	; () banked
  2497  001A06  0E02               	movlw	high _FromMainHigh_MQ
  2498  001A08  0100               	movlb	0	; () banked
  2499  001A0A  6FB9               	movwf	(init_queue@qptr+1)& (0+255),b
  2500  001A0C  0102               	movlb	2	; () banked
  2501  001A0E  0E00               	movlw	low _FromMainHigh_MQ
  2502  001A10  0100               	movlb	0	; () banked
  2503  001A12  6FB8               	movwf	init_queue@qptr& (0+255),b
  2504  001A14  ECF5  F00B         	call	_init_queue	;wreg free
  2505  001A18  0012               	return	
  2506  001A1A                     __end_of_init_queues:
  2507                           	opt stack 0
  2508                           tblptru	equ	0xFF8
  2509                           prodh	equ	0xFF4
  2510                           prodl	equ	0xFF3
  2511                           postinc0	equ	0xFEE
  2512                           wreg	equ	0xFE8
  2513                           indf1	equ	0xFE7
  2514                           fsr1h	equ	0xFE2
  2515                           fsr1l	equ	0xFE1
  2516                           indf2	equ	0xFDF
  2517                           postinc2	equ	0xFDE
  2518                           postdec2	equ	0xFDD
  2519                           fsr2h	equ	0xFDA
  2520                           fsr2l	equ	0xFD9
  2521                           status	equ	0xFD8
  2522                           
  2523 ;; *************** function _init_queue *****************
  2524 ;; Defined at:
  2525 ;;		line 14 in file "../src/messages.c"
  2526 ;; Parameters:    Size  Location     Type
  2527 ;;  qptr            2   56[BANK0 ] PTR struct __msg_queue
  2528 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;  i               1   58[BANK0 ] unsigned char 
  2531 ;; Return value:  Size  Location     Type
  2532 ;;		None               void
  2533 ;; Registers used:
  2534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2535 ;; Tracked objects:
  2536 ;;		On entry : 0/0
  2537 ;;		On exit  : 0/0
  2538 ;;		Unchanged: 0/0
  2539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2540 ;;      Params:         0       2       0       0       0
  2541 ;;      Locals:         0       1       0       0       0
  2542 ;;      Temps:          0       0       0       0       0
  2543 ;;      Totals:         0       3       0       0       0
  2544 ;;Total ram usage:        3 bytes
  2545 ;; Hardware stack levels used:    1
  2546 ;; Hardware stack levels required when called:   10
  2547 ;; This function calls:
  2548 ;;		Nothing
  2549 ;; This function is called by:
  2550 ;;		_init_queues
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           	psect	text11
  2555  0017EA                     __ptext11:
  2556                           	opt stack 0
  2557  0017EA                     _init_queue:
  2558                           	opt stack 19
  2559                           
  2560                           ;messages.c: 15: unsigned char i;
  2561                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2562                           
  2563                           ;incstack = 0
  2564  0017EA  0100               	movlb	0	; () banked
  2565  0017EC  EE20 F034          	lfsr	2,52
  2566  0017F0  0100               	movlb	0	; () banked
  2567  0017F2  51B8               	movf	init_queue@qptr& (0+255),w,b
  2568  0017F4  26D9               	addwf	fsr2l,f,c
  2569  0017F6  0100               	movlb	0	; () banked
  2570  0017F8  51B9               	movf	(init_queue@qptr+1)& (0+255),w,b
  2571  0017FA  22DA               	addwfc	fsr2h,f,c
  2572  0017FC  0E00               	movlw	0
  2573  0017FE  6EDF               	movwf	indf2,c
  2574                           
  2575                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2576  001800  0100               	movlb	0	; () banked
  2577  001802  EE20 F035          	lfsr	2,53
  2578  001806  0100               	movlb	0	; () banked
  2579  001808  51B8               	movf	init_queue@qptr& (0+255),w,b
  2580  00180A  26D9               	addwf	fsr2l,f,c
  2581  00180C  0100               	movlb	0	; () banked
  2582  00180E  51B9               	movf	(init_queue@qptr+1)& (0+255),w,b
  2583  001810  22DA               	addwfc	fsr2h,f,c
  2584  001812  0E00               	movlw	0
  2585  001814  6EDF               	movwf	indf2,c
  2586                           
  2587                           ; BSR set to: 0
  2588                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  2589  001816  0E00               	movlw	0
  2590  001818  0100               	movlb	0	; () banked
  2591  00181A  6FBA               	movwf	init_queue@i& (0+255),b
  2592                           
  2593                           ; BSR set to: 0
  2594  00181C  0E03               	movlw	3
  2595  00181E  0100               	movlb	0	; () banked
  2596  001820  65BA               	cpfsgt	init_queue@i& (0+255),b
  2597  001822  D001               	goto	l2364
  2598  001824  0012               	return	
  2599  001826                     l2364:
  2600                           
  2601                           ; BSR set to: 0
  2602                           ;messages.c: 20: qptr->queue[i].full = 0;
  2603  001826  0100               	movlb	0	; () banked
  2604  001828  51BA               	movf	init_queue@i& (0+255),w,b
  2605  00182A  0D0D               	mullw	13
  2606  00182C  50F3               	movf	prodl,w,c
  2607  00182E  0100               	movlb	0	; () banked
  2608  001830  25B8               	addwf	init_queue@qptr& (0+255),w,b
  2609  001832  6ED9               	movwf	fsr2l,c
  2610  001834  50F4               	movf	prodh,w,c
  2611  001836  0100               	movlb	0	; () banked
  2612  001838  21B9               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2613  00183A  6EDA               	movwf	fsr2h,c
  2614  00183C  0E00               	movlw	0
  2615  00183E  6EDF               	movwf	indf2,c
  2616                           
  2617                           ; BSR set to: 0
  2618  001840  0100               	movlb	0	; () banked
  2619  001842  2BBA               	incf	init_queue@i& (0+255),f,b
  2620                           
  2621                           ; BSR set to: 0
  2622  001844  0E03               	movlw	3
  2623  001846  0100               	movlb	0	; () banked
  2624  001848  65BA               	cpfsgt	init_queue@i& (0+255),b
  2625  00184A  D7ED               	goto	l2364
  2626  00184C  0012               	return	
  2627  00184E                     __end_of_init_queue:
  2628                           	opt stack 0
  2629                           tblptru	equ	0xFF8
  2630                           prodh	equ	0xFF4
  2631                           prodl	equ	0xFF3
  2632                           postinc0	equ	0xFEE
  2633                           wreg	equ	0xFE8
  2634                           indf1	equ	0xFE7
  2635                           fsr1h	equ	0xFE2
  2636                           fsr1l	equ	0xFE1
  2637                           indf2	equ	0xFDF
  2638                           postinc2	equ	0xFDE
  2639                           postdec2	equ	0xFDD
  2640                           fsr2h	equ	0xFDA
  2641                           fsr2l	equ	0xFD9
  2642                           status	equ	0xFD8
  2643                           
  2644 ;; *************** function _init_i2c *****************
  2645 ;; Defined at:
  2646 ;;		line 268 in file "../src/my_i2c.c"
  2647 ;; Parameters:    Size  Location     Type
  2648 ;;  ic              2   56[BANK0 ] PTR struct __i2c_comm
  2649 ;;		 -> main@ic(28), 
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;		None
  2652 ;; Return value:  Size  Location     Type
  2653 ;;		None               void
  2654 ;; Registers used:
  2655 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2656 ;; Tracked objects:
  2657 ;;		On entry : 0/0
  2658 ;;		On exit  : 0/0
  2659 ;;		Unchanged: 0/0
  2660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2661 ;;      Params:         0       2       0       0       0
  2662 ;;      Locals:         0       0       0       0       0
  2663 ;;      Temps:          0       0       0       0       0
  2664 ;;      Totals:         0       2       0       0       0
  2665 ;;Total ram usage:        2 bytes
  2666 ;; Hardware stack levels used:    1
  2667 ;; Hardware stack levels required when called:   10
  2668 ;; This function calls:
  2669 ;;		Nothing
  2670 ;; This function is called by:
  2671 ;;		_main
  2672 ;; This function uses a non-reentrant model
  2673 ;;
  2674                           
  2675                           	psect	text12
  2676  001784                     __ptext12:
  2677                           	opt stack 0
  2678  001784                     _init_i2c:
  2679                           	opt stack 20
  2680                           
  2681                           ;my_i2c.c: 269: ic_ptr = ic;
  2682                           
  2683                           ; BSR set to: 0
  2684                           ;incstack = 0
  2685  001784  0100               	movlb	0	; () banked
  2686  001786  C0B9  F0C6         	movff	init_i2c@ic+1,_ic_ptr+1
  2687  00178A  0100               	movlb	0	; () banked
  2688  00178C  C0B8  F0C5         	movff	init_i2c@ic,_ic_ptr
  2689                           
  2690                           ; BSR set to: 0
  2691                           ;my_i2c.c: 270: ic_ptr->buflen = 0;
  2692  001790  0100               	movlb	0	; () banked
  2693  001792  EE20 F00A          	lfsr	2,10
  2694  001796  0100               	movlb	0	; () banked
  2695  001798  51C5               	movf	_ic_ptr& (0+255),w,b
  2696  00179A  26D9               	addwf	fsr2l,f,c
  2697  00179C  0100               	movlb	0	; () banked
  2698  00179E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2699  0017A0  22DA               	addwfc	fsr2h,f,c
  2700  0017A2  0E00               	movlw	0
  2701  0017A4  6EDF               	movwf	indf2,c
  2702                           
  2703                           ; BSR set to: 0
  2704                           ;my_i2c.c: 271: ic_ptr->event_count = 0;
  2705  0017A6  0100               	movlb	0	; () banked
  2706  0017A8  EE20 F00B          	lfsr	2,11
  2707  0017AC  0100               	movlb	0	; () banked
  2708  0017AE  51C5               	movf	_ic_ptr& (0+255),w,b
  2709  0017B0  26D9               	addwf	fsr2l,f,c
  2710  0017B2  0100               	movlb	0	; () banked
  2711  0017B4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2712  0017B6  22DA               	addwfc	fsr2h,f,c
  2713  0017B8  0E00               	movlw	0
  2714  0017BA  6EDF               	movwf	indf2,c
  2715                           
  2716                           ; BSR set to: 0
  2717                           ;my_i2c.c: 272: ic_ptr->status = 0x5;
  2718  0017BC  0100               	movlb	0	; () banked
  2719  0017BE  EE20 F00C          	lfsr	2,12
  2720  0017C2  0100               	movlb	0	; () banked
  2721  0017C4  51C5               	movf	_ic_ptr& (0+255),w,b
  2722  0017C6  26D9               	addwf	fsr2l,f,c
  2723  0017C8  0100               	movlb	0	; () banked
  2724  0017CA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2725  0017CC  22DA               	addwfc	fsr2h,f,c
  2726  0017CE  0E05               	movlw	5
  2727  0017D0  6EDF               	movwf	indf2,c
  2728                           
  2729                           ; BSR set to: 0
  2730                           ;my_i2c.c: 273: ic_ptr->error_count = 0;
  2731  0017D2  0100               	movlb	0	; () banked
  2732  0017D4  EE20 F00E          	lfsr	2,14
  2733  0017D8  0100               	movlb	0	; () banked
  2734  0017DA  51C5               	movf	_ic_ptr& (0+255),w,b
  2735  0017DC  26D9               	addwf	fsr2l,f,c
  2736  0017DE  0100               	movlb	0	; () banked
  2737  0017E0  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2738  0017E2  22DA               	addwfc	fsr2h,f,c
  2739  0017E4  0E00               	movlw	0
  2740  0017E6  6EDF               	movwf	indf2,c
  2741                           
  2742                           ; BSR set to: 0
  2743  0017E8  0012               	return	
  2744  0017EA                     __end_of_init_i2c:
  2745                           	opt stack 0
  2746                           tblptru	equ	0xFF8
  2747                           prodh	equ	0xFF4
  2748                           prodl	equ	0xFF3
  2749                           postinc0	equ	0xFEE
  2750                           wreg	equ	0xFE8
  2751                           indf1	equ	0xFE7
  2752                           fsr1h	equ	0xFE2
  2753                           fsr1l	equ	0xFE1
  2754                           indf2	equ	0xFDF
  2755                           postinc2	equ	0xFDE
  2756                           postdec2	equ	0xFDD
  2757                           fsr2h	equ	0xFDA
  2758                           fsr2l	equ	0xFD9
  2759                           status	equ	0xFD8
  2760                           
  2761 ;; *************** function _init_debug *****************
  2762 ;; Defined at:
  2763 ;;		line 19 in file "../src/init_debug.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;		None
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;		None
  2768 ;; Return value:  Size  Location     Type
  2769 ;;		None               void
  2770 ;; Registers used:
  2771 ;;		None
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2777 ;;      Params:         0       0       0       0       0
  2778 ;;      Locals:         0       0       0       0       0
  2779 ;;      Temps:          0       0       0       0       0
  2780 ;;      Totals:         0       0       0       0       0
  2781 ;;Total ram usage:        0 bytes
  2782 ;; Hardware stack levels used:    1
  2783 ;; Hardware stack levels required when called:   10
  2784 ;; This function calls:
  2785 ;;		Nothing
  2786 ;; This function is called by:
  2787 ;;		_main
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791                           	psect	text13
  2792  001E9A                     __ptext13:
  2793                           	opt stack 0
  2794  001E9A                     _init_debug:
  2795                           	opt stack 20
  2796                           
  2797                           ;init_debug.c: 20: TRISDbits.TRISD4 = 0;
  2798                           
  2799                           ; BSR set to: 0
  2800                           ;incstack = 0
  2801  001E9A  9895               	bcf	3989,4,c	;volatile
  2802                           
  2803                           ;init_debug.c: 21: TRISDbits.TRISD5 = 0;
  2804  001E9C  9A95               	bcf	3989,5,c	;volatile
  2805                           
  2806                           ;init_debug.c: 22: TRISDbits.TRISD6 = 0;
  2807  001E9E  9C95               	bcf	3989,6,c	;volatile
  2808                           
  2809                           ;init_debug.c: 23: TRISDbits.TRISD7 = 0;
  2810  001EA0  9E95               	bcf	3989,7,c	;volatile
  2811                           
  2812                           ;init_debug.c: 24: PORTDbits.RD4 = 0;
  2813  001EA2  9883               	bcf	3971,4,c	;volatile
  2814                           
  2815                           ;init_debug.c: 25: PORTDbits.RD5 = 0;
  2816  001EA4  9A83               	bcf	3971,5,c	;volatile
  2817                           
  2818                           ;init_debug.c: 26: PORTDbits.RD6 = 0;
  2819  001EA6  9C83               	bcf	3971,6,c	;volatile
  2820                           
  2821                           ;init_debug.c: 27: PORTDbits.RD7 = 0;
  2822  001EA8  9E83               	bcf	3971,7,c	;volatile
  2823  001EAA  0012               	return	
  2824  001EAC                     __end_of_init_debug:
  2825                           	opt stack 0
  2826                           tblptru	equ	0xFF8
  2827                           prodh	equ	0xFF4
  2828                           prodl	equ	0xFF3
  2829                           postinc0	equ	0xFEE
  2830                           wreg	equ	0xFE8
  2831                           indf1	equ	0xFE7
  2832                           fsr1h	equ	0xFE2
  2833                           fsr1l	equ	0xFE1
  2834                           indf2	equ	0xFDF
  2835                           postinc2	equ	0xFDE
  2836                           postdec2	equ	0xFDD
  2837                           fsr2h	equ	0xFDA
  2838                           fsr2l	equ	0xFD9
  2839                           status	equ	0xFD8
  2840                           
  2841 ;; *************** function _i2c_configure_slave *****************
  2842 ;; Defined at:
  2843 ;;		line 279 in file "../src/my_i2c.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;  addr            1    wreg     unsigned char 
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;  addr            1   56[BANK0 ] unsigned char 
  2848 ;; Return value:  Size  Location     Type
  2849 ;;		None               void
  2850 ;; Registers used:
  2851 ;;		wreg, status,2, status,0
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2857 ;;      Params:         0       0       0       0       0
  2858 ;;      Locals:         0       1       0       0       0
  2859 ;;      Temps:          0       0       0       0       0
  2860 ;;      Totals:         0       1       0       0       0
  2861 ;;Total ram usage:        1 bytes
  2862 ;; Hardware stack levels used:    1
  2863 ;; Hardware stack levels required when called:   10
  2864 ;; This function calls:
  2865 ;;		Nothing
  2866 ;; This function is called by:
  2867 ;;		_main
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871                           	psect	text14
  2872  001D0C                     __ptext14:
  2873                           	opt stack 0
  2874  001D0C                     _i2c_configure_slave:
  2875                           	opt stack 20
  2876                           
  2877                           ;incstack = 0
  2878                           ;i2c_configure_slave@addr stored from wreg
  2879  001D0C  0100               	movlb	0	; () banked
  2880  001D0E  6FB8               	movwf	i2c_configure_slave@addr& (0+255),b
  2881                           
  2882                           ; BSR set to: 0
  2883                           ;my_i2c.c: 291: TRISCbits.TRISC3 = 1;
  2884  001D10  8694               	bsf	3988,3,c	;volatile
  2885                           
  2886                           ;my_i2c.c: 292: TRISCbits.TRISC4 = 1;
  2887  001D12  8894               	bsf	3988,4,c	;volatile
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;my_i2c.c: 297: SSPADD = addr;
  2891  001D14  C0B8  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  2892                           
  2893                           ; BSR set to: 0
  2894                           ;my_i2c.c: 299: SSPSTAT = 0x0;
  2895  001D18  0E00               	movlw	0
  2896  001D1A  6EC7               	movwf	4039,c	;volatile
  2897                           
  2898                           ; BSR set to: 0
  2899                           ;my_i2c.c: 300: SSPCON1 = 0x0;
  2900  001D1C  0E00               	movlw	0
  2901  001D1E  6EC6               	movwf	4038,c	;volatile
  2902                           
  2903                           ; BSR set to: 0
  2904                           ;my_i2c.c: 301: SSPCON2 = 0x0;
  2905  001D20  0E00               	movlw	0
  2906  001D22  6EC5               	movwf	4037,c	;volatile
  2907                           
  2908                           ; BSR set to: 0
  2909                           ;my_i2c.c: 302: SSPCON1 |= 0x0E;
  2910  001D24  0E0E               	movlw	14
  2911  001D26  12C6               	iorwf	4038,f,c	;volatile
  2912                           
  2913                           ; BSR set to: 0
  2914                           ;my_i2c.c: 303: SSPSTAT |= 0b10000000;
  2915  001D28  8EC7               	bsf	4039,7,c	;volatile
  2916                           
  2917                           ; BSR set to: 0
  2918                           ;my_i2c.c: 306: TRISCbits.TRISC3 = 1;
  2919  001D2A  8694               	bsf	3988,3,c	;volatile
  2920                           
  2921                           ; BSR set to: 0
  2922                           ;my_i2c.c: 307: TRISCbits.TRISC4 = 1;
  2923  001D2C  8894               	bsf	3988,4,c	;volatile
  2924                           
  2925                           ; BSR set to: 0
  2926                           ;my_i2c.c: 328: SSPCON2bits.SEN = 1;
  2927  001D2E  80C5               	bsf	4037,0,c	;volatile
  2928                           
  2929                           ; BSR set to: 0
  2930                           ;my_i2c.c: 329: SSPCON1 |= 0b00100000;
  2931  001D30  8AC6               	bsf	4038,5,c	;volatile
  2932                           
  2933                           ; BSR set to: 0
  2934  001D32  0012               	return	
  2935  001D34                     __end_of_i2c_configure_slave:
  2936                           	opt stack 0
  2937                           tblptru	equ	0xFF8
  2938                           prodh	equ	0xFF4
  2939                           prodl	equ	0xFF3
  2940                           postinc0	equ	0xFEE
  2941                           wreg	equ	0xFE8
  2942                           indf1	equ	0xFE7
  2943                           fsr1h	equ	0xFE2
  2944                           fsr1l	equ	0xFE1
  2945                           indf2	equ	0xFDF
  2946                           postinc2	equ	0xFDE
  2947                           postdec2	equ	0xFDD
  2948                           fsr2h	equ	0xFDA
  2949                           fsr2l	equ	0xFD9
  2950                           status	equ	0xFD8
  2951                           
  2952 ;; *************** function _enable_interrupts *****************
  2953 ;; Defined at:
  2954 ;;		line 16 in file "../src/interrupts.c"
  2955 ;; Parameters:    Size  Location     Type
  2956 ;;		None
  2957 ;; Auto vars:     Size  Location     Type
  2958 ;;		None
  2959 ;; Return value:  Size  Location     Type
  2960 ;;		None               void
  2961 ;; Registers used:
  2962 ;;		None
  2963 ;; Tracked objects:
  2964 ;;		On entry : 0/0
  2965 ;;		On exit  : 0/0
  2966 ;;		Unchanged: 0/0
  2967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2968 ;;      Params:         0       0       0       0       0
  2969 ;;      Locals:         0       0       0       0       0
  2970 ;;      Temps:          0       0       0       0       0
  2971 ;;      Totals:         0       0       0       0       0
  2972 ;;Total ram usage:        0 bytes
  2973 ;; Hardware stack levels used:    1
  2974 ;; Hardware stack levels required when called:   10
  2975 ;; This function calls:
  2976 ;;		Nothing
  2977 ;; This function is called by:
  2978 ;;		_main
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982                           	psect	text15
  2983  001F0C                     __ptext15:
  2984                           	opt stack 0
  2985  001F0C                     _enable_interrupts:
  2986                           	opt stack 20
  2987                           
  2988                           ;interrupts.c: 19: RCONbits.IPEN = 1;
  2989                           
  2990                           ; BSR set to: 0
  2991                           ;incstack = 0
  2992  001F0C  8ED0               	bsf	4048,7,c	;volatile
  2993                           
  2994                           ;interrupts.c: 20: INTCONbits.GIEH = 1;
  2995  001F0E  8EF2               	bsf	intcon,7,c	;volatile
  2996                           
  2997                           ;interrupts.c: 21: INTCONbits.GIEL = 1;
  2998  001F10  8CF2               	bsf	intcon,6,c	;volatile
  2999  001F12  0012               	return	
  3000  001F14                     __end_of_enable_interrupts:
  3001                           	opt stack 0
  3002                           tblptru	equ	0xFF8
  3003                           prodh	equ	0xFF4
  3004                           prodl	equ	0xFF3
  3005                           intcon	equ	0xFF2
  3006                           postinc0	equ	0xFEE
  3007                           wreg	equ	0xFE8
  3008                           indf1	equ	0xFE7
  3009                           fsr1h	equ	0xFE2
  3010                           fsr1l	equ	0xFE1
  3011                           indf2	equ	0xFDF
  3012                           postinc2	equ	0xFDE
  3013                           postdec2	equ	0xFDD
  3014                           fsr2h	equ	0xFDA
  3015                           fsr2l	equ	0xFD9
  3016                           status	equ	0xFD8
  3017                           
  3018 ;; *************** function _block_on_To_msgqueues *****************
  3019 ;; Defined at:
  3020 ;;		line 256 in file "../src/messages.c"
  3021 ;; Parameters:    Size  Location     Type
  3022 ;;		None
  3023 ;; Auto vars:     Size  Location     Type
  3024 ;;		None
  3025 ;; Return value:  Size  Location     Type
  3026 ;;		None               void
  3027 ;; Registers used:
  3028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3029 ;; Tracked objects:
  3030 ;;		On entry : 0/0
  3031 ;;		On exit  : 0/0
  3032 ;;		Unchanged: 0/0
  3033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3034 ;;      Params:         0       0       0       0       0
  3035 ;;      Locals:         0       0       0       0       0
  3036 ;;      Temps:          0       0       0       0       0
  3037 ;;      Totals:         0       0       0       0       0
  3038 ;;Total ram usage:        0 bytes
  3039 ;; Hardware stack levels used:    1
  3040 ;; Hardware stack levels required when called:   13
  3041 ;; This function calls:
  3042 ;;		_Delay1KTCYx
  3043 ;;		_check_msg
  3044 ;;		_in_main
  3045 ;; This function is called by:
  3046 ;;		_main
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           	psect	text16
  3051  00190C                     __ptext16:
  3052                           	opt stack 0
  3053  00190C                     _block_on_To_msgqueues:
  3054                           	opt stack 17
  3055                           
  3056                           ;messages.c: 257: if (!in_main()) {
  3057                           
  3058                           ;incstack = 0
  3059  00190C  ECBB  F00D         	call	_in_main	;wreg free
  3060  001910  0100               	movlb	0	; () banked
  3061  001912  51BD               	movf	(?_in_main+1)& (0+255),w,b
  3062  001914  0100               	movlb	0	; () banked
  3063  001916  11BC               	iorwf	?_in_main& (0+255),w,b
  3064  001918  B4D8               	btfsc	status,2,c
  3065  00191A  0012               	return	
  3066                           
  3067                           ; BSR set to: 0
  3068                           ;messages.c: 259: }
  3069                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3070                           
  3071                           ; BSR set to: 0
  3072                           
  3073                           ; BSR set to: 0
  3074                           ;messages.c: 258: return;
  3075  00191C  0E01               	movlw	1
  3076  00191E  6E50               	movwf	_MQ_Main_Willing_to_block,c
  3077  001920                     l2754:
  3078                           
  3079                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3080  001920  0101               	movlb	1	; () banked
  3081  001922  0E01               	movlw	high _ToMainHigh_MQ
  3082  001924  0100               	movlb	0	; () banked
  3083  001926  6FB9               	movwf	(check_msg@qptr+1)& (0+255),b
  3084  001928  0101               	movlb	1	; () banked
  3085  00192A  0E36               	movlw	low _ToMainHigh_MQ
  3086  00192C  0100               	movlb	0	; () banked
  3087  00192E  6FB8               	movwf	check_msg@qptr& (0+255),b
  3088  001930  EC0F  F00E         	call	_check_msg	;wreg free
  3089  001934  0900               	iorlw	0
  3090  001936  B4D8               	btfsc	status,2,c
  3091  001938  D003               	goto	l2760
  3092                           
  3093                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3094  00193A  0E00               	movlw	0
  3095  00193C  6E50               	movwf	_MQ_Main_Willing_to_block,c
  3096  00193E  0012               	return	
  3097  001940                     l2760:
  3098                           
  3099                           ;messages.c: 271: }
  3100                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3101  001940  0101               	movlb	1	; () banked
  3102  001942  0E01               	movlw	high _ToMainLow_MQ
  3103  001944  0100               	movlb	0	; () banked
  3104  001946  6FB9               	movwf	(check_msg@qptr+1)& (0+255),b
  3105  001948  0101               	movlb	1	; () banked
  3106  00194A  0E6C               	movlw	low _ToMainLow_MQ
  3107  00194C  0100               	movlb	0	; () banked
  3108  00194E  6FB8               	movwf	check_msg@qptr& (0+255),b
  3109  001950  EC0F  F00E         	call	_check_msg	;wreg free
  3110  001954  0900               	iorlw	0
  3111  001956  B4D8               	btfsc	status,2,c
  3112  001958  D003               	goto	l2766
  3113                           
  3114                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3115  00195A  0E00               	movlw	0
  3116  00195C  6E50               	movwf	_MQ_Main_Willing_to_block,c
  3117  00195E  0012               	return	
  3118  001960                     l2766:
  3119                           
  3120                           ;messages.c: 278: }
  3121                           ;messages.c: 279: Delay1KTCYx(10);
  3122  001960  0E0A               	movlw	10
  3123  001962  EC3A  F00F         	call	_Delay1KTCYx
  3124  001966  D7DC               	goto	l2754
  3125  001968                     __end_of_block_on_To_msgqueues:
  3126                           	opt stack 0
  3127                           tblptru	equ	0xFF8
  3128                           prodh	equ	0xFF4
  3129                           prodl	equ	0xFF3
  3130                           intcon	equ	0xFF2
  3131                           postinc0	equ	0xFEE
  3132                           wreg	equ	0xFE8
  3133                           indf1	equ	0xFE7
  3134                           fsr1h	equ	0xFE2
  3135                           fsr1l	equ	0xFE1
  3136                           indf2	equ	0xFDF
  3137                           postinc2	equ	0xFDE
  3138                           postdec2	equ	0xFDD
  3139                           fsr2h	equ	0xFDA
  3140                           fsr2l	equ	0xFD9
  3141                           status	equ	0xFD8
  3142                           
  3143 ;; *************** function _in_main *****************
  3144 ;; Defined at:
  3145 ;;		line 42 in file "../src/interrupts.c"
  3146 ;; Parameters:    Size  Location     Type
  3147 ;;		None
  3148 ;; Auto vars:     Size  Location     Type
  3149 ;;		None
  3150 ;; Return value:  Size  Location     Type
  3151 ;;                  2   60[BANK0 ] int 
  3152 ;; Registers used:
  3153 ;;		wreg, status,2, status,0, cstack
  3154 ;; Tracked objects:
  3155 ;;		On entry : 0/0
  3156 ;;		On exit  : 0/0
  3157 ;;		Unchanged: 0/0
  3158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3159 ;;      Params:         0       2       0       0       0
  3160 ;;      Locals:         0       0       0       0       0
  3161 ;;      Temps:          0       0       0       0       0
  3162 ;;      Totals:         0       2       0       0       0
  3163 ;;Total ram usage:        2 bytes
  3164 ;; Hardware stack levels used:    1
  3165 ;; Hardware stack levels required when called:   12
  3166 ;; This function calls:
  3167 ;;		_in_high_int
  3168 ;;		_in_low_int
  3169 ;; This function is called by:
  3170 ;;		_block_on_To_msgqueues
  3171 ;; This function uses a non-reentrant model
  3172 ;;
  3173                           
  3174                           	psect	text17
  3175  001B76                     __ptext17:
  3176                           	opt stack 0
  3177  001B76                     _in_main:
  3178                           	opt stack 17
  3179                           
  3180                           ;interrupts.c: 43: if ((!in_low_int()) && (!in_high_int())) {
  3181                           
  3182                           ;incstack = 0
  3183  001B76  EC9C  F00D         	call	_in_low_int	;wreg free
  3184  001B7A  0100               	movlb	0	; () banked
  3185  001B7C  51BB               	movf	(?_in_low_int+1)& (0+255),w,b
  3186  001B7E  0100               	movlb	0	; () banked
  3187  001B80  11BA               	iorwf	?_in_low_int& (0+255),w,b
  3188  001B82  A4D8               	btfss	status,2,c
  3189  001B84  D00F               	goto	l2348
  3190                           
  3191                           ; BSR set to: 0
  3192  001B86  EC71  F00F         	call	_in_high_int	;wreg free
  3193  001B8A  0100               	movlb	0	; () banked
  3194  001B8C  51B9               	movf	(?_in_high_int+1)& (0+255),w,b
  3195  001B8E  0100               	movlb	0	; () banked
  3196  001B90  11B8               	iorwf	?_in_high_int& (0+255),w,b
  3197  001B92  A4D8               	btfss	status,2,c
  3198  001B94  D007               	goto	l2348
  3199                           
  3200                           ; BSR set to: 0
  3201                           ;interrupts.c: 44: return (1);
  3202  001B96  0E00               	movlw	0
  3203  001B98  0100               	movlb	0	; () banked
  3204  001B9A  6FBD               	movwf	(?_in_main+1)& (0+255),b
  3205  001B9C  0E01               	movlw	1
  3206  001B9E  0100               	movlb	0	; () banked
  3207  001BA0  6FBC               	movwf	?_in_main& (0+255),b
  3208  001BA2  0012               	return	
  3209  001BA4                     l2348:
  3210                           
  3211                           ; BSR set to: 0
  3212                           ;interrupts.c: 46: return (0);
  3213  001BA4  0E00               	movlw	0
  3214  001BA6  0100               	movlb	0	; () banked
  3215  001BA8  6FBD               	movwf	(?_in_main+1)& (0+255),b
  3216  001BAA  0E00               	movlw	0
  3217  001BAC  0100               	movlb	0	; () banked
  3218  001BAE  6FBC               	movwf	?_in_main& (0+255),b
  3219  001BB0  0012               	return	
  3220  001BB2                     __end_of_in_main:
  3221                           	opt stack 0
  3222                           tblptru	equ	0xFF8
  3223                           prodh	equ	0xFF4
  3224                           prodl	equ	0xFF3
  3225                           intcon	equ	0xFF2
  3226                           postinc0	equ	0xFEE
  3227                           wreg	equ	0xFE8
  3228                           indf1	equ	0xFE7
  3229                           fsr1h	equ	0xFE2
  3230                           fsr1l	equ	0xFE1
  3231                           indf2	equ	0xFDF
  3232                           postinc2	equ	0xFDE
  3233                           postdec2	equ	0xFDD
  3234                           fsr2h	equ	0xFDA
  3235                           fsr2l	equ	0xFD9
  3236                           status	equ	0xFD8
  3237                           
  3238 ;; *************** function _in_low_int *****************
  3239 ;; Defined at:
  3240 ;;		line 32 in file "../src/interrupts.c"
  3241 ;; Parameters:    Size  Location     Type
  3242 ;;		None
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;		None
  3245 ;; Return value:  Size  Location     Type
  3246 ;;                  2   58[BANK0 ] int 
  3247 ;; Registers used:
  3248 ;;		wreg, status,2, status,0, cstack
  3249 ;; Tracked objects:
  3250 ;;		On entry : 0/0
  3251 ;;		On exit  : 0/0
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3254 ;;      Params:         0       2       0       0       0
  3255 ;;      Locals:         0       0       0       0       0
  3256 ;;      Temps:          0       0       0       0       0
  3257 ;;      Totals:         0       2       0       0       0
  3258 ;;Total ram usage:        2 bytes
  3259 ;; Hardware stack levels used:    1
  3260 ;; Hardware stack levels required when called:   11
  3261 ;; This function calls:
  3262 ;;		_in_high_int
  3263 ;; This function is called by:
  3264 ;;		_in_main
  3265 ;; This function uses a non-reentrant model
  3266 ;;
  3267                           
  3268                           	psect	text18
  3269  001B38                     __ptext18:
  3270                           	opt stack 0
  3271  001B38                     _in_low_int:
  3272                           	opt stack 17
  3273                           
  3274                           ;interrupts.c: 33: if (INTCONbits.GIEL == 1) {
  3275                           
  3276                           ; BSR set to: 0
  3277                           ;incstack = 0
  3278  001B38  ACF2               	btfss	intcon,6,c	;volatile
  3279  001B3A  D007               	goto	l2218
  3280                           
  3281                           ;interrupts.c: 34: return (0);
  3282  001B3C  0E00               	movlw	0
  3283  001B3E  0100               	movlb	0	; () banked
  3284  001B40  6FBB               	movwf	(?_in_low_int+1)& (0+255),b
  3285  001B42  0E00               	movlw	0
  3286  001B44  0100               	movlb	0	; () banked
  3287  001B46  6FBA               	movwf	?_in_low_int& (0+255),b
  3288  001B48  0012               	return	
  3289  001B4A                     l2218:
  3290  001B4A  EC71  F00F         	call	_in_high_int	;wreg free
  3291  001B4E  0100               	movlb	0	; () banked
  3292  001B50  51B9               	movf	(?_in_high_int+1)& (0+255),w,b
  3293  001B52  0100               	movlb	0	; () banked
  3294  001B54  11B8               	iorwf	?_in_high_int& (0+255),w,b
  3295  001B56  B4D8               	btfsc	status,2,c
  3296  001B58  D007               	goto	l2226
  3297                           
  3298                           ; BSR set to: 0
  3299                           ;interrupts.c: 36: return (0);
  3300  001B5A  0E00               	movlw	0
  3301  001B5C  0100               	movlb	0	; () banked
  3302  001B5E  6FBB               	movwf	(?_in_low_int+1)& (0+255),b
  3303  001B60  0E00               	movlw	0
  3304  001B62  0100               	movlb	0	; () banked
  3305  001B64  6FBA               	movwf	?_in_low_int& (0+255),b
  3306  001B66  0012               	return	
  3307  001B68                     l2226:
  3308                           
  3309                           ; BSR set to: 0
  3310                           ;interrupts.c: 38: return (1);
  3311  001B68  0E00               	movlw	0
  3312  001B6A  0100               	movlb	0	; () banked
  3313  001B6C  6FBB               	movwf	(?_in_low_int+1)& (0+255),b
  3314  001B6E  0E01               	movlw	1
  3315  001B70  0100               	movlb	0	; () banked
  3316  001B72  6FBA               	movwf	?_in_low_int& (0+255),b
  3317  001B74  0012               	return	
  3318  001B76                     __end_of_in_low_int:
  3319                           	opt stack 0
  3320                           tblptru	equ	0xFF8
  3321                           prodh	equ	0xFF4
  3322                           prodl	equ	0xFF3
  3323                           intcon	equ	0xFF2
  3324                           postinc0	equ	0xFEE
  3325                           wreg	equ	0xFE8
  3326                           indf1	equ	0xFE7
  3327                           fsr1h	equ	0xFE2
  3328                           fsr1l	equ	0xFE1
  3329                           indf2	equ	0xFDF
  3330                           postinc2	equ	0xFDE
  3331                           postdec2	equ	0xFDD
  3332                           fsr2h	equ	0xFDA
  3333                           fsr2l	equ	0xFD9
  3334                           status	equ	0xFD8
  3335                           
  3336 ;; *************** function _in_high_int *****************
  3337 ;; Defined at:
  3338 ;;		line 24 in file "../src/interrupts.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;		None
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;		None
  3343 ;; Return value:  Size  Location     Type
  3344 ;;                  2   56[BANK0 ] int 
  3345 ;; Registers used:
  3346 ;;		wreg, status,2
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/0
  3349 ;;		On exit  : 0/0
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3352 ;;      Params:         0       2       0       0       0
  3353 ;;      Locals:         0       0       0       0       0
  3354 ;;      Temps:          0       0       0       0       0
  3355 ;;      Totals:         0       2       0       0       0
  3356 ;;Total ram usage:        2 bytes
  3357 ;; Hardware stack levels used:    1
  3358 ;; Hardware stack levels required when called:   10
  3359 ;; This function calls:
  3360 ;;		Nothing
  3361 ;; This function is called by:
  3362 ;;		_in_low_int
  3363 ;;		_in_main
  3364 ;; This function uses a non-reentrant model
  3365 ;;
  3366                           
  3367                           	psect	text19
  3368  001EE2                     __ptext19:
  3369                           	opt stack 0
  3370  001EE2                     _in_high_int:
  3371                           	opt stack 17
  3372                           
  3373                           ;interrupts.c: 25: return (!INTCONbits.GIEH);
  3374                           
  3375                           ; BSR set to: 0
  3376                           ;incstack = 0
  3377  001EE2  0E00               	movlw	0
  3378  001EE4  AEF2               	btfss	intcon,7,c	;volatile
  3379  001EE6  0E01               	movlw	1
  3380  001EE8  0100               	movlb	0	; () banked
  3381  001EEA  6FB8               	movwf	?_in_high_int& (0+255),b
  3382  001EEC  0100               	movlb	0	; () banked
  3383  001EEE  6BB9               	clrf	(?_in_high_int+1)& (0+255),b
  3384  001EF0  0012               	return	
  3385  001EF2                     __end_of_in_high_int:
  3386                           	opt stack 0
  3387                           tblptru	equ	0xFF8
  3388                           prodh	equ	0xFF4
  3389                           prodl	equ	0xFF3
  3390                           intcon	equ	0xFF2
  3391                           postinc0	equ	0xFEE
  3392                           wreg	equ	0xFE8
  3393                           indf1	equ	0xFE7
  3394                           fsr1h	equ	0xFE2
  3395                           fsr1l	equ	0xFE1
  3396                           indf2	equ	0xFDF
  3397                           postinc2	equ	0xFDE
  3398                           postdec2	equ	0xFDD
  3399                           fsr2h	equ	0xFDA
  3400                           fsr2l	equ	0xFD9
  3401                           status	equ	0xFD8
  3402                           
  3403 ;; *************** function _check_msg *****************
  3404 ;; Defined at:
  3405 ;;		line 220 in file "../src/messages.c"
  3406 ;; Parameters:    Size  Location     Type
  3407 ;;  qptr            2   56[BANK0 ] PTR struct __msg_queue
  3408 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3409 ;; Auto vars:     Size  Location     Type
  3410 ;;		None
  3411 ;; Return value:  Size  Location     Type
  3412 ;;                  1    wreg      unsigned char 
  3413 ;; Registers used:
  3414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3415 ;; Tracked objects:
  3416 ;;		On entry : 0/0
  3417 ;;		On exit  : 0/0
  3418 ;;		Unchanged: 0/0
  3419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3420 ;;      Params:         0       2       0       0       0
  3421 ;;      Locals:         0       0       0       0       0
  3422 ;;      Temps:          0       1       0       0       0
  3423 ;;      Totals:         0       3       0       0       0
  3424 ;;Total ram usage:        3 bytes
  3425 ;; Hardware stack levels used:    1
  3426 ;; Hardware stack levels required when called:   10
  3427 ;; This function calls:
  3428 ;;		Nothing
  3429 ;; This function is called by:
  3430 ;;		_block_on_To_msgqueues
  3431 ;; This function uses a non-reentrant model
  3432 ;;
  3433                           
  3434                           	psect	text20
  3435  001C1E                     __ptext20:
  3436                           	opt stack 0
  3437  001C1E                     _check_msg:
  3438                           	opt stack 19
  3439                           
  3440                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
  3441                           
  3442                           ; BSR set to: 0
  3443                           ;incstack = 0
  3444  001C1E  0100               	movlb	0	; () banked
  3445  001C20  EE20 F035          	lfsr	2,53
  3446  001C24  0100               	movlb	0	; () banked
  3447  001C26  51B8               	movf	check_msg@qptr& (0+255),w,b
  3448  001C28  26D9               	addwf	fsr2l,f,c
  3449  001C2A  0100               	movlb	0	; () banked
  3450  001C2C  51B9               	movf	(check_msg@qptr+1)& (0+255),w,b
  3451  001C2E  22DA               	addwfc	fsr2h,f,c
  3452  001C30  50DF               	movf	indf2,w,c
  3453  001C32  0100               	movlb	0	; () banked
  3454  001C34  6FBA               	movwf	??_check_msg& (0+255),b
  3455  001C36  0100               	movlb	0	; () banked
  3456  001C38  51BA               	movf	??_check_msg& (0+255),w,b
  3457  001C3A  0D0D               	mullw	13
  3458  001C3C  50F3               	movf	prodl,w,c
  3459  001C3E  0100               	movlb	0	; () banked
  3460  001C40  25B8               	addwf	check_msg@qptr& (0+255),w,b
  3461  001C42  6ED9               	movwf	fsr2l,c
  3462  001C44  50F4               	movf	prodh,w,c
  3463  001C46  0100               	movlb	0	; () banked
  3464  001C48  21B9               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3465  001C4A  6EDA               	movwf	fsr2h,c
  3466  001C4C  50DF               	movf	indf2,w,c
  3467  001C4E  0012               	return	
  3468  001C50                     __end_of_check_msg:
  3469                           	opt stack 0
  3470                           tblptru	equ	0xFF8
  3471                           prodh	equ	0xFF4
  3472                           prodl	equ	0xFF3
  3473                           intcon	equ	0xFF2
  3474                           postinc0	equ	0xFEE
  3475                           wreg	equ	0xFE8
  3476                           indf1	equ	0xFE7
  3477                           fsr1h	equ	0xFE2
  3478                           fsr1l	equ	0xFE1
  3479                           indf2	equ	0xFDF
  3480                           postinc2	equ	0xFDE
  3481                           postdec2	equ	0xFDD
  3482                           fsr2h	equ	0xFDA
  3483                           fsr2l	equ	0xFD9
  3484                           status	equ	0xFD8
  3485                           
  3486 ;; *************** function _Delay1KTCYx *****************
  3487 ;; Defined at:
  3488 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.32\sources\pic18\d1ktcyx.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;  unit            1    wreg     unsigned char 
  3491 ;; Auto vars:     Size  Location     Type
  3492 ;;  unit            1   56[BANK0 ] unsigned char 
  3493 ;; Return value:  Size  Location     Type
  3494 ;;		None               void
  3495 ;; Registers used:
  3496 ;;		wreg
  3497 ;; Tracked objects:
  3498 ;;		On entry : 0/0
  3499 ;;		On exit  : 0/0
  3500 ;;		Unchanged: 0/0
  3501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3502 ;;      Params:         0       0       0       0       0
  3503 ;;      Locals:         0       1       0       0       0
  3504 ;;      Temps:          0       0       0       0       0
  3505 ;;      Totals:         0       1       0       0       0
  3506 ;;Total ram usage:        1 bytes
  3507 ;; Hardware stack levels used:    1
  3508 ;; Hardware stack levels required when called:   10
  3509 ;; This function calls:
  3510 ;;		Nothing
  3511 ;; This function is called by:
  3512 ;;		_block_on_To_msgqueues
  3513 ;; This function uses a non-reentrant model
  3514 ;;
  3515                           
  3516                           	psect	text21
  3517  001E74                     __ptext21:
  3518                           	opt stack 0
  3519  001E74                     _Delay1KTCYx:
  3520                           	opt stack 19
  3521                           
  3522                           ; BSR set to: 0
  3523                           ;incstack = 0
  3524                           ;Delay1KTCYx@unit stored from wreg
  3525  001E74  0100               	movlb	0	; () banked
  3526  001E76  6FB8               	movwf	Delay1KTCYx@unit& (0+255),b
  3527  001E78                     l711:
  3528                           
  3529                           ; BSR set to: 0
  3530                           
  3531                           ; BSR set to: 0
  3532  001E78  0EFA               	movlw	250
  3533  001E7A                     u3387:
  3534  001E7A  F000               	nop	
  3535  001E7C  2EE8               	decfsz	wreg,f,c
  3536  001E7E  D7FD               	goto	u3387
  3537  001E80  0100               	movlb	0	; () banked
  3538  001E82  2FB8               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3539  001E84  D7F9               	goto	l711
  3540  001E86  0012               	return	
  3541  001E88                     __end_of_Delay1KTCYx:
  3542                           	opt stack 0
  3543                           tblptru	equ	0xFF8
  3544                           prodh	equ	0xFF4
  3545                           prodl	equ	0xFF3
  3546                           intcon	equ	0xFF2
  3547                           postinc0	equ	0xFEE
  3548                           wreg	equ	0xFE8
  3549                           indf1	equ	0xFE7
  3550                           fsr1h	equ	0xFE2
  3551                           fsr1l	equ	0xFE1
  3552                           indf2	equ	0xFDF
  3553                           postinc2	equ	0xFDE
  3554                           postdec2	equ	0xFDD
  3555                           fsr2h	equ	0xFDA
  3556                           fsr2l	equ	0xFD9
  3557                           status	equ	0xFD8
  3558                           
  3559 ;; *************** function _ToMainLow_recvmsg *****************
  3560 ;; Defined at:
  3561 ;;		line 112 in file "../src/messages.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;  maxlength       1    wreg     unsigned char 
  3564 ;;  msgtype         2   12[BANK1 ] PTR unsigned char 
  3565 ;;		 -> main@msgtype(1), 
  3566 ;;  data            2   14[BANK1 ] PTR void 
  3567 ;;		 -> main@msgbuffer(11), 
  3568 ;; Auto vars:     Size  Location     Type
  3569 ;;  maxlength       1   68[BANK0 ] unsigned char 
  3570 ;; Return value:  Size  Location     Type
  3571 ;;                  1    wreg      char 
  3572 ;; Registers used:
  3573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3574 ;; Tracked objects:
  3575 ;;		On entry : 0/0
  3576 ;;		On exit  : 0/0
  3577 ;;		Unchanged: 0/0
  3578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3579 ;;      Params:         0       0       4       0       0
  3580 ;;      Locals:         0       1       0       0       0
  3581 ;;      Temps:          0       0       0       0       0
  3582 ;;      Totals:         0       1       4       0       0
  3583 ;;Total ram usage:        5 bytes
  3584 ;; Hardware stack levels used:    1
  3585 ;; Hardware stack levels required when called:   12
  3586 ;; This function calls:
  3587 ;;		_recv_msg
  3588 ;; This function is called by:
  3589 ;;		_main
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           	psect	text22
  3594  001BB2                     __ptext22:
  3595                           	opt stack 0
  3596  001BB2                     _ToMainLow_recvmsg:
  3597                           	opt stack 18
  3598                           
  3599                           ; BSR set to: 0
  3600                           ;incstack = 0
  3601                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3602  001BB2  0100               	movlb	0	; () banked
  3603  001BB4  6FC4               	movwf	ToMainLow_recvmsg@maxlength& (0+255),b
  3604                           
  3605                           ; BSR set to: 0
  3606                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3607  001BB6  0101               	movlb	1	; () banked
  3608  001BB8  0E01               	movlw	high _ToMainLow_MQ
  3609  001BBA  0101               	movlb	1	; () banked
  3610  001BBC  6FA3               	movwf	(recv_msg@qptr+1)& (0+255),b
  3611  001BBE  0101               	movlb	1	; () banked
  3612  001BC0  0E6C               	movlw	low _ToMainLow_MQ
  3613  001BC2  0101               	movlb	1	; () banked
  3614  001BC4  6FA2               	movwf	recv_msg@qptr& (0+255),b
  3615  001BC6  C0C4  F1A4         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3616  001BCA  0101               	movlb	1	; () banked
  3617  001BCC  C1AF  F1A6         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3618  001BD0  0101               	movlb	1	; () banked
  3619  001BD2  C1AE  F1A5         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3620  001BD6  0101               	movlb	1	; () banked
  3621  001BD8  C1B1  F1A8         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3622  001BDC  0101               	movlb	1	; () banked
  3623  001BDE  C1B0  F1A7         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3624  001BE2  EC22  F007         	call	_recv_msg	;wreg free
  3625  001BE6  0012               	return	
  3626  001BE8                     __end_of_ToMainLow_recvmsg:
  3627                           	opt stack 0
  3628                           tblptru	equ	0xFF8
  3629                           prodh	equ	0xFF4
  3630                           prodl	equ	0xFF3
  3631                           intcon	equ	0xFF2
  3632                           postinc0	equ	0xFEE
  3633                           wreg	equ	0xFE8
  3634                           indf1	equ	0xFE7
  3635                           fsr1h	equ	0xFE2
  3636                           fsr1l	equ	0xFE1
  3637                           indf2	equ	0xFDF
  3638                           postinc2	equ	0xFDE
  3639                           postdec2	equ	0xFDD
  3640                           fsr2h	equ	0xFDA
  3641                           fsr2l	equ	0xFD9
  3642                           status	equ	0xFD8
  3643                           
  3644 ;; *************** function _ToMainHigh_recvmsg *****************
  3645 ;; Defined at:
  3646 ;;		line 135 in file "../src/messages.c"
  3647 ;; Parameters:    Size  Location     Type
  3648 ;;  maxlength       1    wreg     unsigned char 
  3649 ;;  msgtype         2   12[BANK1 ] PTR unsigned char 
  3650 ;;		 -> main@msgtype(1), 
  3651 ;;  data            2   14[BANK1 ] PTR void 
  3652 ;;		 -> main@msgbuffer(11), 
  3653 ;; Auto vars:     Size  Location     Type
  3654 ;;  maxlength       1   68[BANK0 ] unsigned char 
  3655 ;; Return value:  Size  Location     Type
  3656 ;;                  1    wreg      char 
  3657 ;; Registers used:
  3658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3659 ;; Tracked objects:
  3660 ;;		On entry : 0/0
  3661 ;;		On exit  : 0/0
  3662 ;;		Unchanged: 0/0
  3663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3664 ;;      Params:         0       0       4       0       0
  3665 ;;      Locals:         0       1       0       0       0
  3666 ;;      Temps:          0       0       0       0       0
  3667 ;;      Totals:         0       1       4       0       0
  3668 ;;Total ram usage:        5 bytes
  3669 ;; Hardware stack levels used:    1
  3670 ;; Hardware stack levels required when called:   12
  3671 ;; This function calls:
  3672 ;;		_recv_msg
  3673 ;; This function is called by:
  3674 ;;		_main
  3675 ;; This function uses a non-reentrant model
  3676 ;;
  3677                           
  3678                           	psect	text23
  3679  001BE8                     __ptext23:
  3680                           	opt stack 0
  3681  001BE8                     _ToMainHigh_recvmsg:
  3682                           	opt stack 18
  3683                           
  3684                           ;incstack = 0
  3685                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3686  001BE8  0100               	movlb	0	; () banked
  3687  001BEA  6FC4               	movwf	ToMainHigh_recvmsg@maxlength& (0+255),b
  3688                           
  3689                           ; BSR set to: 0
  3690                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3691  001BEC  0101               	movlb	1	; () banked
  3692  001BEE  0E01               	movlw	high _ToMainHigh_MQ
  3693  001BF0  0101               	movlb	1	; () banked
  3694  001BF2  6FA3               	movwf	(recv_msg@qptr+1)& (0+255),b
  3695  001BF4  0101               	movlb	1	; () banked
  3696  001BF6  0E36               	movlw	low _ToMainHigh_MQ
  3697  001BF8  0101               	movlb	1	; () banked
  3698  001BFA  6FA2               	movwf	recv_msg@qptr& (0+255),b
  3699  001BFC  C0C4  F1A4         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3700  001C00  0101               	movlb	1	; () banked
  3701  001C02  C1AF  F1A6         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3702  001C06  0101               	movlb	1	; () banked
  3703  001C08  C1AE  F1A5         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3704  001C0C  0101               	movlb	1	; () banked
  3705  001C0E  C1B1  F1A8         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3706  001C12  0101               	movlb	1	; () banked
  3707  001C14  C1B0  F1A7         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3708  001C18  EC22  F007         	call	_recv_msg	;wreg free
  3709  001C1C  0012               	return	
  3710  001C1E                     __end_of_ToMainHigh_recvmsg:
  3711                           	opt stack 0
  3712                           tblptru	equ	0xFF8
  3713                           prodh	equ	0xFF4
  3714                           prodl	equ	0xFF3
  3715                           intcon	equ	0xFF2
  3716                           postinc0	equ	0xFEE
  3717                           wreg	equ	0xFE8
  3718                           indf1	equ	0xFE7
  3719                           fsr1h	equ	0xFE2
  3720                           fsr1l	equ	0xFE1
  3721                           indf2	equ	0xFDF
  3722                           postinc2	equ	0xFDE
  3723                           postdec2	equ	0xFDD
  3724                           fsr2h	equ	0xFDA
  3725                           fsr2l	equ	0xFD9
  3726                           status	equ	0xFD8
  3727                           
  3728 ;; *************** function _recv_msg *****************
  3729 ;; Defined at:
  3730 ;;		line 63 in file "../src/messages.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  3733 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3734 ;;  maxlength       1    2[BANK1 ] unsigned char 
  3735 ;;  msgtype         2    3[BANK1 ] PTR unsigned char 
  3736 ;;		 -> main@msgtype(1), timer0_int_handler@msgtype(2), 
  3737 ;;  data            2    5[BANK1 ] PTR void 
  3738 ;;		 -> main@msgbuffer(11), timer0_int_handler@val(2), 
  3739 ;; Auto vars:     Size  Location     Type
  3740 ;;  qmsg            2   10[BANK1 ] PTR struct __msg
  3741 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3742 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3743 ;;  tlength         2    8[BANK1 ] unsigned int 
  3744 ;;  slot            1    7[BANK1 ] unsigned char 
  3745 ;; Return value:  Size  Location     Type
  3746 ;;                  1    wreg      char 
  3747 ;; Registers used:
  3748 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3749 ;; Tracked objects:
  3750 ;;		On entry : 0/0
  3751 ;;		On exit  : 0/0
  3752 ;;		Unchanged: 0/0
  3753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3754 ;;      Params:         0       0       7       0       0
  3755 ;;      Locals:         0       0       5       0       0
  3756 ;;      Temps:          0       2       0       0       0
  3757 ;;      Totals:         0       2      12       0       0
  3758 ;;Total ram usage:       14 bytes
  3759 ;; Hardware stack levels used:    1
  3760 ;; Hardware stack levels required when called:   11
  3761 ;; This function calls:
  3762 ;;		_memcpy
  3763 ;; This function is called by:
  3764 ;;		_ToMainLow_recvmsg
  3765 ;;		_ToMainHigh_recvmsg
  3766 ;;		_FromMainLow_recvmsg
  3767 ;; This function uses a non-reentrant model
  3768 ;;
  3769                           
  3770                           	psect	text24
  3771  000E44                     __ptext24:
  3772                           	opt stack 0
  3773  000E44                     _recv_msg:
  3774                           	opt stack 18
  3775                           
  3776                           ;messages.c: 64: unsigned char slot;
  3777                           ;messages.c: 68: msg *qmsg;
  3778                           ;messages.c: 69: size_t tlength;
  3779                           ;messages.c: 72: slot = qptr->cur_read_ind;
  3780                           
  3781                           ;incstack = 0
  3782  000E44  0101               	movlb	1	; () banked
  3783  000E46  EE20 F035          	lfsr	2,53
  3784  000E4A  0101               	movlb	1	; () banked
  3785  000E4C  51A2               	movf	recv_msg@qptr& (0+255),w,b
  3786  000E4E  26D9               	addwf	fsr2l,f,c
  3787  000E50  0101               	movlb	1	; () banked
  3788  000E52  51A3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3789  000E54  22DA               	addwfc	fsr2h,f,c
  3790  000E56  50DF               	movf	indf2,w,c
  3791  000E58  0101               	movlb	1	; () banked
  3792  000E5A  6FA9               	movwf	recv_msg@slot& (0+255),b
  3793                           
  3794                           ; BSR set to: 1
  3795                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  3796  000E5C  0101               	movlb	1	; () banked
  3797  000E5E  51A9               	movf	recv_msg@slot& (0+255),w,b
  3798  000E60  0D0D               	mullw	13
  3799  000E62  50F3               	movf	prodl,w,c
  3800  000E64  0101               	movlb	1	; () banked
  3801  000E66  25A2               	addwf	recv_msg@qptr& (0+255),w,b
  3802  000E68  0101               	movlb	1	; () banked
  3803  000E6A  6FAC               	movwf	recv_msg@qmsg& (0+255),b
  3804  000E6C  50F4               	movf	prodh,w,c
  3805  000E6E  0101               	movlb	1	; () banked
  3806  000E70  21A3               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  3807  000E72  0101               	movlb	1	; () banked
  3808  000E74  6FAD               	movwf	(recv_msg@qmsg+1)& (0+255),b
  3809                           
  3810                           ; BSR set to: 1
  3811                           ;messages.c: 74: if (qmsg->full == 1) {
  3812  000E76  0E01               	movlw	1
  3813  000E78  C1AC  FFD9         	movff	recv_msg@qmsg,fsr2l
  3814  000E7C  C1AD  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3815  000E80  62DF               	cpfseq	indf2,c
  3816  000E82  D06F               	goto	l3424
  3817                           
  3818                           ; BSR set to: 1
  3819                           ;messages.c: 76: if (qmsg->length > maxlength) {
  3820  000E84  0101               	movlb	1	; () banked
  3821  000E86  EE20 F001          	lfsr	2,1
  3822  000E8A  0101               	movlb	1	; () banked
  3823  000E8C  51AC               	movf	recv_msg@qmsg& (0+255),w,b
  3824  000E8E  26D9               	addwf	fsr2l,f,c
  3825  000E90  0101               	movlb	1	; () banked
  3826  000E92  51AD               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3827  000E94  22DA               	addwfc	fsr2h,f,c
  3828  000E96  50DF               	movf	indf2,w,c
  3829  000E98  0101               	movlb	1	; () banked
  3830  000E9A  5DA4               	subwf	recv_msg@maxlength& (0+255),w,b
  3831  000E9C  B0D8               	btfsc	status,0,c
  3832  000E9E  D002               	goto	l3408
  3833                           
  3834                           ; BSR set to: 1
  3835                           ;messages.c: 77: return (-3);
  3836  000EA0  0EFD               	movlw	253
  3837  000EA2  0012               	return	
  3838  000EA4                     l3408:
  3839                           
  3840                           ; BSR set to: 1
  3841                           ;messages.c: 78: }
  3842                           ;messages.c: 80: tlength = qmsg->length;
  3843  000EA4  0101               	movlb	1	; () banked
  3844  000EA6  EE20 F001          	lfsr	2,1
  3845  000EAA  0101               	movlb	1	; () banked
  3846  000EAC  51AC               	movf	recv_msg@qmsg& (0+255),w,b
  3847  000EAE  26D9               	addwf	fsr2l,f,c
  3848  000EB0  0101               	movlb	1	; () banked
  3849  000EB2  51AD               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3850  000EB4  22DA               	addwfc	fsr2h,f,c
  3851  000EB6  50DF               	movf	indf2,w,c
  3852  000EB8  0100               	movlb	0	; () banked
  3853  000EBA  6FC2               	movwf	??_recv_msg& (0+255),b
  3854  000EBC  0100               	movlb	0	; () banked
  3855  000EBE  51C2               	movf	??_recv_msg& (0+255),w,b
  3856  000EC0  0101               	movlb	1	; () banked
  3857  000EC2  6FAA               	movwf	recv_msg@tlength& (0+255),b
  3858  000EC4  0101               	movlb	1	; () banked
  3859  000EC6  6BAB               	clrf	(recv_msg@tlength+1)& (0+255),b
  3860                           
  3861                           ; BSR set to: 1
  3862                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  3863  000EC8  0101               	movlb	1	; () banked
  3864  000ECA  0100               	movlb	0	; () banked
  3865  000ECC  C1A8  F0B9         	movff	recv_msg@data+1,memcpy@d1+1
  3866  000ED0  0101               	movlb	1	; () banked
  3867  000ED2  0100               	movlb	0	; () banked
  3868  000ED4  C1A7  F0B8         	movff	recv_msg@data,memcpy@d1
  3869  000ED8  0E03               	movlw	3
  3870  000EDA  0101               	movlb	1	; () banked
  3871  000EDC  25AC               	addwf	recv_msg@qmsg& (0+255),w,b
  3872  000EDE  0100               	movlb	0	; () banked
  3873  000EE0  6FC2               	movwf	??_recv_msg& (0+255),b
  3874  000EE2  0E00               	movlw	0
  3875  000EE4  0101               	movlb	1	; () banked
  3876  000EE6  21AD               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  3877  000EE8  0100               	movlb	0	; () banked
  3878  000EEA  6FC3               	movwf	(??_recv_msg+1)& (0+255),b
  3879  000EEC  C0C2  F0BA         	movff	??_recv_msg,memcpy@s1
  3880  000EF0  C0C3  F0BB         	movff	??_recv_msg+1,memcpy@s1+1
  3881  000EF4  C1AA  F0BC         	movff	recv_msg@tlength,memcpy@n
  3882  000EF8  C1AB  F0BD         	movff	recv_msg@tlength+1,memcpy@n+1
  3883  000EFC  EC0D  F00D         	call	_memcpy	;wreg free
  3884                           
  3885                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  3886  000F00  0101               	movlb	1	; () banked
  3887  000F02  EE20 F035          	lfsr	2,53
  3888  000F06  0101               	movlb	1	; () banked
  3889  000F08  51A2               	movf	recv_msg@qptr& (0+255),w,b
  3890  000F0A  26D9               	addwf	fsr2l,f,c
  3891  000F0C  0101               	movlb	1	; () banked
  3892  000F0E  51A3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3893  000F10  22DA               	addwfc	fsr2h,f,c
  3894  000F12  0101               	movlb	1	; () banked
  3895  000F14  EE10 F035          	lfsr	1,53
  3896  000F18  0101               	movlb	1	; () banked
  3897  000F1A  51A2               	movf	recv_msg@qptr& (0+255),w,b
  3898  000F1C  26E1               	addwf	fsr1l,f,c
  3899  000F1E  0101               	movlb	1	; () banked
  3900  000F20  51A3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3901  000F22  22E2               	addwfc	fsr1h,f,c
  3902  000F24  50E7               	movf	indf1,w,c
  3903  000F26  0100               	movlb	0	; () banked
  3904  000F28  6FC2               	movwf	??_recv_msg& (0+255),b
  3905  000F2A  0100               	movlb	0	; () banked
  3906  000F2C  29C2               	incf	??_recv_msg& (0+255),w,b
  3907  000F2E  0B03               	andlw	3
  3908  000F30  6EDF               	movwf	indf2,c
  3909                           
  3910                           ; BSR set to: 0
  3911                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  3912  000F32  0101               	movlb	1	; () banked
  3913  000F34  EE20 F002          	lfsr	2,2
  3914  000F38  0101               	movlb	1	; () banked
  3915  000F3A  51AC               	movf	recv_msg@qmsg& (0+255),w,b
  3916  000F3C  26D9               	addwf	fsr2l,f,c
  3917  000F3E  0101               	movlb	1	; () banked
  3918  000F40  51AD               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3919  000F42  22DA               	addwfc	fsr2h,f,c
  3920  000F44  C1A5  FFE1         	movff	recv_msg@msgtype,fsr1l
  3921  000F48  C1A6  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  3922  000F4C  CFDF FFE7          	movff	indf2,indf1
  3923                           
  3924                           ; BSR set to: 1
  3925                           ;messages.c: 91: qmsg->full = 0;
  3926  000F50  C1AC  FFD9         	movff	recv_msg@qmsg,fsr2l
  3927  000F54  C1AD  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3928  000F58  0E00               	movlw	0
  3929  000F5A  6EDF               	movwf	indf2,c
  3930                           
  3931                           ; BSR set to: 1
  3932                           ;messages.c: 92: return (tlength);
  3933  000F5C  0101               	movlb	1	; () banked
  3934  000F5E  51AA               	movf	recv_msg@tlength& (0+255),w,b
  3935  000F60  0012               	return	
  3936  000F62                     l3424:
  3937                           
  3938                           ; BSR set to: 1
  3939                           ;messages.c: 94: return (-4);
  3940  000F62  0EFC               	movlw	252
  3941  000F64  0012               	return	
  3942  000F66                     __end_of_recv_msg:
  3943                           	opt stack 0
  3944                           tblptru	equ	0xFF8
  3945                           prodh	equ	0xFF4
  3946                           prodl	equ	0xFF3
  3947                           intcon	equ	0xFF2
  3948                           postinc0	equ	0xFEE
  3949                           wreg	equ	0xFE8
  3950                           indf1	equ	0xFE7
  3951                           fsr1h	equ	0xFE2
  3952                           fsr1l	equ	0xFE1
  3953                           indf2	equ	0xFDF
  3954                           postinc2	equ	0xFDE
  3955                           postdec2	equ	0xFDD
  3956                           fsr2h	equ	0xFDA
  3957                           fsr2l	equ	0xFD9
  3958                           status	equ	0xFD8
  3959                           
  3960 ;; *************** function _memcpy *****************
  3961 ;; Defined at:
  3962 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\memcpy.c"
  3963 ;; Parameters:    Size  Location     Type
  3964 ;;  d1              2   56[BANK0 ] PTR void 
  3965 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3966 ;;		 -> main@msgbuffer(11), timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  3967 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3968 ;;  s1              2   58[BANK0 ] PTR const void 
  3969 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3970 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3971 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), timer0_int_handler@val(2), 
  3972 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  3973 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), RAM(1023), 
  3974 ;;  n               2   60[BANK0 ] unsigned int 
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;  s               2   64[BANK0 ] PTR const unsigned char 
  3977 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3978 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3979 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), timer0_int_handler@val(2), 
  3980 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  3981 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), RAM(1023), 
  3982 ;;  d               2   62[BANK0 ] PTR unsigned char 
  3983 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3984 ;;		 -> main@msgbuffer(11), timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  3985 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3986 ;; Return value:  Size  Location     Type
  3987 ;;                  2   56[BANK0 ] PTR void 
  3988 ;; Registers used:
  3989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3990 ;; Tracked objects:
  3991 ;;		On entry : 0/0
  3992 ;;		On exit  : 0/0
  3993 ;;		Unchanged: 0/0
  3994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3995 ;;      Params:         0       6       0       0       0
  3996 ;;      Locals:         0       4       0       0       0
  3997 ;;      Temps:          0       0       0       0       0
  3998 ;;      Totals:         0      10       0       0       0
  3999 ;;Total ram usage:       10 bytes
  4000 ;; Hardware stack levels used:    1
  4001 ;; Hardware stack levels required when called:   10
  4002 ;; This function calls:
  4003 ;;		Nothing
  4004 ;; This function is called by:
  4005 ;;		_send_msg
  4006 ;;		_recv_msg
  4007 ;; This function uses a non-reentrant model
  4008 ;;
  4009                           
  4010                           	psect	text25
  4011  001A1A                     __ptext25:
  4012                           	opt stack 0
  4013  001A1A                     _memcpy:
  4014                           	opt stack 17
  4015                           
  4016                           ; BSR set to: 1
  4017                           ;incstack = 0
  4018  001A1A  0100               	movlb	0	; () banked
  4019  001A1C  C0BB  F0C1         	movff	memcpy@s1+1,memcpy@s+1
  4020  001A20  0100               	movlb	0	; () banked
  4021  001A22  C0BA  F0C0         	movff	memcpy@s1,memcpy@s
  4022  001A26  0100               	movlb	0	; () banked
  4023  001A28  C0B9  F0BF         	movff	memcpy@d1+1,memcpy@d+1
  4024  001A2C  0100               	movlb	0	; () banked
  4025  001A2E  C0B8  F0BE         	movff	memcpy@d1,memcpy@d
  4026  001A32  D010               	goto	l3266
  4027  001A34                     l3260:
  4028                           
  4029                           ; BSR set to: 0
  4030  001A34  C0C0  FFD9         	movff	memcpy@s,fsr2l
  4031  001A38  C0C1  FFDA         	movff	memcpy@s+1,fsr2h
  4032  001A3C  C0BE  FFE1         	movff	memcpy@d,fsr1l
  4033  001A40  C0BF  FFE2         	movff	memcpy@d+1,fsr1h
  4034  001A44  CFDF FFE7          	movff	indf2,indf1
  4035                           
  4036                           ; BSR set to: 0
  4037  001A48  0100               	movlb	0	; () banked
  4038  001A4A  4BC0               	infsnz	memcpy@s& (0+255),f,b
  4039  001A4C  2BC1               	incf	(memcpy@s+1)& (0+255),f,b
  4040                           
  4041                           ; BSR set to: 0
  4042  001A4E  0100               	movlb	0	; () banked
  4043  001A50  4BBE               	infsnz	memcpy@d& (0+255),f,b
  4044  001A52  2BBF               	incf	(memcpy@d+1)& (0+255),f,b
  4045  001A54                     l3266:
  4046                           
  4047                           ; BSR set to: 0
  4048  001A54  0100               	movlb	0	; () banked
  4049  001A56  07BC               	decf	memcpy@n& (0+255),f,b
  4050  001A58  A0D8               	btfss	status,0,c
  4051  001A5A  07BD               	decf	(memcpy@n+1)& (0+255),f,b
  4052  001A5C  0100               	movlb	0	; () banked
  4053  001A5E  29BC               	incf	memcpy@n& (0+255),w,b
  4054  001A60  B4D8               	btfsc	status,2,c
  4055  001A62  29BD               	incf	(memcpy@n+1)& (0+255),w,b
  4056  001A64  B4D8               	btfsc	status,2,c
  4057                           
  4058                           ; BSR set to: 0
  4059                           
  4060                           ; BSR set to: 0
  4061                           ;	Return value of _memcpy is never used
  4062  001A66  0012               	return	
  4063  001A68  D7E5               	goto	l3260
  4064  001A6A                     __end_of_memcpy:
  4065                           	opt stack 0
  4066                           tblptru	equ	0xFF8
  4067                           prodh	equ	0xFF4
  4068                           prodl	equ	0xFF3
  4069                           intcon	equ	0xFF2
  4070                           postinc0	equ	0xFEE
  4071                           wreg	equ	0xFE8
  4072                           indf1	equ	0xFE7
  4073                           fsr1h	equ	0xFE2
  4074                           fsr1l	equ	0xFE1
  4075                           indf2	equ	0xFDF
  4076                           postinc2	equ	0xFDE
  4077                           postdec2	equ	0xFDD
  4078                           fsr2h	equ	0xFDA
  4079                           fsr2l	equ	0xFD9
  4080                           status	equ	0xFD8
  4081                           
  4082 ;; *************** function _OpenUSART *****************
  4083 ;; Defined at:
  4084 ;;		line 73 in file "C:\Program Files\Microchip\xc8\v1.32\sources\pic18\plib\USART\uopen.c"
  4085 ;; Parameters:    Size  Location     Type
  4086 ;;  config          1    wreg     unsigned char 
  4087 ;;  spbrg           2   56[BANK0 ] unsigned int 
  4088 ;; Auto vars:     Size  Location     Type
  4089 ;;  config          1   61[BANK0 ] unsigned char 
  4090 ;; Return value:  Size  Location     Type
  4091 ;;		None               void
  4092 ;; Registers used:
  4093 ;;		wreg, status,2
  4094 ;; Tracked objects:
  4095 ;;		On entry : 0/0
  4096 ;;		On exit  : 0/0
  4097 ;;		Unchanged: 0/0
  4098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4099 ;;      Params:         0       2       0       0       0
  4100 ;;      Locals:         0       1       0       0       0
  4101 ;;      Temps:          0       3       0       0       0
  4102 ;;      Totals:         0       6       0       0       0
  4103 ;;Total ram usage:        6 bytes
  4104 ;; Hardware stack levels used:    1
  4105 ;; Hardware stack levels required when called:   10
  4106 ;; This function calls:
  4107 ;;		Nothing
  4108 ;; This function is called by:
  4109 ;;		_main
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           
  4113                           	psect	text26
  4114  001688                     __ptext26:
  4115                           	opt stack 0
  4116  001688                     _OpenUSART:
  4117                           	opt stack 20
  4118                           
  4119                           ; BSR set to: 0
  4120                           ;incstack = 0
  4121                           ;OpenUSART@config stored from wreg
  4122  001688  0100               	movlb	0	; () banked
  4123  00168A  6FBD               	movwf	OpenUSART@config& (0+255),b
  4124                           
  4125                           ; BSR set to: 0
  4126  00168C  0E00               	movlw	0
  4127  00168E  6EAC               	movwf	4012,c	;volatile
  4128  001690  0E00               	movlw	0
  4129  001692  6EAB               	movwf	4011,c	;volatile
  4130                           
  4131                           ; BSR set to: 0
  4132  001694  0100               	movlb	0	; () banked
  4133  001696  B1BD               	btfsc	OpenUSART@config& (0+255),0,b
  4134                           
  4135                           ; BSR set to: 0
  4136  001698  88AC               	bsf	4012,4,c	;volatile
  4137                           
  4138                           ; BSR set to: 0
  4139                           
  4140                           ; BSR set to: 0
  4141  00169A  0100               	movlb	0	; () banked
  4142  00169C  A3BD               	btfss	OpenUSART@config& (0+255),1,b
  4143  00169E  D002               	goto	l2880
  4144                           
  4145                           ; BSR set to: 0
  4146  0016A0  8CAC               	bsf	4012,6,c	;volatile
  4147  0016A2  8CAB               	bsf	4011,6,c	;volatile
  4148  0016A4                     l2880:
  4149                           
  4150                           ; BSR set to: 0
  4151  0016A4  0100               	movlb	0	; () banked
  4152  0016A6  B5BD               	btfsc	OpenUSART@config& (0+255),2,b
  4153                           
  4154                           ; BSR set to: 0
  4155  0016A8  8EAC               	bsf	4012,7,c	;volatile
  4156                           
  4157                           ; BSR set to: 0
  4158                           
  4159                           ; BSR set to: 0
  4160  0016AA  0100               	movlb	0	; () banked
  4161  0016AC  A7BD               	btfss	OpenUSART@config& (0+255),3,b
  4162  0016AE  D002               	goto	l463
  4163                           
  4164                           ; BSR set to: 0
  4165  0016B0  88AB               	bsf	4011,4,c	;volatile
  4166  0016B2  D001               	goto	l2888
  4167  0016B4                     l463:
  4168                           
  4169                           ; BSR set to: 0
  4170  0016B4  8AAB               	bsf	4011,5,c	;volatile
  4171  0016B6                     l2888:
  4172                           
  4173                           ; BSR set to: 0
  4174  0016B6  0100               	movlb	0	; () banked
  4175  0016B8  B9BD               	btfsc	OpenUSART@config& (0+255),4,b
  4176                           
  4177                           ; BSR set to: 0
  4178  0016BA  84AC               	bsf	4012,2,c	;volatile
  4179                           
  4180                           ; BSR set to: 0
  4181  0016BC  989E               	bcf	3998,4,c	;volatile
  4182                           
  4183                           ; BSR set to: 0
  4184  0016BE  0100               	movlb	0	; () banked
  4185  0016C0  BBBD               	btfsc	OpenUSART@config& (0+255),5,b
  4186                           
  4187                           ; BSR set to: 0
  4188  0016C2  86AB               	bsf	4011,3,c	;volatile
  4189                           
  4190                           ; BSR set to: 0
  4191                           
  4192                           ; BSR set to: 0
  4193  0016C4  0100               	movlb	0	; () banked
  4194  0016C6  ADBD               	btfss	OpenUSART@config& (0+255),6,b
  4195  0016C8  D002               	goto	l467
  4196                           
  4197                           ; BSR set to: 0
  4198  0016CA  8A9D               	bsf	3997,5,c	;volatile
  4199  0016CC  D001               	goto	l468
  4200  0016CE                     l467:
  4201                           
  4202                           ; BSR set to: 0
  4203  0016CE  9A9D               	bcf	3997,5,c	;volatile
  4204  0016D0                     l468:
  4205                           
  4206                           ; BSR set to: 0
  4207  0016D0  9A9E               	bcf	3998,5,c	;volatile
  4208                           
  4209                           ; BSR set to: 0
  4210  0016D2  0100               	movlb	0	; () banked
  4211  0016D4  AFBD               	btfss	OpenUSART@config& (0+255),7,b
  4212  0016D6  D002               	goto	l469
  4213                           
  4214                           ; BSR set to: 0
  4215  0016D8  889D               	bsf	3997,4,c	;volatile
  4216  0016DA  D001               	goto	l470
  4217  0016DC                     l469:
  4218                           
  4219                           ; BSR set to: 0
  4220  0016DC  989D               	bcf	3997,4,c	;volatile
  4221  0016DE                     l470:
  4222                           
  4223                           ; BSR set to: 0
  4224  0016DE  C0B8  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4225                           
  4226                           ; BSR set to: 0
  4227  0016E2  0100               	movlb	0	; () banked
  4228  0016E4  C0B9  F0BA         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4229  0016E8  C0BA  F0BB         	movff	??_OpenUSART,??_OpenUSART+1
  4230  0016EC  0100               	movlb	0	; () banked
  4231  0016EE  6BBC               	clrf	(??_OpenUSART+2)& (0+255),b
  4232  0016F0  0100               	movlb	0	; () banked
  4233  0016F2  51BB               	movf	(??_OpenUSART+1)& (0+255),w,b
  4234  0016F4  6EB0               	movwf	4016,c	;volatile
  4235                           
  4236                           ; BSR set to: 0
  4237  0016F6  8AAC               	bsf	4012,5,c	;volatile
  4238                           
  4239                           ; BSR set to: 0
  4240  0016F8  8EAB               	bsf	4011,7,c	;volatile
  4241                           
  4242                           ; BSR set to: 0
  4243  0016FA  9C94               	bcf	3988,6,c	;volatile
  4244                           
  4245                           ; BSR set to: 0
  4246  0016FC  8E94               	bsf	3988,7,c	;volatile
  4247                           
  4248                           ; BSR set to: 0
  4249  0016FE  A8AC               	btfss	4012,4,c	;volatile
  4250  001700  0012               	return	
  4251                           
  4252                           ; BSR set to: 0
  4253  001702  BEAC               	btfsc	4012,7,c	;volatile
  4254  001704  0012               	return	
  4255                           
  4256                           ; BSR set to: 0
  4257  001706  8C94               	bsf	3988,6,c	;volatile
  4258  001708  0012               	return	
  4259  00170A                     __end_of_OpenUSART:
  4260                           	opt stack 0
  4261                           tblptru	equ	0xFF8
  4262                           prodh	equ	0xFF4
  4263                           prodl	equ	0xFF3
  4264                           intcon	equ	0xFF2
  4265                           postinc0	equ	0xFEE
  4266                           wreg	equ	0xFE8
  4267                           indf1	equ	0xFE7
  4268                           fsr1h	equ	0xFE2
  4269                           fsr1l	equ	0xFE1
  4270                           indf2	equ	0xFDF
  4271                           postinc2	equ	0xFDE
  4272                           postdec2	equ	0xFDD
  4273                           fsr2h	equ	0xFDA
  4274                           fsr2l	equ	0xFD9
  4275                           status	equ	0xFD8
  4276                           
  4277 ;; *************** function _OpenTimer1 *****************
  4278 ;; Defined at:
  4279 ;;		line 16 in file "C:\Program Files\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1open.c"
  4280 ;; Parameters:    Size  Location     Type
  4281 ;;  config          1    wreg     unsigned char 
  4282 ;; Auto vars:     Size  Location     Type
  4283 ;;  config          1   56[BANK0 ] unsigned char 
  4284 ;; Return value:  Size  Location     Type
  4285 ;;		None               void
  4286 ;; Registers used:
  4287 ;;		wreg, status,2, status,0
  4288 ;; Tracked objects:
  4289 ;;		On entry : 0/0
  4290 ;;		On exit  : 0/0
  4291 ;;		Unchanged: 0/0
  4292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4293 ;;      Params:         0       0       0       0       0
  4294 ;;      Locals:         0       1       0       0       0
  4295 ;;      Temps:          0       0       0       0       0
  4296 ;;      Totals:         0       1       0       0       0
  4297 ;;Total ram usage:        1 bytes
  4298 ;; Hardware stack levels used:    1
  4299 ;; Hardware stack levels required when called:   10
  4300 ;; This function calls:
  4301 ;;		Nothing
  4302 ;; This function is called by:
  4303 ;;		_main
  4304 ;; This function uses a non-reentrant model
  4305 ;;
  4306                           
  4307                           	psect	text27
  4308  001C50                     __ptext27:
  4309                           	opt stack 0
  4310  001C50                     _OpenTimer1:
  4311                           	opt stack 20
  4312                           
  4313                           ; BSR set to: 0
  4314                           ;incstack = 0
  4315                           ;OpenTimer1@config stored from wreg
  4316  001C50  0100               	movlb	0	; () banked
  4317  001C52  6FB8               	movwf	OpenTimer1@config& (0+255),b
  4318                           
  4319                           ; BSR set to: 0
  4320  001C54  0100               	movlb	0	; () banked
  4321  001C56  51B8               	movf	OpenTimer1@config& (0+255),w,b
  4322  001C58  0B7E               	andlw	126
  4323  001C5A  6ECD               	movwf	4045,c	;volatile
  4324                           
  4325                           ; BSR set to: 0
  4326  001C5C  0100               	movlb	0	; () banked
  4327  001C5E  ADB8               	btfss	OpenTimer1@config& (0+255),6,b
  4328  001C60  D002               	goto	l419
  4329                           
  4330                           ; BSR set to: 0
  4331  001C62  8ECD               	bsf	4045,7,c	;volatile
  4332  001C64  D001               	goto	l2862
  4333  001C66                     l419:
  4334                           
  4335                           ; BSR set to: 0
  4336  001C66  9ECD               	bcf	4045,7,c	;volatile
  4337  001C68                     l2862:
  4338                           
  4339                           ; BSR set to: 0
  4340  001C68  0E00               	movlw	0
  4341  001C6A  6ECF               	movwf	4047,c	;volatile
  4342  001C6C  0E00               	movlw	0
  4343  001C6E  6ECE               	movwf	4046,c	;volatile
  4344                           
  4345                           ; BSR set to: 0
  4346  001C70  909E               	bcf	3998,0,c	;volatile
  4347                           
  4348                           ; BSR set to: 0
  4349  001C72  0100               	movlb	0	; () banked
  4350  001C74  AFB8               	btfss	OpenTimer1@config& (0+255),7,b
  4351  001C76  D002               	goto	l421
  4352                           
  4353                           ; BSR set to: 0
  4354  001C78  809D               	bsf	3997,0,c	;volatile
  4355  001C7A  D001               	goto	l422
  4356  001C7C                     l421:
  4357                           
  4358                           ; BSR set to: 0
  4359  001C7C  909D               	bcf	3997,0,c	;volatile
  4360  001C7E                     l422:
  4361                           
  4362                           ; BSR set to: 0
  4363  001C7E  80CD               	bsf	4045,0,c	;volatile
  4364                           
  4365                           ; BSR set to: 0
  4366  001C80  0012               	return	
  4367  001C82                     __end_of_OpenTimer1:
  4368                           	opt stack 0
  4369                           tblptru	equ	0xFF8
  4370                           prodh	equ	0xFF4
  4371                           prodl	equ	0xFF3
  4372                           intcon	equ	0xFF2
  4373                           postinc0	equ	0xFEE
  4374                           wreg	equ	0xFE8
  4375                           indf1	equ	0xFE7
  4376                           fsr1h	equ	0xFE2
  4377                           fsr1l	equ	0xFE1
  4378                           indf2	equ	0xFDF
  4379                           postinc2	equ	0xFDE
  4380                           postdec2	equ	0xFDD
  4381                           fsr2h	equ	0xFDA
  4382                           fsr2l	equ	0xFD9
  4383                           status	equ	0xFD8
  4384                           
  4385 ;; *************** function _OpenTimer0 *****************
  4386 ;; Defined at:
  4387 ;;		line 18 in file "C:\Program Files\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0open.c"
  4388 ;; Parameters:    Size  Location     Type
  4389 ;;  config          1    wreg     unsigned char 
  4390 ;; Auto vars:     Size  Location     Type
  4391 ;;  config          1   56[BANK0 ] unsigned char 
  4392 ;; Return value:  Size  Location     Type
  4393 ;;		None               void
  4394 ;; Registers used:
  4395 ;;		wreg, status,2, status,0
  4396 ;; Tracked objects:
  4397 ;;		On entry : 0/0
  4398 ;;		On exit  : 0/0
  4399 ;;		Unchanged: 0/0
  4400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4401 ;;      Params:         0       0       0       0       0
  4402 ;;      Locals:         0       1       0       0       0
  4403 ;;      Temps:          0       0       0       0       0
  4404 ;;      Totals:         0       1       0       0       0
  4405 ;;Total ram usage:        1 bytes
  4406 ;; Hardware stack levels used:    1
  4407 ;; Hardware stack levels required when called:   10
  4408 ;; This function calls:
  4409 ;;		Nothing
  4410 ;; This function is called by:
  4411 ;;		_main
  4412 ;; This function uses a non-reentrant model
  4413 ;;
  4414                           
  4415                           	psect	text28
  4416  001D82                     __ptext28:
  4417                           	opt stack 0
  4418  001D82                     _OpenTimer0:
  4419                           	opt stack 20
  4420                           
  4421                           ; BSR set to: 0
  4422                           ;incstack = 0
  4423                           ;OpenTimer0@config stored from wreg
  4424  001D82  0100               	movlb	0	; () banked
  4425  001D84  6FB8               	movwf	OpenTimer0@config& (0+255),b
  4426                           
  4427                           ; BSR set to: 0
  4428  001D86  0100               	movlb	0	; () banked
  4429  001D88  51B8               	movf	OpenTimer0@config& (0+255),w,b
  4430  001D8A  0B7F               	andlw	127
  4431  001D8C  6ED5               	movwf	4053,c	;volatile
  4432                           
  4433                           ; BSR set to: 0
  4434  001D8E  0E00               	movlw	0
  4435  001D90  6ED7               	movwf	4055,c	;volatile
  4436                           
  4437                           ; BSR set to: 0
  4438  001D92  0E00               	movlw	0
  4439  001D94  6ED6               	movwf	4054,c	;volatile
  4440                           
  4441                           ; BSR set to: 0
  4442  001D96  94F2               	bcf	intcon,2,c	;volatile
  4443                           
  4444                           ; BSR set to: 0
  4445  001D98  0100               	movlb	0	; () banked
  4446  001D9A  AFB8               	btfss	OpenTimer0@config& (0+255),7,b
  4447  001D9C  D002               	goto	l395
  4448                           
  4449                           ; BSR set to: 0
  4450  001D9E  8AF2               	bsf	intcon,5,c	;volatile
  4451  001DA0  D001               	goto	l396
  4452  001DA2                     l395:
  4453                           
  4454                           ; BSR set to: 0
  4455  001DA2  9AF2               	bcf	intcon,5,c	;volatile
  4456  001DA4                     l396:
  4457                           
  4458                           ; BSR set to: 0
  4459  001DA4  8ED5               	bsf	4053,7,c	;volatile
  4460                           
  4461                           ; BSR set to: 0
  4462  001DA6  0012               	return	
  4463  001DA8                     __end_of_OpenTimer0:
  4464                           	opt stack 0
  4465                           tblptru	equ	0xFF8
  4466                           prodh	equ	0xFF4
  4467                           prodl	equ	0xFF3
  4468                           intcon	equ	0xFF2
  4469                           postinc0	equ	0xFEE
  4470                           wreg	equ	0xFE8
  4471                           indf1	equ	0xFE7
  4472                           fsr1h	equ	0xFE2
  4473                           fsr1l	equ	0xFE1
  4474                           indf2	equ	0xFDF
  4475                           postinc2	equ	0xFDE
  4476                           postdec2	equ	0xFDD
  4477                           fsr2h	equ	0xFDA
  4478                           fsr2l	equ	0xFD9
  4479                           status	equ	0xFD8
  4480                           
  4481 ;; *************** function _InterruptHandlerLow *****************
  4482 ;; Defined at:
  4483 ;;		line 137 in file "../src/interrupts.c"
  4484 ;; Parameters:    Size  Location     Type
  4485 ;;		None
  4486 ;; Auto vars:     Size  Location     Type
  4487 ;;		None
  4488 ;; Return value:  Size  Location     Type
  4489 ;;		None               void
  4490 ;; Registers used:
  4491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4492 ;; Tracked objects:
  4493 ;;		On entry : 0/0
  4494 ;;		On exit  : 0/0
  4495 ;;		Unchanged: 0/0
  4496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4497 ;;      Params:         0       0       0       0       0
  4498 ;;      Locals:         0       0       0       0       0
  4499 ;;      Temps:         17       0       0       0       0
  4500 ;;      Totals:        17       0       0       0       0
  4501 ;;Total ram usage:       17 bytes
  4502 ;; Hardware stack levels used:    1
  4503 ;; Hardware stack levels required when called:    9
  4504 ;; This function calls:
  4505 ;;		_timer1_int_handler
  4506 ;;		_uart_recv_int_handler
  4507 ;; This function is called by:
  4508 ;;		Interrupt level 1
  4509 ;; This function uses a non-reentrant model
  4510 ;;
  4511                           
  4512                           	psect	intcodelo
  4513  000018                     __pintcodelo:
  4514                           	opt stack 0
  4515  000018                     _InterruptHandlerLow:
  4516                           	opt stack 17
  4517                           
  4518                           ; BSR set to: 0
  4519                           ;incstack = 0
  4520  000018  CFD8 F01D          	movff	status,??_InterruptHandlerLow
  4521  00001C  CFE8 F01E          	movff	wreg,??_InterruptHandlerLow+1
  4522  000020  CFE0 F01F          	movff	bsr,??_InterruptHandlerLow+2
  4523  000024  CFFA F020          	movff	pclath,??_InterruptHandlerLow+3
  4524  000028  CFFB F021          	movff	pclatu,??_InterruptHandlerLow+4
  4525  00002C  CFE9 F022          	movff	fsr0l,??_InterruptHandlerLow+5
  4526  000030  CFEA F023          	movff	fsr0h,??_InterruptHandlerLow+6
  4527  000034  CFE1 F024          	movff	fsr1l,??_InterruptHandlerLow+7
  4528  000038  CFE2 F025          	movff	fsr1h,??_InterruptHandlerLow+8
  4529  00003C  CFD9 F026          	movff	fsr2l,??_InterruptHandlerLow+9
  4530  000040  CFDA F027          	movff	fsr2h,??_InterruptHandlerLow+10
  4531  000044  CFF3 F028          	movff	prodl,??_InterruptHandlerLow+11
  4532  000048  CFF4 F029          	movff	prodh,??_InterruptHandlerLow+12
  4533  00004C  CFF6 F02A          	movff	tblptrl,??_InterruptHandlerLow+13
  4534  000050  CFF7 F02B          	movff	tblptrh,??_InterruptHandlerLow+14
  4535  000054  CFF8 F02C          	movff	tblptru,??_InterruptHandlerLow+15
  4536  000058  CFF5 F02D          	movff	tablat,??_InterruptHandlerLow+16
  4537                           
  4538                           ;interrupts.c: 139: if (PIR1bits.TMR1IF) {
  4539  00005C  A09E               	btfss	3998,0,c	;volatile
  4540  00005E  D003               	goto	i1l3744
  4541                           
  4542                           ;interrupts.c: 140: PIR1bits.TMR1IF = 0;
  4543  000060  909E               	bcf	3998,0,c	;volatile
  4544                           
  4545                           ;interrupts.c: 141: timer1_int_handler();
  4546  000062  EC58  F00E         	call	_timer1_int_handler	;wreg free
  4547  000066                     i1l3744:
  4548                           
  4549                           ;interrupts.c: 142: }
  4550                           ;interrupts.c: 145: if (PIR1bits.RCIF) {
  4551  000066  AA9E               	btfss	3998,5,c	;volatile
  4552  000068  D003               	goto	i1l54
  4553                           
  4554                           ;interrupts.c: 146: PIR1bits.RCIF = 0;
  4555  00006A  9A9E               	bcf	3998,5,c	;volatile
  4556                           
  4557                           ;interrupts.c: 147: uart_recv_int_handler();
  4558  00006C  ECFA  F00A         	call	_uart_recv_int_handler	;wreg free
  4559  000070                     i1l54:
  4560  000070  C02D  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4561  000074  C02C  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4562  000078  C02B  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4563  00007C  C02A  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4564  000080  C029  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4565  000084  C028  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4566  000088  C027  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4567  00008C  C026  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4568  000090  C025  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4569  000094  C024  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4570  000098  C023  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4571  00009C  C022  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4572  0000A0  C021  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4573  0000A4  C020  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4574  0000A8  C01F  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4575  0000AC  C01E  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4576  0000B0  C01D  FFD8         	movff	??_InterruptHandlerLow,status
  4577  0000B4  0010               	retfie	
  4578  0000B6                     __end_of_InterruptHandlerLow:
  4579                           	opt stack 0
  4580                           pclatu	equ	0xFFB
  4581                           pclath	equ	0xFFA
  4582                           tblptru	equ	0xFF8
  4583                           tblptrh	equ	0xFF7
  4584                           tblptrl	equ	0xFF6
  4585                           tablat	equ	0xFF5
  4586                           prodh	equ	0xFF4
  4587                           prodl	equ	0xFF3
  4588                           intcon	equ	0xFF2
  4589                           postinc0	equ	0xFEE
  4590                           fsr0h	equ	0xFEA
  4591                           fsr0l	equ	0xFE9
  4592                           wreg	equ	0xFE8
  4593                           indf1	equ	0xFE7
  4594                           fsr1h	equ	0xFE2
  4595                           fsr1l	equ	0xFE1
  4596                           bsr	equ	0xFE0
  4597                           indf2	equ	0xFDF
  4598                           postinc2	equ	0xFDE
  4599                           postdec2	equ	0xFDD
  4600                           fsr2h	equ	0xFDA
  4601                           fsr2l	equ	0xFD9
  4602                           status	equ	0xFD8
  4603                           
  4604 ;; *************** function _uart_recv_int_handler *****************
  4605 ;; Defined at:
  4606 ;;		line 11 in file "../src/my_uart.c"
  4607 ;; Parameters:    Size  Location     Type
  4608 ;;		None
  4609 ;; Auto vars:     Size  Location     Type
  4610 ;;		None
  4611 ;; Return value:  Size  Location     Type
  4612 ;;		None               void
  4613 ;; Registers used:
  4614 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4615 ;; Tracked objects:
  4616 ;;		On entry : 0/0
  4617 ;;		On exit  : 0/0
  4618 ;;		Unchanged: 0/0
  4619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4620 ;;      Params:         0       0       0       0       0
  4621 ;;      Locals:         0       0       0       0       0
  4622 ;;      Temps:          1       0       0       0       0
  4623 ;;      Totals:         1       0       0       0       0
  4624 ;;Total ram usage:        1 bytes
  4625 ;; Hardware stack levels used:    1
  4626 ;; Hardware stack levels required when called:    8
  4627 ;; This function calls:
  4628 ;;		_ReadUSART
  4629 ;;		_ToMainLow_sendmsg
  4630 ;; This function is called by:
  4631 ;;		_InterruptHandlerLow
  4632 ;; This function uses a non-reentrant model
  4633 ;;
  4634                           
  4635                           	psect	text30
  4636  0015F4                     __ptext30:
  4637                           	opt stack 0
  4638  0015F4                     _uart_recv_int_handler:
  4639                           	opt stack 17
  4640                           
  4641                           ;my_uart.c: 20: if ((PIR1bits.RCIF)) {
  4642                           
  4643                           ;incstack = 0
  4644  0015F4  AA9E               	btfss	3998,5,c	;volatile
  4645  0015F6  D03A               	goto	i1l3642
  4646                           
  4647                           ;my_uart.c: 21: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  4648  0015F8  EE20 F004          	lfsr	2,4
  4649  0015FC  504E               	movf	_uc_ptr,w,c
  4650  0015FE  26D9               	addwf	fsr2l,f,c
  4651  001600  504F               	movf	_uc_ptr+1,w,c
  4652  001602  22DA               	addwfc	fsr2h,f,c
  4653  001604  50DF               	movf	indf2,w,c
  4654  001606  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  4655  001608  501B               	movf	??_uart_recv_int_handler,w,c
  4656  00160A  0D01               	mullw	1
  4657  00160C  50F3               	movf	prodl,w,c
  4658  00160E  244E               	addwf	_uc_ptr,w,c
  4659  001610  6ED9               	movwf	fsr2l,c
  4660  001612  50F4               	movf	prodh,w,c
  4661  001614  204F               	addwfc	_uc_ptr+1,w,c
  4662  001616  6EDA               	movwf	fsr2h,c
  4663  001618  EC2B  F00F         	call	_ReadUSART	;wreg free
  4664  00161C  6EDF               	movwf	indf2,c
  4665                           
  4666                           ;my_uart.c: 25: uc_ptr->buflen++;
  4667  00161E  EE20 F004          	lfsr	2,4
  4668  001622  504E               	movf	_uc_ptr,w,c
  4669  001624  26D9               	addwf	fsr2l,f,c
  4670  001626  504F               	movf	_uc_ptr+1,w,c
  4671  001628  22DA               	addwfc	fsr2h,f,c
  4672  00162A  2ADF               	incf	indf2,f,c
  4673                           
  4674                           ;my_uart.c: 27: if (uc_ptr->buflen == 4) {
  4675  00162C  EE20 F004          	lfsr	2,4
  4676  001630  504E               	movf	_uc_ptr,w,c
  4677  001632  26D9               	addwf	fsr2l,f,c
  4678  001634  504F               	movf	_uc_ptr+1,w,c
  4679  001636  22DA               	addwfc	fsr2h,f,c
  4680  001638  0E04               	movlw	4
  4681  00163A  62DF               	cpfseq	indf2,c
  4682  00163C  D017               	goto	i1l3642
  4683                           
  4684                           ;my_uart.c: 28: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  4685  00163E  0E1F               	movlw	31
  4686  001640  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  4687  001642  C04F  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  4688  001646  C04E  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  4689  00164A  EE20 F004          	lfsr	2,4
  4690  00164E  504E               	movf	_uc_ptr,w,c
  4691  001650  26D9               	addwf	fsr2l,f,c
  4692  001652  504F               	movf	_uc_ptr+1,w,c
  4693  001654  22DA               	addwfc	fsr2h,f,c
  4694  001656  50DF               	movf	indf2,w,c
  4695  001658  ECD4  F00E         	call	_ToMainLow_sendmsg
  4696                           
  4697                           ;my_uart.c: 29: uc_ptr->buflen = 0;
  4698  00165C  EE20 F004          	lfsr	2,4
  4699  001660  504E               	movf	_uc_ptr,w,c
  4700  001662  26D9               	addwf	fsr2l,f,c
  4701  001664  504F               	movf	_uc_ptr+1,w,c
  4702  001666  22DA               	addwfc	fsr2h,f,c
  4703  001668  0E00               	movlw	0
  4704  00166A  6EDF               	movwf	indf2,c
  4705  00166C                     i1l3642:
  4706                           
  4707                           ;my_uart.c: 30: }
  4708                           ;my_uart.c: 31: }
  4709                           ;my_uart.c: 38: if (USART_Status.OVERRUN_ERROR == 1) {
  4710  00166C  A651               	btfss	_USART_Status,3,c
  4711  00166E  0012               	return	
  4712                           
  4713                           ;my_uart.c: 43: RCSTAbits.CREN = 0;
  4714  001670  98AB               	bcf	4011,4,c	;volatile
  4715                           
  4716                           ;my_uart.c: 44: RCSTAbits.CREN = 1;
  4717  001672  88AB               	bsf	4011,4,c	;volatile
  4718                           
  4719                           ;my_uart.c: 45: ToMainLow_sendmsg(0, 30, (void *) 0);
  4720  001674  0E1E               	movlw	30
  4721  001676  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  4722  001678  0E00               	movlw	0
  4723  00167A  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  4724  00167C  0E00               	movlw	0
  4725  00167E  6E18               	movwf	ToMainLow_sendmsg@data,c
  4726  001680  0E00               	movlw	0
  4727  001682  ECD4  F00E         	call	_ToMainLow_sendmsg
  4728  001686  0012               	return	
  4729  001688                     __end_of_uart_recv_int_handler:
  4730                           	opt stack 0
  4731                           pclatu	equ	0xFFB
  4732                           pclath	equ	0xFFA
  4733                           tblptru	equ	0xFF8
  4734                           tblptrh	equ	0xFF7
  4735                           tblptrl	equ	0xFF6
  4736                           tablat	equ	0xFF5
  4737                           prodh	equ	0xFF4
  4738                           prodl	equ	0xFF3
  4739                           intcon	equ	0xFF2
  4740                           postinc0	equ	0xFEE
  4741                           fsr0h	equ	0xFEA
  4742                           fsr0l	equ	0xFE9
  4743                           wreg	equ	0xFE8
  4744                           indf1	equ	0xFE7
  4745                           fsr1h	equ	0xFE2
  4746                           fsr1l	equ	0xFE1
  4747                           bsr	equ	0xFE0
  4748                           indf2	equ	0xFDF
  4749                           postinc2	equ	0xFDE
  4750                           postdec2	equ	0xFDD
  4751                           fsr2h	equ	0xFDA
  4752                           fsr2l	equ	0xFD9
  4753                           status	equ	0xFD8
  4754                           
  4755 ;; *************** function _ReadUSART *****************
  4756 ;; Defined at:
  4757 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.32\sources\pic18\plib\USART\uread.c"
  4758 ;; Parameters:    Size  Location     Type
  4759 ;;		None
  4760 ;; Auto vars:     Size  Location     Type
  4761 ;;  data            1    0[COMRAM] unsigned char 
  4762 ;; Return value:  Size  Location     Type
  4763 ;;                  1    wreg      unsigned char 
  4764 ;; Registers used:
  4765 ;;		wreg, status,2, status,0
  4766 ;; Tracked objects:
  4767 ;;		On entry : 0/0
  4768 ;;		On exit  : 0/0
  4769 ;;		Unchanged: 0/0
  4770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4771 ;;      Params:         0       0       0       0       0
  4772 ;;      Locals:         1       0       0       0       0
  4773 ;;      Temps:          0       0       0       0       0
  4774 ;;      Totals:         1       0       0       0       0
  4775 ;;Total ram usage:        1 bytes
  4776 ;; Hardware stack levels used:    1
  4777 ;; Hardware stack levels required when called:    5
  4778 ;; This function calls:
  4779 ;;		Nothing
  4780 ;; This function is called by:
  4781 ;;		_uart_recv_int_handler
  4782 ;; This function uses a non-reentrant model
  4783 ;;
  4784                           
  4785                           	psect	text31
  4786  001E56                     __ptext31:
  4787                           	opt stack 0
  4788  001E56                     _ReadUSART:
  4789                           	opt stack 19
  4790                           
  4791                           ;incstack = 0
  4792  001E56  0EF2               	movlw	242
  4793  001E58  1651               	andwf	_USART_Status,f,c
  4794  001E5A  ACAB               	btfss	4011,6,c	;volatile
  4795  001E5C  D003               	goto	i1l481
  4796  001E5E  9051               	bcf	_USART_Status,0,c
  4797  001E60  B0AB               	btfsc	4011,0,c	;volatile
  4798  001E62  8051               	bsf	_USART_Status,0,c
  4799  001E64                     i1l481:
  4800  001E64  B4AB               	btfsc	4011,2,c	;volatile
  4801  001E66  8451               	bsf	_USART_Status,2,c
  4802  001E68  B2AB               	btfsc	4011,1,c	;volatile
  4803  001E6A  8651               	bsf	_USART_Status,3,c
  4804  001E6C  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  4805  001E70  5001               	movf	ReadUSART@data,w,c
  4806  001E72  0012               	return	
  4807  001E74                     __end_of_ReadUSART:
  4808                           	opt stack 0
  4809                           pclatu	equ	0xFFB
  4810                           pclath	equ	0xFFA
  4811                           tblptru	equ	0xFF8
  4812                           tblptrh	equ	0xFF7
  4813                           tblptrl	equ	0xFF6
  4814                           tablat	equ	0xFF5
  4815                           prodh	equ	0xFF4
  4816                           prodl	equ	0xFF3
  4817                           intcon	equ	0xFF2
  4818                           postinc0	equ	0xFEE
  4819                           fsr0h	equ	0xFEA
  4820                           fsr0l	equ	0xFE9
  4821                           wreg	equ	0xFE8
  4822                           indf1	equ	0xFE7
  4823                           fsr1h	equ	0xFE2
  4824                           fsr1l	equ	0xFE1
  4825                           bsr	equ	0xFE0
  4826                           indf2	equ	0xFDF
  4827                           postinc2	equ	0xFDE
  4828                           postdec2	equ	0xFDD
  4829                           fsr2h	equ	0xFDA
  4830                           fsr2l	equ	0xFD9
  4831                           status	equ	0xFD8
  4832                           
  4833 ;; *************** function _timer1_int_handler *****************
  4834 ;; Defined at:
  4835 ;;		line 36 in file "../src/user_interrupts.c"
  4836 ;; Parameters:    Size  Location     Type
  4837 ;;		None
  4838 ;; Auto vars:     Size  Location     Type
  4839 ;;  result          2   26[COMRAM] unsigned int 
  4840 ;; Return value:  Size  Location     Type
  4841 ;;		None               void
  4842 ;; Registers used:
  4843 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4844 ;; Tracked objects:
  4845 ;;		On entry : 0/0
  4846 ;;		On exit  : 0/0
  4847 ;;		Unchanged: 0/0
  4848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4849 ;;      Params:         0       0       0       0       0
  4850 ;;      Locals:         2       0       0       0       0
  4851 ;;      Temps:          0       0       0       0       0
  4852 ;;      Totals:         2       0       0       0       0
  4853 ;;Total ram usage:        2 bytes
  4854 ;; Hardware stack levels used:    1
  4855 ;; Hardware stack levels required when called:    8
  4856 ;; This function calls:
  4857 ;;		_ReadTimer1
  4858 ;;		_ToMainLow_sendmsg
  4859 ;;		_WriteTimer1
  4860 ;; This function is called by:
  4861 ;;		_InterruptHandlerLow
  4862 ;; This function uses a non-reentrant model
  4863 ;;
  4864                           
  4865                           	psect	text32
  4866  001CB0                     __ptext32:
  4867                           	opt stack 0
  4868  001CB0                     _timer1_int_handler:
  4869                           	opt stack 17
  4870                           
  4871                           ;user_interrupts.c: 37: unsigned int result;
  4872                           ;user_interrupts.c: 44: result = ReadTimer1();
  4873                           
  4874                           ;incstack = 0
  4875  001CB0  EC5F  F00F         	call	_ReadTimer1	;wreg free
  4876  001CB4  C001  F01B         	movff	?_ReadTimer1,timer1_int_handler@result
  4877  001CB8  C002  F01C         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  4878                           
  4879                           ;user_interrupts.c: 45: ToMainLow_sendmsg(0, 11, (void *) 0);
  4880  001CBC  0E0B               	movlw	11
  4881  001CBE  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  4882  001CC0  0E00               	movlw	0
  4883  001CC2  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  4884  001CC4  0E00               	movlw	0
  4885  001CC6  6E18               	movwf	ToMainLow_sendmsg@data,c
  4886  001CC8  0E00               	movlw	0
  4887  001CCA  ECD4  F00E         	call	_ToMainLow_sendmsg
  4888                           
  4889                           ;user_interrupts.c: 48: WriteTimer1(0);
  4890  001CCE  0E00               	movlw	0
  4891  001CD0  6E02               	movwf	WriteTimer1@timer1+1,c
  4892  001CD2  0E00               	movlw	0
  4893  001CD4  6E01               	movwf	WriteTimer1@timer1,c
  4894  001CD6  EC56  F00F         	call	_WriteTimer1	;wreg free
  4895                           
  4896                           ;user_interrupts.c: 50: ADCON0bits.GO = 1;
  4897  001CDA  82C2               	bsf	4034,1,c	;volatile
  4898  001CDC  0012               	return	
  4899  001CDE                     __end_of_timer1_int_handler:
  4900                           	opt stack 0
  4901                           pclatu	equ	0xFFB
  4902                           pclath	equ	0xFFA
  4903                           tblptru	equ	0xFF8
  4904                           tblptrh	equ	0xFF7
  4905                           tblptrl	equ	0xFF6
  4906                           tablat	equ	0xFF5
  4907                           prodh	equ	0xFF4
  4908                           prodl	equ	0xFF3
  4909                           intcon	equ	0xFF2
  4910                           postinc0	equ	0xFEE
  4911                           fsr0h	equ	0xFEA
  4912                           fsr0l	equ	0xFE9
  4913                           wreg	equ	0xFE8
  4914                           indf1	equ	0xFE7
  4915                           fsr1h	equ	0xFE2
  4916                           fsr1l	equ	0xFE1
  4917                           bsr	equ	0xFE0
  4918                           indf2	equ	0xFDF
  4919                           postinc2	equ	0xFDE
  4920                           postdec2	equ	0xFDD
  4921                           fsr2h	equ	0xFDA
  4922                           fsr2l	equ	0xFD9
  4923                           status	equ	0xFD8
  4924                           
  4925 ;; *************** function _WriteTimer1 *****************
  4926 ;; Defined at:
  4927 ;;		line 14 in file "C:\Program Files\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1write.c"
  4928 ;; Parameters:    Size  Location     Type
  4929 ;;  timer1          2    0[COMRAM] unsigned int 
  4930 ;; Auto vars:     Size  Location     Type
  4931 ;;  timer           2    2[COMRAM] struct Timers
  4932 ;; Return value:  Size  Location     Type
  4933 ;;		None               void
  4934 ;; Registers used:
  4935 ;;		None
  4936 ;; Tracked objects:
  4937 ;;		On entry : 0/0
  4938 ;;		On exit  : 0/0
  4939 ;;		Unchanged: 0/0
  4940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4941 ;;      Params:         2       0       0       0       0
  4942 ;;      Locals:         2       0       0       0       0
  4943 ;;      Temps:          0       0       0       0       0
  4944 ;;      Totals:         4       0       0       0       0
  4945 ;;Total ram usage:        4 bytes
  4946 ;; Hardware stack levels used:    1
  4947 ;; Hardware stack levels required when called:    5
  4948 ;; This function calls:
  4949 ;;		Nothing
  4950 ;; This function is called by:
  4951 ;;		_timer1_int_handler
  4952 ;; This function uses a non-reentrant model
  4953 ;;
  4954                           
  4955                           	psect	text33
  4956  001EAC                     __ptext33:
  4957                           	opt stack 0
  4958  001EAC                     _WriteTimer1:
  4959                           	opt stack 19
  4960                           
  4961                           ;incstack = 0
  4962  001EAC  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  4963  001EB0  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  4964  001EB4  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  4965  001EB8  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  4966  001EBC  0012               	return	
  4967  001EBE                     __end_of_WriteTimer1:
  4968                           	opt stack 0
  4969                           pclatu	equ	0xFFB
  4970                           pclath	equ	0xFFA
  4971                           tblptru	equ	0xFF8
  4972                           tblptrh	equ	0xFF7
  4973                           tblptrl	equ	0xFF6
  4974                           tablat	equ	0xFF5
  4975                           prodh	equ	0xFF4
  4976                           prodl	equ	0xFF3
  4977                           intcon	equ	0xFF2
  4978                           postinc0	equ	0xFEE
  4979                           fsr0h	equ	0xFEA
  4980                           fsr0l	equ	0xFE9
  4981                           wreg	equ	0xFE8
  4982                           indf1	equ	0xFE7
  4983                           fsr1h	equ	0xFE2
  4984                           fsr1l	equ	0xFE1
  4985                           bsr	equ	0xFE0
  4986                           indf2	equ	0xFDF
  4987                           postinc2	equ	0xFDE
  4988                           postdec2	equ	0xFDD
  4989                           fsr2h	equ	0xFDA
  4990                           fsr2l	equ	0xFD9
  4991                           status	equ	0xFD8
  4992                           
  4993 ;; *************** function _ToMainLow_sendmsg *****************
  4994 ;; Defined at:
  4995 ;;		line 103 in file "../src/messages.c"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;  length          1    wreg     unsigned char 
  4998 ;;  msgtype         1   22[COMRAM] unsigned char 
  4999 ;;  data            2   23[COMRAM] PTR void 
  5000 ;;		 -> main@uc(5), NULL(0), 
  5001 ;; Auto vars:     Size  Location     Type
  5002 ;;  length          1   25[COMRAM] unsigned char 
  5003 ;; Return value:  Size  Location     Type
  5004 ;;                  1    wreg      char 
  5005 ;; Registers used:
  5006 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5007 ;; Tracked objects:
  5008 ;;		On entry : 0/0
  5009 ;;		On exit  : 0/0
  5010 ;;		Unchanged: 0/0
  5011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5012 ;;      Params:         3       0       0       0       0
  5013 ;;      Locals:         1       0       0       0       0
  5014 ;;      Temps:          0       0       0       0       0
  5015 ;;      Totals:         4       0       0       0       0
  5016 ;;Total ram usage:        4 bytes
  5017 ;; Hardware stack levels used:    1
  5018 ;; Hardware stack levels required when called:    7
  5019 ;; This function calls:
  5020 ;;		i1_send_msg
  5021 ;; This function is called by:
  5022 ;;		_uart_recv_int_handler
  5023 ;;		_timer1_int_handler
  5024 ;; This function uses a non-reentrant model
  5025 ;;
  5026                           
  5027                           	psect	text34
  5028  001DA8                     __ptext34:
  5029                           	opt stack 0
  5030  001DA8                     _ToMainLow_sendmsg:
  5031                           	opt stack 17
  5032                           
  5033                           ;incstack = 0
  5034                           ;ToMainLow_sendmsg@length stored from wreg
  5035  001DA8  6E1A               	movwf	ToMainLow_sendmsg@length,c
  5036                           
  5037                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5038                           ;	Return value of _ToMainLow_sendmsg is never used
  5039  001DAA  0101               	movlb	1	; () banked
  5040  001DAC  0E01               	movlw	high _ToMainLow_MQ
  5041  001DAE  6E0C               	movwf	i1send_msg@qptr+1,c
  5042  001DB0  0101               	movlb	1	; () banked
  5043  001DB2  0E6C               	movlw	low _ToMainLow_MQ
  5044  001DB4  6E0B               	movwf	i1send_msg@qptr,c
  5045  001DB6  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5046  001DBA  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5047  001DBE  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5048  001DC2  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5049  001DC6  ECFC  F009         	call	i1_send_msg	;wreg free
  5050  001DCA  0012               	return	
  5051  001DCC                     __end_of_ToMainLow_sendmsg:
  5052                           	opt stack 0
  5053                           pclatu	equ	0xFFB
  5054                           pclath	equ	0xFFA
  5055                           tblptru	equ	0xFF8
  5056                           tblptrh	equ	0xFF7
  5057                           tblptrl	equ	0xFF6
  5058                           tablat	equ	0xFF5
  5059                           prodh	equ	0xFF4
  5060                           prodl	equ	0xFF3
  5061                           intcon	equ	0xFF2
  5062                           postinc0	equ	0xFEE
  5063                           fsr0h	equ	0xFEA
  5064                           fsr0l	equ	0xFE9
  5065                           wreg	equ	0xFE8
  5066                           indf1	equ	0xFE7
  5067                           fsr1h	equ	0xFE2
  5068                           fsr1l	equ	0xFE1
  5069                           bsr	equ	0xFE0
  5070                           indf2	equ	0xFDF
  5071                           postinc2	equ	0xFDE
  5072                           postdec2	equ	0xFDD
  5073                           fsr2h	equ	0xFDA
  5074                           fsr2l	equ	0xFD9
  5075                           status	equ	0xFD8
  5076                           
  5077 ;; *************** function i1_send_msg *****************
  5078 ;; Defined at:
  5079 ;;		line 24 in file "../src/messages.c"
  5080 ;; Parameters:    Size  Location     Type
  5081 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5082 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5083 ;;  length          1   12[COMRAM] unsigned char 
  5084 ;;  msgtype         1   13[COMRAM] unsigned char 
  5085 ;;  data            2   14[COMRAM] PTR void 
  5086 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), timer0_int_handler@val(2), 
  5087 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), RAM(1023), 
  5088 ;; Auto vars:     Size  Location     Type
  5089 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5090 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5091 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5092 ;;  send_msg        2   17[COMRAM] unsigned int 
  5093 ;;  send_msg        1   19[COMRAM] unsigned char 
  5094 ;; Return value:  Size  Location     Type
  5095 ;;                  1    wreg      char 
  5096 ;; Registers used:
  5097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5098 ;; Tracked objects:
  5099 ;;		On entry : 0/0
  5100 ;;		On exit  : 0/0
  5101 ;;		Unchanged: 0/0
  5102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5103 ;;      Params:         6       0       0       0       0
  5104 ;;      Locals:         5       0       0       0       0
  5105 ;;      Temps:          1       0       0       0       0
  5106 ;;      Totals:        12       0       0       0       0
  5107 ;;Total ram usage:       12 bytes
  5108 ;; Hardware stack levels used:    1
  5109 ;; Hardware stack levels required when called:    6
  5110 ;; This function calls:
  5111 ;;		i1_memcpy
  5112 ;; This function is called by:
  5113 ;;		_ToMainLow_sendmsg
  5114 ;; This function uses a non-reentrant model
  5115 ;;
  5116                           
  5117                           	psect	text35
  5118  0013F8                     __ptext35:
  5119                           	opt stack 0
  5120  0013F8                     i1_send_msg:
  5121                           	opt stack 17
  5122                           
  5123                           ;messages.c: 25: unsigned char slot;
  5124                           ;messages.c: 27: msg *qmsg;
  5125                           ;messages.c: 28: size_t tlength = length;
  5126                           
  5127                           ;incstack = 0
  5128  0013F8  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5129  0013FC  6A13               	clrf	i1send_msg@tlength+1,c
  5130                           
  5131                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5132  0013FE  EE20 F034          	lfsr	2,52
  5133  001402  500B               	movf	i1send_msg@qptr,w,c
  5134  001404  26D9               	addwf	fsr2l,f,c
  5135  001406  500C               	movf	i1send_msg@qptr+1,w,c
  5136  001408  22DA               	addwfc	fsr2h,f,c
  5137  00140A  50DF               	movf	indf2,w,c
  5138  00140C  6E14               	movwf	i1send_msg@slot,c
  5139                           
  5140                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5141  00140E  5014               	movf	i1send_msg@slot,w,c
  5142  001410  0D0D               	mullw	13
  5143  001412  50F3               	movf	prodl,w,c
  5144  001414  240B               	addwf	i1send_msg@qptr,w,c
  5145  001416  6E15               	movwf	i1send_msg@qmsg,c
  5146  001418  50F4               	movf	prodh,w,c
  5147  00141A  200C               	addwfc	i1send_msg@qptr+1,w,c
  5148  00141C  6E16               	movwf	i1send_msg@qmsg+1,c
  5149                           
  5150                           ;messages.c: 41: if (qmsg->full != 0) {
  5151  00141E  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5152  001422  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5153  001426  50DF               	movf	indf2,w,c
  5154  001428  B4D8               	btfsc	status,2,c
  5155  00142A  D002               	goto	i1l3324
  5156                           
  5157                           ;messages.c: 42: return (-1);
  5158  00142C  0EFF               	movlw	255
  5159  00142E  0012               	return	
  5160  001430                     i1l3324:
  5161                           
  5162                           ;messages.c: 43: }
  5163                           ;messages.c: 46: qmsg->length = length;
  5164  001430  EE20 F001          	lfsr	2,1
  5165  001434  5015               	movf	i1send_msg@qmsg,w,c
  5166  001436  26D9               	addwf	fsr2l,f,c
  5167  001438  5016               	movf	i1send_msg@qmsg+1,w,c
  5168  00143A  22DA               	addwfc	fsr2h,f,c
  5169  00143C  C00D  FFDF         	movff	i1send_msg@length,indf2
  5170                           
  5171                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5172  001440  EE20 F002          	lfsr	2,2
  5173  001444  5015               	movf	i1send_msg@qmsg,w,c
  5174  001446  26D9               	addwf	fsr2l,f,c
  5175  001448  5016               	movf	i1send_msg@qmsg+1,w,c
  5176  00144A  22DA               	addwfc	fsr2h,f,c
  5177  00144C  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  5178                           
  5179                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5180  001450  0E03               	movlw	3
  5181  001452  2415               	addwf	i1send_msg@qmsg,w,c
  5182  001454  6E01               	movwf	i1memcpy@d1,c
  5183  001456  0E00               	movlw	0
  5184  001458  2016               	addwfc	i1send_msg@qmsg+1,w,c
  5185  00145A  6E02               	movwf	i1memcpy@d1+1,c
  5186  00145C  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  5187  001460  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  5188  001464  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  5189  001468  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  5190  00146C  EC5C  F00D         	call	i1_memcpy	;wreg free
  5191                           
  5192                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  5193  001470  EE20 F034          	lfsr	2,52
  5194  001474  500B               	movf	i1send_msg@qptr,w,c
  5195  001476  26D9               	addwf	fsr2l,f,c
  5196  001478  500C               	movf	i1send_msg@qptr+1,w,c
  5197  00147A  22DA               	addwfc	fsr2h,f,c
  5198  00147C  EE10 F034          	lfsr	1,52
  5199  001480  500B               	movf	i1send_msg@qptr,w,c
  5200  001482  26E1               	addwf	fsr1l,f,c
  5201  001484  500C               	movf	i1send_msg@qptr+1,w,c
  5202  001486  22E2               	addwfc	fsr1h,f,c
  5203  001488  50E7               	movf	indf1,w,c
  5204  00148A  6E11               	movwf	??i1_send_msg& (0+255),c
  5205  00148C  2811               	incf	??i1_send_msg,w,c
  5206  00148E  0B03               	andlw	3
  5207  001490  6EDF               	movwf	indf2,c
  5208                           
  5209                           ;messages.c: 59: qmsg->full = 1;
  5210  001492  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5211  001496  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5212  00149A  0E01               	movlw	1
  5213  00149C  6EDF               	movwf	indf2,c
  5214                           
  5215                           ;messages.c: 60: return (1);
  5216  00149E  0E01               	movlw	1
  5217  0014A0  0012               	return	
  5218  0014A2                     __end_ofi1_send_msg:
  5219                           	opt stack 0
  5220                           pclatu	equ	0xFFB
  5221                           pclath	equ	0xFFA
  5222                           tblptru	equ	0xFF8
  5223                           tblptrh	equ	0xFF7
  5224                           tblptrl	equ	0xFF6
  5225                           tablat	equ	0xFF5
  5226                           prodh	equ	0xFF4
  5227                           prodl	equ	0xFF3
  5228                           intcon	equ	0xFF2
  5229                           postinc0	equ	0xFEE
  5230                           fsr0h	equ	0xFEA
  5231                           fsr0l	equ	0xFE9
  5232                           wreg	equ	0xFE8
  5233                           indf1	equ	0xFE7
  5234                           fsr1h	equ	0xFE2
  5235                           fsr1l	equ	0xFE1
  5236                           bsr	equ	0xFE0
  5237                           indf2	equ	0xFDF
  5238                           postinc2	equ	0xFDE
  5239                           postdec2	equ	0xFDD
  5240                           fsr2h	equ	0xFDA
  5241                           fsr2l	equ	0xFD9
  5242                           status	equ	0xFD8
  5243                           
  5244 ;; *************** function i1_memcpy *****************
  5245 ;; Defined at:
  5246 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\memcpy.c"
  5247 ;; Parameters:    Size  Location     Type
  5248 ;;  d1              2    0[COMRAM] PTR void 
  5249 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5250 ;;		 -> main@msgbuffer(11), timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  5251 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5252 ;;  s1              2    2[COMRAM] PTR const void 
  5253 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5254 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5255 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), timer0_int_handler@val(2), 
  5256 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  5257 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), RAM(1023), 
  5258 ;;  n               2    4[COMRAM] unsigned int 
  5259 ;; Auto vars:     Size  Location     Type
  5260 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5261 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5262 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5263 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), timer0_int_handler@val(2), 
  5264 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  5265 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), RAM(1023), 
  5266 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  5267 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5268 ;;		 -> main@msgbuffer(11), timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  5269 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5270 ;; Return value:  Size  Location     Type
  5271 ;;                  2    0[COMRAM] PTR void 
  5272 ;; Registers used:
  5273 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5274 ;; Tracked objects:
  5275 ;;		On entry : 0/0
  5276 ;;		On exit  : 0/0
  5277 ;;		Unchanged: 0/0
  5278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5279 ;;      Params:         6       0       0       0       0
  5280 ;;      Locals:         4       0       0       0       0
  5281 ;;      Temps:          0       0       0       0       0
  5282 ;;      Totals:        10       0       0       0       0
  5283 ;;Total ram usage:       10 bytes
  5284 ;; Hardware stack levels used:    1
  5285 ;; Hardware stack levels required when called:    5
  5286 ;; This function calls:
  5287 ;;		Nothing
  5288 ;; This function is called by:
  5289 ;;		i1_send_msg
  5290 ;; This function uses a non-reentrant model
  5291 ;;
  5292                           
  5293                           	psect	text36
  5294  001AB8                     __ptext36:
  5295                           	opt stack 0
  5296  001AB8                     i1_memcpy:
  5297                           	opt stack 17
  5298                           
  5299                           ;incstack = 0
  5300  001AB8  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  5301  001ABC  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  5302  001AC0  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  5303  001AC4  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  5304  001AC8  D00E               	goto	i1l3276
  5305  001ACA                     i1l3270:
  5306  001ACA  C009  FFD9         	movff	i1memcpy@s,fsr2l
  5307  001ACE  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  5308  001AD2  C007  FFE1         	movff	i1memcpy@d,fsr1l
  5309  001AD6  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  5310  001ADA  CFDF FFE7          	movff	indf2,indf1
  5311  001ADE  4A09               	infsnz	i1memcpy@s,f,c
  5312  001AE0  2A0A               	incf	i1memcpy@s+1,f,c
  5313  001AE2  4A07               	infsnz	i1memcpy@d,f,c
  5314  001AE4  2A08               	incf	i1memcpy@d+1,f,c
  5315  001AE6                     i1l3276:
  5316  001AE6  0605               	decf	i1memcpy@n,f,c
  5317  001AE8  A0D8               	btfss	status,0,c
  5318  001AEA  0606               	decf	i1memcpy@n+1,f,c
  5319  001AEC  2805               	incf	i1memcpy@n& (0+255),w,c
  5320  001AEE  B4D8               	btfsc	status,2,c
  5321  001AF0  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  5322  001AF2  B4D8               	btfsc	status,2,c
  5323                           
  5324                           ;	Return value of i1_memcpy is never used
  5325  001AF4  0012               	return	
  5326  001AF6  D7E9               	goto	i1l3270
  5327  001AF8                     __end_ofi1_memcpy:
  5328                           	opt stack 0
  5329                           pclatu	equ	0xFFB
  5330                           pclath	equ	0xFFA
  5331                           tblptru	equ	0xFF8
  5332                           tblptrh	equ	0xFF7
  5333                           tblptrl	equ	0xFF6
  5334                           tablat	equ	0xFF5
  5335                           prodh	equ	0xFF4
  5336                           prodl	equ	0xFF3
  5337                           intcon	equ	0xFF2
  5338                           postinc0	equ	0xFEE
  5339                           fsr0h	equ	0xFEA
  5340                           fsr0l	equ	0xFE9
  5341                           wreg	equ	0xFE8
  5342                           indf1	equ	0xFE7
  5343                           fsr1h	equ	0xFE2
  5344                           fsr1l	equ	0xFE1
  5345                           bsr	equ	0xFE0
  5346                           indf2	equ	0xFDF
  5347                           postinc2	equ	0xFDE
  5348                           postdec2	equ	0xFDD
  5349                           fsr2h	equ	0xFDA
  5350                           fsr2l	equ	0xFD9
  5351                           status	equ	0xFD8
  5352                           
  5353 ;; *************** function _ReadTimer1 *****************
  5354 ;; Defined at:
  5355 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1read.c"
  5356 ;; Parameters:    Size  Location     Type
  5357 ;;		None
  5358 ;; Auto vars:     Size  Location     Type
  5359 ;;  timer           2    2[COMRAM] struct Timers
  5360 ;; Return value:  Size  Location     Type
  5361 ;;                  2    0[COMRAM] unsigned int 
  5362 ;; Registers used:
  5363 ;;		None
  5364 ;; Tracked objects:
  5365 ;;		On entry : 0/0
  5366 ;;		On exit  : 0/0
  5367 ;;		Unchanged: 0/0
  5368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5369 ;;      Params:         2       0       0       0       0
  5370 ;;      Locals:         2       0       0       0       0
  5371 ;;      Temps:          0       0       0       0       0
  5372 ;;      Totals:         4       0       0       0       0
  5373 ;;Total ram usage:        4 bytes
  5374 ;; Hardware stack levels used:    1
  5375 ;; Hardware stack levels required when called:    5
  5376 ;; This function calls:
  5377 ;;		Nothing
  5378 ;; This function is called by:
  5379 ;;		_timer1_int_handler
  5380 ;; This function uses a non-reentrant model
  5381 ;;
  5382                           
  5383                           	psect	text37
  5384  001EBE                     __ptext37:
  5385                           	opt stack 0
  5386  001EBE                     _ReadTimer1:
  5387                           	opt stack 19
  5388                           
  5389                           ;incstack = 0
  5390  001EBE  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  5391  001EC2  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  5392  001EC6  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  5393  001ECA  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  5394  001ECE  0012               	return	
  5395  001ED0                     __end_of_ReadTimer1:
  5396                           	opt stack 0
  5397                           pclatu	equ	0xFFB
  5398                           pclath	equ	0xFFA
  5399                           tblptru	equ	0xFF8
  5400                           tblptrh	equ	0xFF7
  5401                           tblptrl	equ	0xFF6
  5402                           tablat	equ	0xFF5
  5403                           prodh	equ	0xFF4
  5404                           prodl	equ	0xFF3
  5405                           intcon	equ	0xFF2
  5406                           postinc0	equ	0xFEE
  5407                           fsr0h	equ	0xFEA
  5408                           fsr0l	equ	0xFE9
  5409                           wreg	equ	0xFE8
  5410                           indf1	equ	0xFE7
  5411                           fsr1h	equ	0xFE2
  5412                           fsr1l	equ	0xFE1
  5413                           bsr	equ	0xFE0
  5414                           indf2	equ	0xFDF
  5415                           postinc2	equ	0xFDE
  5416                           postdec2	equ	0xFDD
  5417                           fsr2h	equ	0xFDA
  5418                           fsr2l	equ	0xFD9
  5419                           status	equ	0xFD8
  5420                           
  5421 ;; *************** function _InterruptHandlerHigh *****************
  5422 ;; Defined at:
  5423 ;;		line 85 in file "../src/interrupts.c"
  5424 ;; Parameters:    Size  Location     Type
  5425 ;;		None
  5426 ;; Auto vars:     Size  Location     Type
  5427 ;;  a_d_result      2   54[BANK0 ] unsigned short 
  5428 ;; Return value:  Size  Location     Type
  5429 ;;		None               void
  5430 ;; Registers used:
  5431 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5432 ;; Tracked objects:
  5433 ;;		On entry : 0/0
  5434 ;;		On exit  : 0/0
  5435 ;;		Unchanged: 0/0
  5436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5437 ;;      Params:         0       0       0       0       0
  5438 ;;      Locals:         0       2       0       0       0
  5439 ;;      Temps:          0      18       0       0       0
  5440 ;;      Totals:         0      20       0       0       0
  5441 ;;Total ram usage:       20 bytes
  5442 ;; Hardware stack levels used:    1
  5443 ;; Hardware stack levels required when called:    4
  5444 ;; This function calls:
  5445 ;;		_SleepIfOkay
  5446 ;;		_ToMainHigh_sendmsg
  5447 ;;		___ftadd
  5448 ;;		___ftdiv
  5449 ;;		___ftmul
  5450 ;;		___fttol
  5451 ;;		___lwtoft
  5452 ;;		_i2c_int_handler
  5453 ;;		_timer0_int_handler
  5454 ;; This function is called by:
  5455 ;;		Interrupt level 2
  5456 ;; This function uses a non-reentrant model
  5457 ;;
  5458                           
  5459                           	psect	intcode
  5460  000008                     __pintcode:
  5461                           	opt stack 0
  5462  000008                     _InterruptHandlerHigh:
  5463                           	opt stack 17
  5464                           
  5465                           ;incstack = 0
  5466  000008  CFFA F0A8          	movff	pclath,??_InterruptHandlerHigh+4
  5467  00000C  CFFB F0A9          	movff	pclatu,??_InterruptHandlerHigh+5
  5468  000010  CFE9 F0AA          	movff	fsr0l,??_InterruptHandlerHigh+6
  5469  000014  EF77  F006         	goto	int_func
  5470                           pclatu	equ	0xFFB
  5471                           pclath	equ	0xFFA
  5472                           tblptru	equ	0xFF8
  5473                           tblptrh	equ	0xFF7
  5474                           tblptrl	equ	0xFF6
  5475                           tablat	equ	0xFF5
  5476                           prodh	equ	0xFF4
  5477                           prodl	equ	0xFF3
  5478                           intcon	equ	0xFF2
  5479                           postinc0	equ	0xFEE
  5480                           fsr0h	equ	0xFEA
  5481                           fsr0l	equ	0xFE9
  5482                           wreg	equ	0xFE8
  5483                           indf1	equ	0xFE7
  5484                           fsr1h	equ	0xFE2
  5485                           fsr1l	equ	0xFE1
  5486                           bsr	equ	0xFE0
  5487                           indf2	equ	0xFDF
  5488                           postinc2	equ	0xFDE
  5489                           postdec2	equ	0xFDD
  5490                           fsr2h	equ	0xFDA
  5491                           fsr2l	equ	0xFD9
  5492                           status	equ	0xFD8
  5493                           
  5494                           	psect	intcode_body
  5495  000CEE                     __pintcode_body:
  5496                           	opt stack 17
  5497  000CEE                     int_func:
  5498                           	opt stack 17
  5499  000CEE  CFEA F0AB          	movff	fsr0h,??_InterruptHandlerHigh+7
  5500  000CF2  CFE1 F0AC          	movff	fsr1l,??_InterruptHandlerHigh+8
  5501  000CF6  CFE2 F0AD          	movff	fsr1h,??_InterruptHandlerHigh+9
  5502  000CFA  CFD9 F0AE          	movff	fsr2l,??_InterruptHandlerHigh+10
  5503  000CFE  CFDA F0AF          	movff	fsr2h,??_InterruptHandlerHigh+11
  5504  000D02  CFF3 F0B0          	movff	prodl,??_InterruptHandlerHigh+12
  5505  000D06  CFF4 F0B1          	movff	prodh,??_InterruptHandlerHigh+13
  5506  000D0A  CFF6 F0B2          	movff	tblptrl,??_InterruptHandlerHigh+14
  5507  000D0E  CFF7 F0B3          	movff	tblptrh,??_InterruptHandlerHigh+15
  5508  000D12  CFF8 F0B4          	movff	tblptru,??_InterruptHandlerHigh+16
  5509  000D16  CFF5 F0B5          	movff	tablat,??_InterruptHandlerHigh+17
  5510                           
  5511                           ;interrupts.c: 90: if (PIR1bits.SSPIF) {
  5512  000D1A  A69E               	btfss	3998,3,c	;volatile
  5513  000D1C  D003               	goto	i2l3718
  5514                           
  5515                           ;interrupts.c: 92: PIR1bits.SSPIF = 0;
  5516  000D1E  969E               	bcf	3998,3,c	;volatile
  5517                           
  5518                           ;interrupts.c: 94: i2c_int_handler();
  5519  000D20  EC5D  F000         	call	_i2c_int_handler	;wreg free
  5520  000D24                     i2l3718:
  5521                           
  5522                           ;interrupts.c: 95: }
  5523                           ;interrupts.c: 98: if (INTCONbits.TMR0IF) {
  5524  000D24  A4F2               	btfss	intcon,2,c	;volatile
  5525  000D26  D003               	goto	i2l3724
  5526                           
  5527                           ;interrupts.c: 99: INTCONbits.TMR0IF = 0;
  5528  000D28  94F2               	bcf	intcon,2,c	;volatile
  5529                           
  5530                           ;interrupts.c: 101: timer0_int_handler();
  5531  000D2A  ECB4  F00C         	call	_timer0_int_handler	;wreg free
  5532  000D2E                     i2l3724:
  5533                           
  5534                           ;interrupts.c: 102: }
  5535                           ;interrupts.c: 104: if (PIR1bits.ADIF){
  5536  000D2E  AC9E               	btfss	3998,6,c	;volatile
  5537  000D30  D06A               	goto	i2l3736
  5538                           
  5539                           ;interrupts.c: 106: PIR1bits.ADIF = 0;
  5540  000D32  9C9E               	bcf	3998,6,c	;volatile
  5541                           
  5542                           ;interrupts.c: 107: unsigned short int a_d_result = 0;
  5543  000D34  0E00               	movlw	0
  5544  000D36  0100               	movlb	0	; () banked
  5545  000D38  6FB7               	movwf	(InterruptHandlerHigh@a_d_result+1)& (0+255),b
  5546  000D3A  0E00               	movlw	0
  5547  000D3C  0100               	movlb	0	; () banked
  5548  000D3E  6FB6               	movwf	InterruptHandlerHigh@a_d_result& (0+255),b
  5549                           
  5550                           ; BSR set to: 0
  5551                           ;interrupts.c: 109: a_d_result = (ADRESH << 8 ) | ADRESL;
  5552  000D40  50C3               	movf	4035,w,c	;volatile
  5553  000D42  CFC4 F0A4          	movff	4036,??_InterruptHandlerHigh	;volatile
  5554  000D46  0100               	movlb	0	; () banked
  5555  000D48  6BA5               	clrf	(??_InterruptHandlerHigh+1)& (0+255),b
  5556  000D4A  C0A4  F0A5         	movff	??_InterruptHandlerHigh,??_InterruptHandlerHigh+1
  5557  000D4E  0100               	movlb	0	; () banked
  5558  000D50  6BA4               	clrf	??_InterruptHandlerHigh& (0+255),b
  5559  000D52  0100               	movlb	0	; () banked
  5560  000D54  11A4               	iorwf	??_InterruptHandlerHigh& (0+255),w,b
  5561  000D56  0100               	movlb	0	; () banked
  5562  000D58  6FB6               	movwf	InterruptHandlerHigh@a_d_result& (0+255),b
  5563  000D5A  0100               	movlb	0	; () banked
  5564  000D5C  51A5               	movf	(??_InterruptHandlerHigh+1)& (0+255),w,b
  5565  000D5E  0100               	movlb	0	; () banked
  5566  000D60  6FB7               	movwf	(InterruptHandlerHigh@a_d_result+1)& (0+255),b
  5567                           
  5568                           ; BSR set to: 0
  5569                           ;interrupts.c: 111: a_d_result = 2*(9462 / (a_d_result - 16.92));
  5570  000D62  0E00               	movlw	0
  5571  000D64  0100               	movlb	0	; () banked
  5572  000D66  6F89               	movwf	___ftmul@f2& (0+255),b
  5573  000D68  0E00               	movlw	0
  5574  000D6A  0100               	movlb	0	; () banked
  5575  000D6C  6F8A               	movwf	(___ftmul@f2+1)& (0+255),b
  5576  000D6E  0E40               	movlw	64
  5577  000D70  0100               	movlb	0	; () banked
  5578  000D72  6F8B               	movwf	(___ftmul@f2+2)& (0+255),b
  5579  000D74  0E5C               	movlw	92
  5580  000D76  6E3C               	movwf	___ftadd@f2,c
  5581  000D78  0E87               	movlw	135
  5582  000D7A  6E3D               	movwf	___ftadd@f2+1,c
  5583  000D7C  0EC1               	movlw	193
  5584  000D7E  6E3E               	movwf	___ftadd@f2+2,c
  5585  000D80  C0B6  F036         	movff	InterruptHandlerHigh@a_d_result,___lwtoft@c
  5586  000D84  C0B7  F037         	movff	InterruptHandlerHigh@a_d_result+1,___lwtoft@c+1
  5587  000D88  ECF8  F00E         	call	___lwtoft	;wreg free
  5588  000D8C  C036  F039         	movff	?___lwtoft,___ftadd@f1
  5589  000D90  C037  F03A         	movff	?___lwtoft+1,___ftadd@f1+1
  5590  000D94  C038  F03B         	movff	?___lwtoft+2,___ftadd@f1+2
  5591  000D98  EC28  F004         	call	___ftadd	;wreg free
  5592  000D9C  C039  F048         	movff	?___ftadd,___ftdiv@f2
  5593  000DA0  C03A  F049         	movff	?___ftadd+1,___ftdiv@f2+1
  5594  000DA4  C03B  F04A         	movff	?___ftadd+2,___ftdiv@f2+2
  5595  000DA8  0ED8               	movlw	216
  5596  000DAA  6E45               	movwf	___ftdiv@f1,c
  5597  000DAC  0E13               	movlw	19
  5598  000DAE  6E46               	movwf	___ftdiv@f1+1,c
  5599  000DB0  0E46               	movlw	70
  5600  000DB2  6E47               	movwf	___ftdiv@f1+2,c
  5601  000DB4  ECB3  F007         	call	___ftdiv	;wreg free
  5602  000DB8  C045  F086         	movff	?___ftdiv,___ftmul@f1
  5603  000DBC  C046  F087         	movff	?___ftdiv+1,___ftmul@f1+1
  5604  000DC0  C047  F088         	movff	?___ftdiv+2,___ftmul@f1+2
  5605  000DC4  ECBC  F005         	call	___ftmul	;wreg free
  5606  000DC8  C086  F095         	movff	?___ftmul,___fttol@f1
  5607  000DCC  C087  F096         	movff	?___ftmul+1,___fttol@f1+1
  5608  000DD0  C088  F097         	movff	?___ftmul+2,___fttol@f1+2
  5609  000DD4  ECFE  F004         	call	___fttol	;wreg free
  5610  000DD8  C095  F0A4         	movff	?___fttol,??_InterruptHandlerHigh
  5611  000DDC  C096  F0A5         	movff	?___fttol+1,??_InterruptHandlerHigh+1
  5612  000DE0  C097  F0A6         	movff	?___fttol+2,??_InterruptHandlerHigh+2
  5613  000DE4  C098  F0A7         	movff	?___fttol+3,??_InterruptHandlerHigh+3
  5614  000DE8  C0A4  F0B6         	movff	??_InterruptHandlerHigh,InterruptHandlerHigh@a_d_result
  5615  000DEC  C0A5  F0B7         	movff	??_InterruptHandlerHigh+1,InterruptHandlerHigh@a_d_result+1
  5616                           
  5617                           ;interrupts.c: 114: ToMainHigh_sendmsg(2, 51, a_d_result);
  5618  000DF0  0E33               	movlw	51
  5619  000DF2  6E44               	movwf	ToMainHigh_sendmsg@msgtype,c
  5620  000DF4  0100               	movlb	0	; () banked
  5621  000DF6  C0B7  F046         	movff	InterruptHandlerHigh@a_d_result+1,ToMainHigh_sendmsg@data+1
  5622  000DFA  0100               	movlb	0	; () banked
  5623  000DFC  C0B6  F045         	movff	InterruptHandlerHigh@a_d_result,ToMainHigh_sendmsg@data
  5624  000E00  0E02               	movlw	2
  5625  000E02  ECE6  F00E         	call	_ToMainHigh_sendmsg
  5626  000E06                     i2l3736:
  5627                           
  5628                           ;interrupts.c: 115: }
  5629                           ;interrupts.c: 124: SleepIfOkay();
  5630  000E06  EC35  F00D         	call	_SleepIfOkay	;wreg free
  5631  000E0A  C0B5  FFF5         	movff	??_InterruptHandlerHigh+17,tablat
  5632  000E0E  C0B4  FFF8         	movff	??_InterruptHandlerHigh+16,tblptru
  5633  000E12  C0B3  FFF7         	movff	??_InterruptHandlerHigh+15,tblptrh
  5634  000E16  C0B2  FFF6         	movff	??_InterruptHandlerHigh+14,tblptrl
  5635  000E1A  C0B1  FFF4         	movff	??_InterruptHandlerHigh+13,prodh
  5636  000E1E  C0B0  FFF3         	movff	??_InterruptHandlerHigh+12,prodl
  5637  000E22  C0AF  FFDA         	movff	??_InterruptHandlerHigh+11,fsr2h
  5638  000E26  C0AE  FFD9         	movff	??_InterruptHandlerHigh+10,fsr2l
  5639  000E2A  C0AD  FFE2         	movff	??_InterruptHandlerHigh+9,fsr1h
  5640  000E2E  C0AC  FFE1         	movff	??_InterruptHandlerHigh+8,fsr1l
  5641  000E32  C0AB  FFEA         	movff	??_InterruptHandlerHigh+7,fsr0h
  5642  000E36  C0AA  FFE9         	movff	??_InterruptHandlerHigh+6,fsr0l
  5643  000E3A  C0A9  FFFB         	movff	??_InterruptHandlerHigh+5,pclatu
  5644  000E3E  C0A8  FFFA         	movff	??_InterruptHandlerHigh+4,pclath
  5645  000E42  0011               	retfie		f
  5646  000E44                     __end_of_InterruptHandlerHigh:
  5647                           	opt stack 0
  5648                           pclatu	equ	0xFFB
  5649                           pclath	equ	0xFFA
  5650                           tblptru	equ	0xFF8
  5651                           tblptrh	equ	0xFF7
  5652                           tblptrl	equ	0xFF6
  5653                           tablat	equ	0xFF5
  5654                           prodh	equ	0xFF4
  5655                           prodl	equ	0xFF3
  5656                           intcon	equ	0xFF2
  5657                           postinc0	equ	0xFEE
  5658                           fsr0h	equ	0xFEA
  5659                           fsr0l	equ	0xFE9
  5660                           wreg	equ	0xFE8
  5661                           indf1	equ	0xFE7
  5662                           fsr1h	equ	0xFE2
  5663                           fsr1l	equ	0xFE1
  5664                           bsr	equ	0xFE0
  5665                           indf2	equ	0xFDF
  5666                           postinc2	equ	0xFDE
  5667                           postdec2	equ	0xFDD
  5668                           fsr2h	equ	0xFDA
  5669                           fsr2l	equ	0xFD9
  5670                           status	equ	0xFD8
  5671                           
  5672 ;; *************** function _timer0_int_handler *****************
  5673 ;; Defined at:
  5674 ;;		line 16 in file "../src/user_interrupts.c"
  5675 ;; Parameters:    Size  Location     Type
  5676 ;;		None
  5677 ;; Auto vars:     Size  Location     Type
  5678 ;;  val             2    4[BANK0 ] unsigned int 
  5679 ;;  msgtype         2    2[BANK0 ] int 
  5680 ;;  length          2    0[BANK0 ] int 
  5681 ;; Return value:  Size  Location     Type
  5682 ;;		None               void
  5683 ;; Registers used:
  5684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5685 ;; Tracked objects:
  5686 ;;		On entry : 0/0
  5687 ;;		On exit  : 0/0
  5688 ;;		Unchanged: 0/0
  5689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5690 ;;      Params:         0       0       0       0       0
  5691 ;;      Locals:         0       6       0       0       0
  5692 ;;      Temps:          0       0       0       0       0
  5693 ;;      Totals:         0       6       0       0       0
  5694 ;;Total ram usage:        6 bytes
  5695 ;; Hardware stack levels used:    1
  5696 ;; Hardware stack levels required when called:    3
  5697 ;; This function calls:
  5698 ;;		_FromMainHigh_recvmsg
  5699 ;;		_ToMainHigh_sendmsg
  5700 ;;		_WriteTimer0
  5701 ;; This function is called by:
  5702 ;;		_InterruptHandlerHigh
  5703 ;; This function uses a non-reentrant model
  5704 ;;
  5705                           
  5706                           	psect	text39
  5707  001968                     __ptext39:
  5708                           	opt stack 0
  5709  001968                     _timer0_int_handler:
  5710                           	opt stack 17
  5711                           
  5712                           ;user_interrupts.c: 17: unsigned int val;
  5713                           ;user_interrupts.c: 18: int length, msgtype;
  5714                           ;user_interrupts.c: 25: WriteTimer0(0);
  5715                           
  5716                           ;incstack = 0
  5717  001968  0E00               	movlw	0
  5718  00196A  6E2F               	movwf	WriteTimer0@timer0+1,c
  5719  00196C  0E00               	movlw	0
  5720  00196E  6E2E               	movwf	WriteTimer0@timer0,c
  5721  001970  EC68  F00F         	call	_WriteTimer0	;wreg free
  5722                           
  5723                           ;user_interrupts.c: 27: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  5724  001974  0100               	movlb	0	; () banked
  5725  001976  0E00               	movlw	high timer0_int_handler@msgtype
  5726  001978  6E47               	movwf	FromMainHigh_recvmsg@msgtype+1,c
  5727  00197A  0100               	movlb	0	; () banked
  5728  00197C  0E82               	movlw	low timer0_int_handler@msgtype
  5729  00197E  6E46               	movwf	FromMainHigh_recvmsg@msgtype,c
  5730  001980  0100               	movlb	0	; () banked
  5731  001982  0E00               	movlw	high timer0_int_handler@val
  5732  001984  6E49               	movwf	FromMainHigh_recvmsg@data+1,c
  5733  001986  0100               	movlb	0	; () banked
  5734  001988  0E84               	movlw	low timer0_int_handler@val
  5735  00198A  6E48               	movwf	FromMainHigh_recvmsg@data,c
  5736  00198C  0E02               	movlw	2
  5737  00198E  EC9A  F00E         	call	_FromMainHigh_recvmsg
  5738  001992  0100               	movlb	0	; () banked
  5739  001994  6F80               	movwf	timer0_int_handler@length& (0+255),b
  5740  001996  0100               	movlb	0	; () banked
  5741  001998  6B81               	clrf	(timer0_int_handler@length+1)& (0+255),b
  5742  00199A  0100               	movlb	0	; () banked
  5743  00199C  BF80               	btfsc	timer0_int_handler@length& (0+255),7,b
  5744  00199E  0781               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  5745                           
  5746                           ; BSR set to: 0
  5747                           ;user_interrupts.c: 28: if (length == sizeof (val)) {
  5748  0019A0  0100               	movlb	0	; () banked
  5749  0019A2  5180               	movf	timer0_int_handler@length& (0+255),w,b
  5750  0019A4  0A02               	xorlw	2
  5751  0019A6  1181               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  5752  0019A8  A4D8               	btfss	status,2,c
  5753  0019AA  0012               	return	
  5754                           
  5755                           ; BSR set to: 0
  5756                           ;user_interrupts.c: 29: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  5757  0019AC  0E0A               	movlw	10
  5758  0019AE  6E44               	movwf	ToMainHigh_sendmsg@msgtype,c
  5759  0019B0  0100               	movlb	0	; () banked
  5760  0019B2  0E00               	movlw	high timer0_int_handler@val
  5761  0019B4  6E46               	movwf	ToMainHigh_sendmsg@data+1,c
  5762  0019B6  0100               	movlb	0	; () banked
  5763  0019B8  0E84               	movlw	low timer0_int_handler@val
  5764  0019BA  6E45               	movwf	ToMainHigh_sendmsg@data,c
  5765  0019BC  0E02               	movlw	2
  5766  0019BE  ECE6  F00E         	call	_ToMainHigh_sendmsg
  5767  0019C2  0012               	return	
  5768  0019C4                     __end_of_timer0_int_handler:
  5769                           	opt stack 0
  5770                           pclatu	equ	0xFFB
  5771                           pclath	equ	0xFFA
  5772                           tblptru	equ	0xFF8
  5773                           tblptrh	equ	0xFF7
  5774                           tblptrl	equ	0xFF6
  5775                           tablat	equ	0xFF5
  5776                           prodh	equ	0xFF4
  5777                           prodl	equ	0xFF3
  5778                           intcon	equ	0xFF2
  5779                           postinc0	equ	0xFEE
  5780                           fsr0h	equ	0xFEA
  5781                           fsr0l	equ	0xFE9
  5782                           wreg	equ	0xFE8
  5783                           indf1	equ	0xFE7
  5784                           fsr1h	equ	0xFE2
  5785                           fsr1l	equ	0xFE1
  5786                           bsr	equ	0xFE0
  5787                           indf2	equ	0xFDF
  5788                           postinc2	equ	0xFDE
  5789                           postdec2	equ	0xFDD
  5790                           fsr2h	equ	0xFDA
  5791                           fsr2l	equ	0xFD9
  5792                           status	equ	0xFD8
  5793                           
  5794 ;; *************** function _WriteTimer0 *****************
  5795 ;; Defined at:
  5796 ;;		line 16 in file "C:\Program Files\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0write.c"
  5797 ;; Parameters:    Size  Location     Type
  5798 ;;  timer0          2   45[COMRAM] unsigned int 
  5799 ;; Auto vars:     Size  Location     Type
  5800 ;;  timer           2   47[COMRAM] struct Timers
  5801 ;; Return value:  Size  Location     Type
  5802 ;;		None               void
  5803 ;; Registers used:
  5804 ;;		None
  5805 ;; Tracked objects:
  5806 ;;		On entry : 0/0
  5807 ;;		On exit  : 0/0
  5808 ;;		Unchanged: 0/0
  5809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5810 ;;      Params:         2       0       0       0       0
  5811 ;;      Locals:         2       0       0       0       0
  5812 ;;      Temps:          0       0       0       0       0
  5813 ;;      Totals:         4       0       0       0       0
  5814 ;;Total ram usage:        4 bytes
  5815 ;; Hardware stack levels used:    1
  5816 ;; This function calls:
  5817 ;;		Nothing
  5818 ;; This function is called by:
  5819 ;;		_timer0_int_handler
  5820 ;; This function uses a non-reentrant model
  5821 ;;
  5822                           
  5823                           	psect	text40
  5824  001ED0                     __ptext40:
  5825                           	opt stack 0
  5826  001ED0                     _WriteTimer0:
  5827                           	opt stack 19
  5828                           
  5829                           ;incstack = 0
  5830  001ED0  C02E  F030         	movff	WriteTimer0@timer0,WriteTimer0@timer
  5831  001ED4  C02F  F031         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  5832  001ED8  C031  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  5833  001EDC  C030  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  5834  001EE0  0012               	return	
  5835  001EE2                     __end_of_WriteTimer0:
  5836                           	opt stack 0
  5837                           pclatu	equ	0xFFB
  5838                           pclath	equ	0xFFA
  5839                           tblptru	equ	0xFF8
  5840                           tblptrh	equ	0xFF7
  5841                           tblptrl	equ	0xFF6
  5842                           tablat	equ	0xFF5
  5843                           prodh	equ	0xFF4
  5844                           prodl	equ	0xFF3
  5845                           intcon	equ	0xFF2
  5846                           postinc0	equ	0xFEE
  5847                           fsr0h	equ	0xFEA
  5848                           fsr0l	equ	0xFE9
  5849                           wreg	equ	0xFE8
  5850                           indf1	equ	0xFE7
  5851                           fsr1h	equ	0xFE2
  5852                           fsr1l	equ	0xFE1
  5853                           bsr	equ	0xFE0
  5854                           indf2	equ	0xFDF
  5855                           postinc2	equ	0xFDE
  5856                           postdec2	equ	0xFDD
  5857                           fsr2h	equ	0xFDA
  5858                           fsr2l	equ	0xFD9
  5859                           status	equ	0xFD8
  5860                           
  5861 ;; *************** function _FromMainHigh_recvmsg *****************
  5862 ;; Defined at:
  5863 ;;		line 183 in file "../src/messages.c"
  5864 ;; Parameters:    Size  Location     Type
  5865 ;;  maxlength       1    wreg     unsigned char 
  5866 ;;  msgtype         2   69[COMRAM] PTR unsigned char 
  5867 ;;		 -> timer0_int_handler@msgtype(2), 
  5868 ;;  data            2   71[COMRAM] PTR void 
  5869 ;;		 -> timer0_int_handler@val(2), 
  5870 ;; Auto vars:     Size  Location     Type
  5871 ;;  maxlength       1   73[COMRAM] unsigned char 
  5872 ;; Return value:  Size  Location     Type
  5873 ;;                  1    wreg      char 
  5874 ;; Registers used:
  5875 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5876 ;; Tracked objects:
  5877 ;;		On entry : 0/0
  5878 ;;		On exit  : 0/0
  5879 ;;		Unchanged: 0/0
  5880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5881 ;;      Params:         4       0       0       0       0
  5882 ;;      Locals:         1       0       0       0       0
  5883 ;;      Temps:          0       0       0       0       0
  5884 ;;      Totals:         5       0       0       0       0
  5885 ;;Total ram usage:        5 bytes
  5886 ;; Hardware stack levels used:    1
  5887 ;; Hardware stack levels required when called:    2
  5888 ;; This function calls:
  5889 ;;		i2_recv_msg
  5890 ;; This function is called by:
  5891 ;;		_timer0_int_handler
  5892 ;; This function uses a non-reentrant model
  5893 ;;
  5894                           
  5895                           	psect	text41
  5896  001D34                     __ptext41:
  5897                           	opt stack 0
  5898  001D34                     _FromMainHigh_recvmsg:
  5899                           	opt stack 17
  5900                           
  5901                           ;incstack = 0
  5902                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  5903  001D34  6E4A               	movwf	FromMainHigh_recvmsg@maxlength,c
  5904                           
  5905                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  5906  001D36  0102               	movlb	2	; () banked
  5907  001D38  0E02               	movlw	high _FromMainHigh_MQ
  5908  001D3A  6E39               	movwf	i2recv_msg@qptr+1,c
  5909  001D3C  0102               	movlb	2	; () banked
  5910  001D3E  0E00               	movlw	low _FromMainHigh_MQ
  5911  001D40  6E38               	movwf	i2recv_msg@qptr,c
  5912  001D42  C04A  F03A         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  5913  001D46  C047  F03C         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  5914  001D4A  C046  F03B         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  5915  001D4E  C049  F03E         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  5916  001D52  C048  F03D         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  5917  001D56  EC30  F009         	call	i2_recv_msg	;wreg free
  5918  001D5A  0012               	return	
  5919  001D5C                     __end_of_FromMainHigh_recvmsg:
  5920                           	opt stack 0
  5921                           pclatu	equ	0xFFB
  5922                           pclath	equ	0xFFA
  5923                           tblptru	equ	0xFF8
  5924                           tblptrh	equ	0xFF7
  5925                           tblptrl	equ	0xFF6
  5926                           tablat	equ	0xFF5
  5927                           prodh	equ	0xFF4
  5928                           prodl	equ	0xFF3
  5929                           intcon	equ	0xFF2
  5930                           postinc0	equ	0xFEE
  5931                           fsr0h	equ	0xFEA
  5932                           fsr0l	equ	0xFE9
  5933                           wreg	equ	0xFE8
  5934                           indf1	equ	0xFE7
  5935                           fsr1h	equ	0xFE2
  5936                           fsr1l	equ	0xFE1
  5937                           bsr	equ	0xFE0
  5938                           indf2	equ	0xFDF
  5939                           postinc2	equ	0xFDE
  5940                           postdec2	equ	0xFDD
  5941                           fsr2h	equ	0xFDA
  5942                           fsr2l	equ	0xFD9
  5943                           status	equ	0xFD8
  5944                           
  5945 ;; *************** function i2_recv_msg *****************
  5946 ;; Defined at:
  5947 ;;		line 63 in file "../src/messages.c"
  5948 ;; Parameters:    Size  Location     Type
  5949 ;;  qptr            2   55[COMRAM] PTR struct __msg_queue
  5950 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5951 ;;  maxlength       1   57[COMRAM] unsigned char 
  5952 ;;  msgtype         2   58[COMRAM] PTR unsigned char 
  5953 ;;		 -> main@msgtype(1), timer0_int_handler@msgtype(2), 
  5954 ;;  data            2   60[COMRAM] PTR void 
  5955 ;;		 -> main@msgbuffer(11), timer0_int_handler@val(2), 
  5956 ;; Auto vars:     Size  Location     Type
  5957 ;;  recv_msg        2   67[COMRAM] PTR struct __msg
  5958 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5959 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5960 ;;  recv_msg        2   65[COMRAM] unsigned int 
  5961 ;;  recv_msg        1   64[COMRAM] unsigned char 
  5962 ;; Return value:  Size  Location     Type
  5963 ;;                  1    wreg      char 
  5964 ;; Registers used:
  5965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5966 ;; Tracked objects:
  5967 ;;		On entry : 0/0
  5968 ;;		On exit  : 0/0
  5969 ;;		Unchanged: 0/0
  5970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5971 ;;      Params:         7       0       0       0       0
  5972 ;;      Locals:         5       0       0       0       0
  5973 ;;      Temps:          2       0       0       0       0
  5974 ;;      Totals:        14       0       0       0       0
  5975 ;;Total ram usage:       14 bytes
  5976 ;; Hardware stack levels used:    1
  5977 ;; Hardware stack levels required when called:    1
  5978 ;; This function calls:
  5979 ;;		i2_memcpy
  5980 ;; This function is called by:
  5981 ;;		_FromMainHigh_recvmsg
  5982 ;; This function uses a non-reentrant model
  5983 ;;
  5984                           
  5985                           	psect	text42
  5986  001260                     __ptext42:
  5987                           	opt stack 0
  5988  001260                     i2_recv_msg:
  5989                           	opt stack 17
  5990                           
  5991                           ;messages.c: 64: unsigned char slot;
  5992                           ;messages.c: 68: msg *qmsg;
  5993                           ;messages.c: 69: size_t tlength;
  5994                           ;messages.c: 72: slot = qptr->cur_read_ind;
  5995                           
  5996                           ;incstack = 0
  5997  001260  EE20 F035          	lfsr	2,53
  5998  001264  5038               	movf	i2recv_msg@qptr,w,c
  5999  001266  26D9               	addwf	fsr2l,f,c
  6000  001268  5039               	movf	i2recv_msg@qptr+1,w,c
  6001  00126A  22DA               	addwfc	fsr2h,f,c
  6002  00126C  50DF               	movf	indf2,w,c
  6003  00126E  6E41               	movwf	i2recv_msg@slot,c
  6004                           
  6005                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  6006  001270  5041               	movf	i2recv_msg@slot,w,c
  6007  001272  0D0D               	mullw	13
  6008  001274  50F3               	movf	prodl,w,c
  6009  001276  2438               	addwf	i2recv_msg@qptr,w,c
  6010  001278  6E44               	movwf	i2recv_msg@qmsg,c
  6011  00127A  50F4               	movf	prodh,w,c
  6012  00127C  2039               	addwfc	i2recv_msg@qptr+1,w,c
  6013  00127E  6E45               	movwf	i2recv_msg@qmsg+1,c
  6014                           
  6015                           ;messages.c: 74: if (qmsg->full == 1) {
  6016  001280  0E01               	movlw	1
  6017  001282  C044  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6018  001286  C045  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6019  00128A  62DF               	cpfseq	indf2,c
  6020  00128C  D050               	goto	i2l3388
  6021                           
  6022                           ;messages.c: 76: if (qmsg->length > maxlength) {
  6023  00128E  EE20 F001          	lfsr	2,1
  6024  001292  5044               	movf	i2recv_msg@qmsg,w,c
  6025  001294  26D9               	addwf	fsr2l,f,c
  6026  001296  5045               	movf	i2recv_msg@qmsg+1,w,c
  6027  001298  22DA               	addwfc	fsr2h,f,c
  6028  00129A  50DF               	movf	indf2,w,c
  6029  00129C  5C3A               	subwf	i2recv_msg@maxlength,w,c
  6030  00129E  B0D8               	btfsc	status,0,c
  6031  0012A0  D002               	goto	i2l3372
  6032                           
  6033                           ;messages.c: 77: return (-3);
  6034  0012A2  0EFD               	movlw	253
  6035  0012A4  0012               	return	
  6036  0012A6                     i2l3372:
  6037                           
  6038                           ;messages.c: 78: }
  6039                           ;messages.c: 80: tlength = qmsg->length;
  6040  0012A6  EE20 F001          	lfsr	2,1
  6041  0012AA  5044               	movf	i2recv_msg@qmsg,w,c
  6042  0012AC  26D9               	addwf	fsr2l,f,c
  6043  0012AE  5045               	movf	i2recv_msg@qmsg+1,w,c
  6044  0012B0  22DA               	addwfc	fsr2h,f,c
  6045  0012B2  50DF               	movf	indf2,w,c
  6046  0012B4  6E3F               	movwf	??i2_recv_msg& (0+255),c
  6047  0012B6  503F               	movf	??i2_recv_msg,w,c
  6048  0012B8  6E42               	movwf	i2recv_msg@tlength,c
  6049  0012BA  6A43               	clrf	i2recv_msg@tlength+1,c
  6050                           
  6051                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  6052  0012BC  C03E  F02F         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  6053  0012C0  C03D  F02E         	movff	i2recv_msg@data,i2memcpy@d1
  6054  0012C4  0E03               	movlw	3
  6055  0012C6  2444               	addwf	i2recv_msg@qmsg,w,c
  6056  0012C8  6E3F               	movwf	??i2_recv_msg& (0+255),c
  6057  0012CA  0E00               	movlw	0
  6058  0012CC  2045               	addwfc	i2recv_msg@qmsg+1,w,c
  6059  0012CE  6E40               	movwf	(??i2_recv_msg+1)& (0+255),c
  6060  0012D0  C03F  F030         	movff	??i2_recv_msg,i2memcpy@s1
  6061  0012D4  C040  F031         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  6062  0012D8  C042  F032         	movff	i2recv_msg@tlength,i2memcpy@n
  6063  0012DC  C043  F033         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  6064  0012E0  EC7C  F00D         	call	i2_memcpy	;wreg free
  6065                           
  6066                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  6067  0012E4  EE20 F035          	lfsr	2,53
  6068  0012E8  5038               	movf	i2recv_msg@qptr,w,c
  6069  0012EA  26D9               	addwf	fsr2l,f,c
  6070  0012EC  5039               	movf	i2recv_msg@qptr+1,w,c
  6071  0012EE  22DA               	addwfc	fsr2h,f,c
  6072  0012F0  EE10 F035          	lfsr	1,53
  6073  0012F4  5038               	movf	i2recv_msg@qptr,w,c
  6074  0012F6  26E1               	addwf	fsr1l,f,c
  6075  0012F8  5039               	movf	i2recv_msg@qptr+1,w,c
  6076  0012FA  22E2               	addwfc	fsr1h,f,c
  6077  0012FC  50E7               	movf	indf1,w,c
  6078  0012FE  6E3F               	movwf	??i2_recv_msg& (0+255),c
  6079  001300  283F               	incf	??i2_recv_msg,w,c
  6080  001302  0B03               	andlw	3
  6081  001304  6EDF               	movwf	indf2,c
  6082                           
  6083                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  6084  001306  EE20 F002          	lfsr	2,2
  6085  00130A  5044               	movf	i2recv_msg@qmsg,w,c
  6086  00130C  26D9               	addwf	fsr2l,f,c
  6087  00130E  5045               	movf	i2recv_msg@qmsg+1,w,c
  6088  001310  22DA               	addwfc	fsr2h,f,c
  6089  001312  C03B  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  6090  001316  C03C  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  6091  00131A  CFDF FFE7          	movff	indf2,indf1
  6092                           
  6093                           ;messages.c: 91: qmsg->full = 0;
  6094  00131E  C044  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6095  001322  C045  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6096  001326  0E00               	movlw	0
  6097  001328  6EDF               	movwf	indf2,c
  6098                           
  6099                           ;messages.c: 92: return (tlength);
  6100  00132A  5042               	movf	i2recv_msg@tlength,w,c
  6101  00132C  0012               	return	
  6102  00132E                     i2l3388:
  6103                           
  6104                           ;messages.c: 94: return (-4);
  6105  00132E  0EFC               	movlw	252
  6106  001330  0012               	return	
  6107  001332                     __end_ofi2_recv_msg:
  6108                           	opt stack 0
  6109                           pclatu	equ	0xFFB
  6110                           pclath	equ	0xFFA
  6111                           tblptru	equ	0xFF8
  6112                           tblptrh	equ	0xFF7
  6113                           tblptrl	equ	0xFF6
  6114                           tablat	equ	0xFF5
  6115                           prodh	equ	0xFF4
  6116                           prodl	equ	0xFF3
  6117                           intcon	equ	0xFF2
  6118                           postinc0	equ	0xFEE
  6119                           fsr0h	equ	0xFEA
  6120                           fsr0l	equ	0xFE9
  6121                           wreg	equ	0xFE8
  6122                           indf1	equ	0xFE7
  6123                           fsr1h	equ	0xFE2
  6124                           fsr1l	equ	0xFE1
  6125                           bsr	equ	0xFE0
  6126                           indf2	equ	0xFDF
  6127                           postinc2	equ	0xFDE
  6128                           postdec2	equ	0xFDD
  6129                           fsr2h	equ	0xFDA
  6130                           fsr2l	equ	0xFD9
  6131                           status	equ	0xFD8
  6132                           
  6133 ;; *************** function _i2c_int_handler *****************
  6134 ;; Defined at:
  6135 ;;		line 100 in file "../src/my_i2c.c"
  6136 ;; Parameters:    Size  Location     Type
  6137 ;;		None
  6138 ;; Auto vars:     Size  Location     Type
  6139 ;;  error_buf       3    0[BANK0 ] unsigned char [3]
  6140 ;;  data_read       1    8[BANK0 ] unsigned char 
  6141 ;;  msg_ready       1    7[BANK0 ] unsigned char 
  6142 ;;  msg_to_send     1    6[BANK0 ] unsigned char 
  6143 ;;  i2c_data        1    5[BANK0 ] unsigned char 
  6144 ;;  overrun_erro    1    4[BANK0 ] unsigned char 
  6145 ;;  data_written    1    3[BANK0 ] unsigned char 
  6146 ;; Return value:  Size  Location     Type
  6147 ;;		None               void
  6148 ;; Registers used:
  6149 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6150 ;; Tracked objects:
  6151 ;;		On entry : 0/0
  6152 ;;		On exit  : 0/0
  6153 ;;		Unchanged: 0/0
  6154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6155 ;;      Params:         0       0       0       0       0
  6156 ;;      Locals:         0       9       0       0       0
  6157 ;;      Temps:          1       0       0       0       0
  6158 ;;      Totals:         1       9       0       0       0
  6159 ;;Total ram usage:       10 bytes
  6160 ;; Hardware stack levels used:    1
  6161 ;; Hardware stack levels required when called:    3
  6162 ;; This function calls:
  6163 ;;		_ToMainHigh_sendmsg
  6164 ;;		_handle_start
  6165 ;; This function is called by:
  6166 ;;		_InterruptHandlerHigh
  6167 ;; This function uses a non-reentrant model
  6168 ;;
  6169                           
  6170                           	psect	text43
  6171  0000BA                     __ptext43:
  6172                           	opt stack 0
  6173  0000BA                     _i2c_int_handler:
  6174                           	opt stack 17
  6175                           
  6176                           ;my_i2c.c: 101: unsigned char i2c_data;
  6177                           ;my_i2c.c: 102: unsigned char data_read = 0;
  6178                           
  6179                           ;incstack = 0
  6180  0000BA  0E00               	movlw	0
  6181  0000BC  0100               	movlb	0	; () banked
  6182  0000BE  6F88               	movwf	i2c_int_handler@data_read& (0+255),b
  6183                           
  6184                           ;my_i2c.c: 103: unsigned char data_written = 0;
  6185  0000C0  0E00               	movlw	0
  6186  0000C2  0100               	movlb	0	; () banked
  6187  0000C4  6F83               	movwf	i2c_int_handler@data_written& (0+255),b
  6188                           
  6189                           ;my_i2c.c: 104: unsigned char msg_ready = 0;
  6190  0000C6  0E00               	movlw	0
  6191  0000C8  0100               	movlb	0	; () banked
  6192  0000CA  6F87               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6193                           
  6194                           ;my_i2c.c: 105: unsigned char msg_to_send = 0;
  6195  0000CC  0E00               	movlw	0
  6196  0000CE  0100               	movlb	0	; () banked
  6197  0000D0  6F86               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6198                           
  6199                           ;my_i2c.c: 106: unsigned char overrun_error = 0;
  6200  0000D2  0E00               	movlw	0
  6201  0000D4  0100               	movlb	0	; () banked
  6202  0000D6  6F84               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6203                           
  6204                           ; BSR set to: 0
  6205                           ;my_i2c.c: 107: unsigned char error_buf[3];
  6206                           ;my_i2c.c: 110: if (SSPCON1bits.SSPOV == 1) {
  6207  0000D8  ACC6               	btfss	4038,6,c	;volatile
  6208  0000DA  D024               	goto	i2l3486
  6209                           
  6210                           ; BSR set to: 0
  6211                           ;my_i2c.c: 111: SSPCON1bits.SSPOV = 0;
  6212  0000DC  9CC6               	bcf	4038,6,c	;volatile
  6213                           
  6214                           ; BSR set to: 0
  6215                           ;my_i2c.c: 115: ic_ptr->status = 0x5;
  6216  0000DE  0100               	movlb	0	; () banked
  6217  0000E0  EE20 F00C          	lfsr	2,12
  6218  0000E4  0100               	movlb	0	; () banked
  6219  0000E6  51C5               	movf	_ic_ptr& (0+255),w,b
  6220  0000E8  26D9               	addwf	fsr2l,f,c
  6221  0000EA  0100               	movlb	0	; () banked
  6222  0000EC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6223  0000EE  22DA               	addwfc	fsr2h,f,c
  6224  0000F0  0E05               	movlw	5
  6225  0000F2  6EDF               	movwf	indf2,c
  6226                           
  6227                           ; BSR set to: 0
  6228                           ;my_i2c.c: 116: overrun_error = 1;
  6229  0000F4  0E01               	movlw	1
  6230  0000F6  0100               	movlb	0	; () banked
  6231  0000F8  6F84               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6232                           
  6233                           ; BSR set to: 0
  6234                           ;my_i2c.c: 117: ic_ptr->error_count++;
  6235  0000FA  0100               	movlb	0	; () banked
  6236  0000FC  EE20 F00E          	lfsr	2,14
  6237  000100  0100               	movlb	0	; () banked
  6238  000102  51C5               	movf	_ic_ptr& (0+255),w,b
  6239  000104  26D9               	addwf	fsr2l,f,c
  6240  000106  0100               	movlb	0	; () banked
  6241  000108  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6242  00010A  22DA               	addwfc	fsr2h,f,c
  6243  00010C  2ADF               	incf	indf2,f,c
  6244                           
  6245                           ; BSR set to: 0
  6246                           ;my_i2c.c: 118: ic_ptr->error_code = 0x4;
  6247  00010E  0100               	movlb	0	; () banked
  6248  000110  EE20 F00D          	lfsr	2,13
  6249  000114  0100               	movlb	0	; () banked
  6250  000116  51C5               	movf	_ic_ptr& (0+255),w,b
  6251  000118  26D9               	addwf	fsr2l,f,c
  6252  00011A  0100               	movlb	0	; () banked
  6253  00011C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6254  00011E  22DA               	addwfc	fsr2h,f,c
  6255  000120  0E04               	movlw	4
  6256  000122  6EDF               	movwf	indf2,c
  6257  000124                     i2l3486:
  6258                           
  6259                           ; BSR set to: 0
  6260                           ;my_i2c.c: 119: }
  6261                           ;my_i2c.c: 121: if (SSPSTATbits.BF == 1) {
  6262  000124  A0C7               	btfss	4039,0,c	;volatile
  6263  000126  D005               	goto	i2l3492
  6264                           
  6265                           ; BSR set to: 0
  6266                           ;my_i2c.c: 122: i2c_data = SSPBUF;
  6267  000128  CFC9 F085          	movff	4041,i2c_int_handler@i2c_data	;volatile
  6268                           
  6269                           ; BSR set to: 0
  6270                           ;my_i2c.c: 123: data_read = 1;
  6271  00012C  0E01               	movlw	1
  6272  00012E  0100               	movlb	0	; () banked
  6273  000130  6F88               	movwf	i2c_int_handler@data_read& (0+255),b
  6274  000132                     i2l3492:
  6275                           
  6276                           ; BSR set to: 0
  6277                           ;my_i2c.c: 124: }
  6278                           ;my_i2c.c: 126: if (!overrun_error) {
  6279  000132  0100               	movlb	0	; () banked
  6280  000134  6784               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  6281  000136  D197               	goto	i2l192
  6282  000138  D180               	goto	i2l3580
  6283  00013A                     i2l194:
  6284                           
  6285                           ; BSR set to: 0
  6286                           ;my_i2c.c: 129: {
  6287                           ;my_i2c.c: 131: if (SSPSTATbits.S == 1) {
  6288  00013A  A6C7               	btfss	4039,3,c	;volatile
  6289  00013C  D194               	goto	i2l192
  6290                           
  6291                           ; BSR set to: 0
  6292                           ;my_i2c.c: 132: handle_start(data_read);
  6293  00013E  0100               	movlb	0	; () banked
  6294  000140  5188               	movf	i2c_int_handler@data_read& (0+255),w,b
  6295  000142  EC99  F009         	call	_handle_start
  6296                           
  6297                           ;my_i2c.c: 134: if (ic_ptr->status == 0x8) {
  6298  000146  0100               	movlb	0	; () banked
  6299  000148  EE20 F00C          	lfsr	2,12
  6300  00014C  0100               	movlb	0	; () banked
  6301  00014E  51C5               	movf	_ic_ptr& (0+255),w,b
  6302  000150  26D9               	addwf	fsr2l,f,c
  6303  000152  0100               	movlb	0	; () banked
  6304  000154  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6305  000156  22DA               	addwfc	fsr2h,f,c
  6306  000158  0E08               	movlw	8
  6307  00015A  62DF               	cpfseq	indf2,c
  6308  00015C  D184               	goto	i2l192
  6309                           
  6310                           ; BSR set to: 0
  6311                           ;my_i2c.c: 135: data_read = 0;
  6312  00015E  0E00               	movlw	0
  6313  000160  0100               	movlb	0	; () banked
  6314  000162  6F88               	movwf	i2c_int_handler@data_read& (0+255),b
  6315                           
  6316                           ;my_i2c.c: 136: msg_to_send = 1;
  6317  000164  0E01               	movlw	1
  6318  000166  0100               	movlb	0	; () banked
  6319  000168  6F86               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6320  00016A  D17D               	goto	i2l192
  6321  00016C                     i2l198:
  6322                           
  6323                           ; BSR set to: 0
  6324                           ;my_i2c.c: 142: {
  6325                           ;my_i2c.c: 144: if (SSPSTATbits.P == 1) {
  6326  00016C  A8C7               	btfss	4039,4,c	;volatile
  6327  00016E  D02A               	goto	i2l3512
  6328                           
  6329                           ; BSR set to: 0
  6330                           ;my_i2c.c: 147: ic_ptr->event_count++;
  6331  000170  0100               	movlb	0	; () banked
  6332  000172  EE20 F00B          	lfsr	2,11
  6333  000176  0100               	movlb	0	; () banked
  6334  000178  51C5               	movf	_ic_ptr& (0+255),w,b
  6335  00017A  26D9               	addwf	fsr2l,f,c
  6336  00017C  0100               	movlb	0	; () banked
  6337  00017E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6338  000180  22DA               	addwfc	fsr2h,f,c
  6339  000182  2ADF               	incf	indf2,f,c
  6340                           
  6341                           ; BSR set to: 0
  6342                           ;my_i2c.c: 148: if (data_read) {
  6343  000184  0100               	movlb	0	; () banked
  6344  000186  5188               	movf	i2c_int_handler@data_read& (0+255),w,b
  6345  000188  B4D8               	btfsc	status,2,c
  6346  00018A  D14C               	goto	L6
  6347                           
  6348                           ; BSR set to: 0
  6349                           ;my_i2c.c: 149: if (SSPSTATbits.D_A == 0) {
  6350  00018C  BAC7               	btfsc	4039,5,c	;volatile
  6351  00018E  D004               	goto	i2l3510
  6352                           
  6353                           ; BSR set to: 0
  6354                           ;my_i2c.c: 150: msg_ready = 1;
  6355  000190  0E01               	movlw	1
  6356  000192  0100               	movlb	0	; () banked
  6357  000194  6F87               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6358                           
  6359                           ;my_i2c.c: 151: } else {
  6360  000196  D146               	goto	L6
  6361  000198                     i2l3510:
  6362                           
  6363                           ; BSR set to: 0
  6364                           ;my_i2c.c: 152: ic_ptr->error_count++;
  6365  000198  0100               	movlb	0	; () banked
  6366  00019A  EE20 F00E          	lfsr	2,14
  6367  00019E  0100               	movlb	0	; () banked
  6368  0001A0  51C5               	movf	_ic_ptr& (0+255),w,b
  6369  0001A2  26D9               	addwf	fsr2l,f,c
  6370  0001A4  0100               	movlb	0	; () banked
  6371  0001A6  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6372  0001A8  22DA               	addwfc	fsr2h,f,c
  6373  0001AA  2ADF               	incf	indf2,f,c
  6374                           
  6375                           ;my_i2c.c: 153: ic_ptr->error_code = 0x6;
  6376  0001AC  0100               	movlb	0	; () banked
  6377  0001AE  EE20 F00D          	lfsr	2,13
  6378  0001B2  0100               	movlb	0	; () banked
  6379  0001B4  51C5               	movf	_ic_ptr& (0+255),w,b
  6380  0001B6  26D9               	addwf	fsr2l,f,c
  6381  0001B8  0100               	movlb	0	; () banked
  6382  0001BA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6383  0001BC  22DA               	addwfc	fsr2h,f,c
  6384  0001BE  0E06               	movlw	6
  6385  0001C0  6EDF               	movwf	indf2,c
  6386                           
  6387                           ; BSR set to: 0
  6388  0001C2  D130               	goto	L6
  6389  0001C4                     i2l3512:
  6390                           
  6391                           ; BSR set to: 0
  6392  0001C4  0100               	movlb	0	; () banked
  6393  0001C6  5188               	movf	i2c_int_handler@data_read& (0+255),w,b
  6394  0001C8  B4D8               	btfsc	status,2,c
  6395  0001CA  D14D               	goto	i2l192
  6396                           
  6397                           ; BSR set to: 0
  6398                           ;my_i2c.c: 158: ic_ptr->event_count++;
  6399  0001CC  0100               	movlb	0	; () banked
  6400  0001CE  EE20 F00B          	lfsr	2,11
  6401  0001D2  0100               	movlb	0	; () banked
  6402  0001D4  51C5               	movf	_ic_ptr& (0+255),w,b
  6403  0001D6  26D9               	addwf	fsr2l,f,c
  6404  0001D8  0100               	movlb	0	; () banked
  6405  0001DA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6406  0001DC  22DA               	addwfc	fsr2h,f,c
  6407  0001DE  2ADF               	incf	indf2,f,c
  6408                           
  6409                           ; BSR set to: 0
  6410                           ;my_i2c.c: 159: if (SSPSTATbits.D_A == 0) {
  6411  0001E0  BAC7               	btfsc	4039,5,c	;volatile
  6412  0001E2  D019               	goto	i2l3528
  6413                           
  6414                           ; BSR set to: 0
  6415                           ;my_i2c.c: 160: if (SSPSTATbits.R_W == 0) {
  6416  0001E4  B4C7               	btfsc	4039,2,c	;volatile
  6417  0001E6  D00B               	goto	i2l3522
  6418                           
  6419                           ; BSR set to: 0
  6420                           ;my_i2c.c: 161: ic_ptr->status = 0x7;
  6421  0001E8  0100               	movlb	0	; () banked
  6422  0001EA  EE20 F00C          	lfsr	2,12
  6423  0001EE  0100               	movlb	0	; () banked
  6424  0001F0  51C5               	movf	_ic_ptr& (0+255),w,b
  6425  0001F2  26D9               	addwf	fsr2l,f,c
  6426  0001F4  0100               	movlb	0	; () banked
  6427  0001F6  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6428  0001F8  22DA               	addwfc	fsr2h,f,c
  6429  0001FA  0E07               	movlw	7
  6430  0001FC  D06D               	goto	L4
  6431  0001FE                     i2l3522:
  6432                           
  6433                           ; BSR set to: 0
  6434                           ;my_i2c.c: 163: ic_ptr->status = 0x8;
  6435  0001FE  0100               	movlb	0	; () banked
  6436  000200  EE20 F00C          	lfsr	2,12
  6437  000204  0100               	movlb	0	; () banked
  6438  000206  51C5               	movf	_ic_ptr& (0+255),w,b
  6439  000208  26D9               	addwf	fsr2l,f,c
  6440  00020A  0100               	movlb	0	; () banked
  6441  00020C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6442  00020E  22DA               	addwfc	fsr2h,f,c
  6443  000210  0E08               	movlw	8
  6444  000212  6EDF               	movwf	indf2,c
  6445  000214  D100               	goto	L3
  6446  000216                     i2l3528:
  6447                           
  6448                           ; BSR set to: 0
  6449                           ;my_i2c.c: 169: ic_ptr->error_count++;
  6450  000216  0100               	movlb	0	; () banked
  6451  000218  EE20 F00E          	lfsr	2,14
  6452  00021C  0100               	movlb	0	; () banked
  6453  00021E  51C5               	movf	_ic_ptr& (0+255),w,b
  6454  000220  26D9               	addwf	fsr2l,f,c
  6455  000222  0100               	movlb	0	; () banked
  6456  000224  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6457  000226  22DA               	addwfc	fsr2h,f,c
  6458  000228  2ADF               	incf	indf2,f,c
  6459                           
  6460                           ;my_i2c.c: 170: ic_ptr->status = 0x5;
  6461  00022A  0100               	movlb	0	; () banked
  6462  00022C  EE20 F00C          	lfsr	2,12
  6463  000230  0100               	movlb	0	; () banked
  6464  000232  51C5               	movf	_ic_ptr& (0+255),w,b
  6465  000234  26D9               	addwf	fsr2l,f,c
  6466  000236  0100               	movlb	0	; () banked
  6467  000238  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6468  00023A  22DA               	addwfc	fsr2h,f,c
  6469  00023C  0E05               	movlw	5
  6470  00023E  6EDF               	movwf	indf2,c
  6471                           
  6472                           ;my_i2c.c: 171: ic_ptr->error_code = 0x6;
  6473  000240  0100               	movlb	0	; () banked
  6474  000242  EE20 F00D          	lfsr	2,13
  6475  000246  0100               	movlb	0	; () banked
  6476  000248  51C5               	movf	_ic_ptr& (0+255),w,b
  6477  00024A  26D9               	addwf	fsr2l,f,c
  6478  00024C  0100               	movlb	0	; () banked
  6479  00024E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6480  000250  22DA               	addwfc	fsr2h,f,c
  6481  000252  0E06               	movlw	6
  6482  000254  D041               	goto	L4
  6483  000256                     i2l3530:
  6484                           
  6485                           ; BSR set to: 0
  6486                           ;my_i2c.c: 177: {
  6487                           ;my_i2c.c: 178: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  6488  000256  0100               	movlb	0	; () banked
  6489  000258  EE20 F01A          	lfsr	2,26
  6490  00025C  0100               	movlb	0	; () banked
  6491  00025E  51C5               	movf	_ic_ptr& (0+255),w,b
  6492  000260  26D9               	addwf	fsr2l,f,c
  6493  000262  0100               	movlb	0	; () banked
  6494  000264  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6495  000266  22DA               	addwfc	fsr2h,f,c
  6496  000268  50DF               	movf	indf2,w,c
  6497  00026A  6E48               	movwf	??_i2c_int_handler& (0+255),c
  6498  00026C  0100               	movlb	0	; () banked
  6499  00026E  EE20 F019          	lfsr	2,25
  6500  000272  0100               	movlb	0	; () banked
  6501  000274  51C5               	movf	_ic_ptr& (0+255),w,b
  6502  000276  26D9               	addwf	fsr2l,f,c
  6503  000278  0100               	movlb	0	; () banked
  6504  00027A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6505  00027C  22DA               	addwfc	fsr2h,f,c
  6506  00027E  50DF               	movf	indf2,w,c
  6507  000280  5C48               	subwf	??_i2c_int_handler,w,c
  6508  000282  B0D8               	btfsc	status,0,c
  6509  000284  D0CF               	goto	L6
  6510                           
  6511                           ; BSR set to: 0
  6512                           ;my_i2c.c: 179: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  6513  000286  0100               	movlb	0	; () banked
  6514  000288  EE20 F01A          	lfsr	2,26
  6515  00028C  0100               	movlb	0	; () banked
  6516  00028E  51C5               	movf	_ic_ptr& (0+255),w,b
  6517  000290  26D9               	addwf	fsr2l,f,c
  6518  000292  0100               	movlb	0	; () banked
  6519  000294  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6520  000296  22DA               	addwfc	fsr2h,f,c
  6521  000298  50DF               	movf	indf2,w,c
  6522  00029A  6E48               	movwf	??_i2c_int_handler& (0+255),c
  6523  00029C  5048               	movf	??_i2c_int_handler,w,c
  6524  00029E  0D01               	mullw	1
  6525  0002A0  0E0F               	movlw	15
  6526  0002A2  26F3               	addwf	prodl,f,c
  6527  0002A4  0E00               	movlw	0
  6528  0002A6  22F4               	addwfc	prodh,f,c
  6529  0002A8  50F3               	movf	prodl,w,c
  6530  0002AA  0100               	movlb	0	; () banked
  6531  0002AC  25C5               	addwf	_ic_ptr& (0+255),w,b
  6532  0002AE  6ED9               	movwf	fsr2l,c
  6533  0002B0  50F4               	movf	prodh,w,c
  6534  0002B2  0100               	movlb	0	; () banked
  6535  0002B4  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6536  0002B6  6EDA               	movwf	fsr2h,c
  6537  0002B8  50DF               	movf	indf2,w,c
  6538  0002BA  6EC9               	movwf	4041,c	;volatile
  6539                           
  6540                           ; BSR set to: 0
  6541                           ;my_i2c.c: 180: ic_ptr->outbufind++;
  6542  0002BC  0100               	movlb	0	; () banked
  6543  0002BE  EE20 F01A          	lfsr	2,26
  6544  0002C2  0100               	movlb	0	; () banked
  6545  0002C4  51C5               	movf	_ic_ptr& (0+255),w,b
  6546  0002C6  26D9               	addwf	fsr2l,f,c
  6547  0002C8  0100               	movlb	0	; () banked
  6548  0002CA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6549  0002CC  22DA               	addwfc	fsr2h,f,c
  6550  0002CE  2ADF               	incf	indf2,f,c
  6551                           
  6552                           ; BSR set to: 0
  6553                           ;my_i2c.c: 181: data_written = 1;
  6554  0002D0  0E01               	movlw	1
  6555  0002D2  0100               	movlb	0	; () banked
  6556  0002D4  6F83               	movwf	i2c_int_handler@data_written& (0+255),b
  6557                           
  6558                           ;my_i2c.c: 182: } else {
  6559  0002D6  D0C7               	goto	i2l192
  6560  0002D8                     L4:
  6561  0002D8  6EDF               	movwf	indf2,c
  6562  0002DA  D0C5               	goto	i2l192
  6563  0002DC                     i2l212:
  6564                           
  6565                           ; BSR set to: 0
  6566                           ;my_i2c.c: 189: {
  6567                           ;my_i2c.c: 191: if (SSPSTATbits.P == 1) {
  6568  0002DC  A8C7               	btfss	4039,4,c	;volatile
  6569  0002DE  D058               	goto	i2l3558
  6570                           
  6571                           ; BSR set to: 0
  6572                           ;my_i2c.c: 193: ic_ptr->event_count++;
  6573  0002E0  0100               	movlb	0	; () banked
  6574  0002E2  EE20 F00B          	lfsr	2,11
  6575  0002E6  0100               	movlb	0	; () banked
  6576  0002E8  51C5               	movf	_ic_ptr& (0+255),w,b
  6577  0002EA  26D9               	addwf	fsr2l,f,c
  6578  0002EC  0100               	movlb	0	; () banked
  6579  0002EE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6580  0002F0  22DA               	addwfc	fsr2h,f,c
  6581  0002F2  2ADF               	incf	indf2,f,c
  6582                           
  6583                           ; BSR set to: 0
  6584                           ;my_i2c.c: 194: if (data_read) {
  6585  0002F4  0100               	movlb	0	; () banked
  6586  0002F6  5188               	movf	i2c_int_handler@data_read& (0+255),w,b
  6587  0002F8  B4D8               	btfsc	status,2,c
  6588  0002FA  D046               	goto	i2l3554
  6589                           
  6590                           ; BSR set to: 0
  6591                           ;my_i2c.c: 195: if (SSPSTATbits.D_A == 1) {
  6592  0002FC  AAC7               	btfss	4039,5,c	;volatile
  6593  0002FE  D023               	goto	i2l3552
  6594                           
  6595                           ; BSR set to: 0
  6596                           ;my_i2c.c: 196: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6597  000300  0100               	movlb	0	; () banked
  6598  000302  EE20 F00A          	lfsr	2,10
  6599  000306  0100               	movlb	0	; () banked
  6600  000308  51C5               	movf	_ic_ptr& (0+255),w,b
  6601  00030A  26D9               	addwf	fsr2l,f,c
  6602  00030C  0100               	movlb	0	; () banked
  6603  00030E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6604  000310  22DA               	addwfc	fsr2h,f,c
  6605  000312  50DF               	movf	indf2,w,c
  6606  000314  6E48               	movwf	??_i2c_int_handler& (0+255),c
  6607  000316  5048               	movf	??_i2c_int_handler,w,c
  6608  000318  0D01               	mullw	1
  6609  00031A  50F3               	movf	prodl,w,c
  6610  00031C  0100               	movlb	0	; () banked
  6611  00031E  25C5               	addwf	_ic_ptr& (0+255),w,b
  6612  000320  6ED9               	movwf	fsr2l,c
  6613  000322  50F4               	movf	prodh,w,c
  6614  000324  0100               	movlb	0	; () banked
  6615  000326  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6616  000328  6EDA               	movwf	fsr2h,c
  6617  00032A  0100               	movlb	0	; () banked
  6618  00032C  C085  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  6619                           
  6620                           ; BSR set to: 0
  6621                           ;my_i2c.c: 197: ic_ptr->buflen++;
  6622  000330  0100               	movlb	0	; () banked
  6623  000332  EE20 F00A          	lfsr	2,10
  6624  000336  0100               	movlb	0	; () banked
  6625  000338  51C5               	movf	_ic_ptr& (0+255),w,b
  6626  00033A  26D9               	addwf	fsr2l,f,c
  6627  00033C  0100               	movlb	0	; () banked
  6628  00033E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6629  000340  22DA               	addwfc	fsr2h,f,c
  6630  000342  2ADF               	incf	indf2,f,c
  6631  000344  D021               	goto	i2l3554
  6632  000346                     i2l3552:
  6633                           
  6634                           ; BSR set to: 0
  6635                           ;my_i2c.c: 200: ic_ptr->error_count++;
  6636  000346  0100               	movlb	0	; () banked
  6637  000348  EE20 F00E          	lfsr	2,14
  6638  00034C  0100               	movlb	0	; () banked
  6639  00034E  51C5               	movf	_ic_ptr& (0+255),w,b
  6640  000350  26D9               	addwf	fsr2l,f,c
  6641  000352  0100               	movlb	0	; () banked
  6642  000354  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6643  000356  22DA               	addwfc	fsr2h,f,c
  6644  000358  2ADF               	incf	indf2,f,c
  6645                           
  6646                           ;my_i2c.c: 201: ic_ptr->error_code = 0x6;
  6647  00035A  0100               	movlb	0	; () banked
  6648  00035C  EE20 F00D          	lfsr	2,13
  6649  000360  0100               	movlb	0	; () banked
  6650  000362  51C5               	movf	_ic_ptr& (0+255),w,b
  6651  000364  26D9               	addwf	fsr2l,f,c
  6652  000366  0100               	movlb	0	; () banked
  6653  000368  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6654  00036A  22DA               	addwfc	fsr2h,f,c
  6655  00036C  0E06               	movlw	6
  6656  00036E  6EDF               	movwf	indf2,c
  6657                           
  6658                           ;my_i2c.c: 202: ic_ptr->status = 0x5;
  6659  000370  0100               	movlb	0	; () banked
  6660  000372  EE20 F00C          	lfsr	2,12
  6661  000376  0100               	movlb	0	; () banked
  6662  000378  51C5               	movf	_ic_ptr& (0+255),w,b
  6663  00037A  26D9               	addwf	fsr2l,f,c
  6664  00037C  0100               	movlb	0	; () banked
  6665  00037E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6666  000380  22DA               	addwfc	fsr2h,f,c
  6667  000382  0E05               	movlw	5
  6668  000384  6EDF               	movwf	indf2,c
  6669  000386  D04E               	goto	L6
  6670  000388                     i2l3554:
  6671                           
  6672                           ; BSR set to: 0
  6673                           ;my_i2c.c: 205: msg_ready = 1;
  6674  000388  0E01               	movlw	1
  6675  00038A  0100               	movlb	0	; () banked
  6676  00038C  6F87               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6677                           
  6678                           ; BSR set to: 0
  6679  00038E  D04A               	goto	L6
  6680  000390                     i2l3558:
  6681                           
  6682                           ; BSR set to: 0
  6683  000390  0100               	movlb	0	; () banked
  6684  000392  5188               	movf	i2c_int_handler@data_read& (0+255),w,b
  6685  000394  B4D8               	btfsc	status,2,c
  6686  000396  D067               	goto	i2l192
  6687                           
  6688                           ; BSR set to: 0
  6689                           ;my_i2c.c: 209: ic_ptr->event_count++;
  6690  000398  0100               	movlb	0	; () banked
  6691  00039A  EE20 F00B          	lfsr	2,11
  6692  00039E  0100               	movlb	0	; () banked
  6693  0003A0  51C5               	movf	_ic_ptr& (0+255),w,b
  6694  0003A2  26D9               	addwf	fsr2l,f,c
  6695  0003A4  0100               	movlb	0	; () banked
  6696  0003A6  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6697  0003A8  22DA               	addwfc	fsr2h,f,c
  6698  0003AA  2ADF               	incf	indf2,f,c
  6699                           
  6700                           ; BSR set to: 0
  6701                           ;my_i2c.c: 210: if (SSPSTATbits.D_A == 1) {
  6702  0003AC  AAC7               	btfss	4039,5,c	;volatile
  6703  0003AE  D023               	goto	i2l220
  6704                           
  6705                           ; BSR set to: 0
  6706                           ;my_i2c.c: 211: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6707  0003B0  0100               	movlb	0	; () banked
  6708  0003B2  EE20 F00A          	lfsr	2,10
  6709  0003B6  0100               	movlb	0	; () banked
  6710  0003B8  51C5               	movf	_ic_ptr& (0+255),w,b
  6711  0003BA  26D9               	addwf	fsr2l,f,c
  6712  0003BC  0100               	movlb	0	; () banked
  6713  0003BE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6714  0003C0  22DA               	addwfc	fsr2h,f,c
  6715  0003C2  50DF               	movf	indf2,w,c
  6716  0003C4  6E48               	movwf	??_i2c_int_handler& (0+255),c
  6717  0003C6  5048               	movf	??_i2c_int_handler,w,c
  6718  0003C8  0D01               	mullw	1
  6719  0003CA  50F3               	movf	prodl,w,c
  6720  0003CC  0100               	movlb	0	; () banked
  6721  0003CE  25C5               	addwf	_ic_ptr& (0+255),w,b
  6722  0003D0  6ED9               	movwf	fsr2l,c
  6723  0003D2  50F4               	movf	prodh,w,c
  6724  0003D4  0100               	movlb	0	; () banked
  6725  0003D6  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6726  0003D8  6EDA               	movwf	fsr2h,c
  6727  0003DA  0100               	movlb	0	; () banked
  6728  0003DC  C085  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  6729                           
  6730                           ; BSR set to: 0
  6731                           ;my_i2c.c: 212: ic_ptr->buflen++;
  6732  0003E0  0100               	movlb	0	; () banked
  6733  0003E2  EE20 F00A          	lfsr	2,10
  6734  0003E6  0100               	movlb	0	; () banked
  6735  0003E8  51C5               	movf	_ic_ptr& (0+255),w,b
  6736  0003EA  26D9               	addwf	fsr2l,f,c
  6737  0003EC  0100               	movlb	0	; () banked
  6738  0003EE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6739  0003F0  22DA               	addwfc	fsr2h,f,c
  6740  0003F2  2ADF               	incf	indf2,f,c
  6741                           
  6742                           ;my_i2c.c: 213: } else {
  6743  0003F4  D038               	goto	i2l192
  6744  0003F6                     i2l220:
  6745                           
  6746                           ; BSR set to: 0
  6747                           ;my_i2c.c: 214: if (SSPSTATbits.R_W == 1) {
  6748  0003F6  A4C7               	btfss	4039,2,c	;volatile
  6749  0003F8  D6CF               	goto	i2l3510
  6750                           
  6751                           ; BSR set to: 0
  6752                           ;my_i2c.c: 215: ic_ptr->status = 0x8;
  6753  0003FA  0100               	movlb	0	; () banked
  6754  0003FC  EE20 F00C          	lfsr	2,12
  6755  000400  0100               	movlb	0	; () banked
  6756  000402  51C5               	movf	_ic_ptr& (0+255),w,b
  6757  000404  26D9               	addwf	fsr2l,f,c
  6758  000406  0100               	movlb	0	; () banked
  6759  000408  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6760  00040A  22DA               	addwfc	fsr2h,f,c
  6761  00040C  0E08               	movlw	8
  6762  00040E  6EDF               	movwf	indf2,c
  6763                           
  6764                           ; BSR set to: 0
  6765                           ;my_i2c.c: 216: msg_ready = 1;
  6766  000410  0E01               	movlw	1
  6767  000412  0100               	movlb	0	; () banked
  6768  000414  6F87               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6769  000416                     L3:
  6770                           
  6771                           ; BSR set to: 0
  6772                           ;my_i2c.c: 217: msg_to_send = 1;
  6773  000416  0E01               	movlw	1
  6774  000418  0100               	movlb	0	; () banked
  6775  00041A  6F86               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6776                           
  6777                           ; BSR set to: 0
  6778                           ;my_i2c.c: 219: data_read = 0;
  6779  00041C  0E00               	movlw	0
  6780  00041E  0100               	movlb	0	; () banked
  6781  000420  6F88               	movwf	i2c_int_handler@data_read& (0+255),b
  6782                           
  6783                           ;my_i2c.c: 220: } else {
  6784  000422  D021               	goto	i2l192
  6785  000424                     L6:
  6786                           
  6787                           ;my_i2c.c: 223: ic_ptr->status = 0x5;
  6788  000424  0100               	movlb	0	; () banked
  6789  000426  EE20 F00C          	lfsr	2,12
  6790  00042A  0100               	movlb	0	; () banked
  6791  00042C  51C5               	movf	_ic_ptr& (0+255),w,b
  6792  00042E  26D9               	addwf	fsr2l,f,c
  6793  000430  0100               	movlb	0	; () banked
  6794  000432  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6795  000434  22DA               	addwfc	fsr2h,f,c
  6796  000436  0E05               	movlw	5
  6797  000438  D74F               	goto	L4
  6798  00043A                     i2l3580:
  6799                           
  6800                           ; BSR set to: 0
  6801  00043A  0100               	movlb	0	; () banked
  6802  00043C  EE20 F00C          	lfsr	2,12
  6803  000440  0100               	movlb	0	; () banked
  6804  000442  51C5               	movf	_ic_ptr& (0+255),w,b
  6805  000444  26D9               	addwf	fsr2l,f,c
  6806  000446  0100               	movlb	0	; () banked
  6807  000448  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6808  00044A  22DA               	addwfc	fsr2h,f,c
  6809  00044C  50DF               	movf	indf2,w,c
  6810                           
  6811                           ; Switch size 1, requested type "space"
  6812                           ; Number of cases is 4, Range of values is 5 to 8
  6813                           ; switch strategies available:
  6814                           ; Name         Instructions Cycles
  6815                           ; simple_byte           13     7 (average)
  6816                           ;	Chosen strategy is simple_byte
  6817  00044E  0A05               	xorlw	5	; case 5
  6818  000450  B4D8               	btfsc	status,2,c
  6819  000452  D673               	goto	i2l194
  6820  000454  0A03               	xorlw	3	; case 6
  6821  000456  B4D8               	btfsc	status,2,c
  6822  000458  D689               	goto	i2l198
  6823  00045A  0A01               	xorlw	1	; case 7
  6824  00045C  B4D8               	btfsc	status,2,c
  6825  00045E  D73E               	goto	i2l212
  6826  000460  0A0F               	xorlw	15	; case 8
  6827  000462  B4D8               	btfsc	status,2,c
  6828  000464  D6F8               	goto	i2l3530
  6829  000466                     i2l192:
  6830                           
  6831                           ; BSR set to: 0
  6832                           ;my_i2c.c: 230: }
  6833                           ;my_i2c.c: 233: if (data_read || data_written) {
  6834  000466  0100               	movlb	0	; () banked
  6835  000468  6788               	tstfsz	i2c_int_handler@data_read& (0+255),b
  6836  00046A  D004               	goto	i2l226
  6837                           
  6838                           ; BSR set to: 0
  6839  00046C  0100               	movlb	0	; () banked
  6840  00046E  5183               	movf	i2c_int_handler@data_written& (0+255),w,b
  6841  000470  B4D8               	btfsc	status,2,c
  6842  000472  D002               	goto	i2l3586
  6843  000474                     i2l226:
  6844                           
  6845                           ; BSR set to: 0
  6846                           ;my_i2c.c: 235: if (SSPCON1bits.CKP == 0) {
  6847  000474  A8C6               	btfss	4038,4,c	;volatile
  6848                           
  6849                           ; BSR set to: 0
  6850                           ;my_i2c.c: 236: SSPCON1bits.CKP = 1;
  6851  000476  88C6               	bsf	4038,4,c	;volatile
  6852  000478                     i2l3586:
  6853                           
  6854                           ; BSR set to: 0
  6855                           ;my_i2c.c: 237: }
  6856                           ;my_i2c.c: 238: }
  6857                           ;my_i2c.c: 241: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  6858  000478  0100               	movlb	0	; () banked
  6859  00047A  EE20 F00A          	lfsr	2,10
  6860  00047E  0100               	movlb	0	; () banked
  6861  000480  51C5               	movf	_ic_ptr& (0+255),w,b
  6862  000482  26D9               	addwf	fsr2l,f,c
  6863  000484  0100               	movlb	0	; () banked
  6864  000486  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6865  000488  22DA               	addwfc	fsr2h,f,c
  6866  00048A  0E08               	movlw	8
  6867  00048C  64DF               	cpfsgt	indf2,c
  6868  00048E  D023               	goto	i2l3592
  6869                           
  6870                           ; BSR set to: 0
  6871  000490  0100               	movlb	0	; () banked
  6872  000492  6787               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  6873  000494  D020               	goto	i2l3592
  6874                           
  6875                           ; BSR set to: 0
  6876                           ;my_i2c.c: 242: ic_ptr->status = 0x5;
  6877  000496  0100               	movlb	0	; () banked
  6878  000498  EE20 F00C          	lfsr	2,12
  6879  00049C  0100               	movlb	0	; () banked
  6880  00049E  51C5               	movf	_ic_ptr& (0+255),w,b
  6881  0004A0  26D9               	addwf	fsr2l,f,c
  6882  0004A2  0100               	movlb	0	; () banked
  6883  0004A4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6884  0004A6  22DA               	addwfc	fsr2h,f,c
  6885  0004A8  0E05               	movlw	5
  6886  0004AA  6EDF               	movwf	indf2,c
  6887                           
  6888                           ;my_i2c.c: 243: ic_ptr->error_count++;
  6889  0004AC  0100               	movlb	0	; () banked
  6890  0004AE  EE20 F00E          	lfsr	2,14
  6891  0004B2  0100               	movlb	0	; () banked
  6892  0004B4  51C5               	movf	_ic_ptr& (0+255),w,b
  6893  0004B6  26D9               	addwf	fsr2l,f,c
  6894  0004B8  0100               	movlb	0	; () banked
  6895  0004BA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6896  0004BC  22DA               	addwfc	fsr2h,f,c
  6897  0004BE  2ADF               	incf	indf2,f,c
  6898                           
  6899                           ;my_i2c.c: 244: ic_ptr->error_code = 0x7;
  6900  0004C0  0100               	movlb	0	; () banked
  6901  0004C2  EE20 F00D          	lfsr	2,13
  6902  0004C6  0100               	movlb	0	; () banked
  6903  0004C8  51C5               	movf	_ic_ptr& (0+255),w,b
  6904  0004CA  26D9               	addwf	fsr2l,f,c
  6905  0004CC  0100               	movlb	0	; () banked
  6906  0004CE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6907  0004D0  22DA               	addwfc	fsr2h,f,c
  6908  0004D2  0E07               	movlw	7
  6909  0004D4  6EDF               	movwf	indf2,c
  6910  0004D6                     i2l3592:
  6911                           
  6912                           ; BSR set to: 0
  6913                           ;my_i2c.c: 245: }
  6914                           ;my_i2c.c: 247: if (msg_ready) {
  6915  0004D6  0100               	movlb	0	; () banked
  6916  0004D8  5187               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  6917  0004DA  B4D8               	btfsc	status,2,c
  6918  0004DC  D03A               	goto	i2l3600
  6919                           
  6920                           ; BSR set to: 0
  6921                           ;my_i2c.c: 248: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  6922  0004DE  0100               	movlb	0	; () banked
  6923  0004E0  EE20 F00B          	lfsr	2,11
  6924  0004E4  0100               	movlb	0	; () banked
  6925  0004E6  51C5               	movf	_ic_ptr& (0+255),w,b
  6926  0004E8  26D9               	addwf	fsr2l,f,c
  6927  0004EA  0100               	movlb	0	; () banked
  6928  0004EC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6929  0004EE  22DA               	addwfc	fsr2h,f,c
  6930  0004F0  0100               	movlb	0	; () banked
  6931  0004F2  EE10 F00A          	lfsr	1,10
  6932  0004F6  0100               	movlb	0	; () banked
  6933  0004F8  51C5               	movf	_ic_ptr& (0+255),w,b
  6934  0004FA  26E1               	addwf	fsr1l,f,c
  6935  0004FC  0100               	movlb	0	; () banked
  6936  0004FE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6937  000500  22E2               	addwfc	fsr1h,f,c
  6938  000502  50E7               	movf	indf1,w,c
  6939  000504  6E48               	movwf	??_i2c_int_handler& (0+255),c
  6940  000506  5048               	movf	??_i2c_int_handler,w,c
  6941  000508  0D01               	mullw	1
  6942  00050A  50F3               	movf	prodl,w,c
  6943  00050C  0100               	movlb	0	; () banked
  6944  00050E  25C5               	addwf	_ic_ptr& (0+255),w,b
  6945  000510  6EE1               	movwf	fsr1l,c
  6946  000512  50F4               	movf	prodh,w,c
  6947  000514  0100               	movlb	0	; () banked
  6948  000516  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6949  000518  6EE2               	movwf	fsr1h,c
  6950  00051A  CFDF FFE7          	movff	indf2,indf1
  6951                           
  6952                           ; BSR set to: 0
  6953                           ;my_i2c.c: 249: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  6954  00051E  0E28               	movlw	40
  6955  000520  6E44               	movwf	ToMainHigh_sendmsg@msgtype,c
  6956  000522  0100               	movlb	0	; () banked
  6957  000524  C0C6  F046         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  6958  000528  0100               	movlb	0	; () banked
  6959  00052A  C0C5  F045         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  6960  00052E  0100               	movlb	0	; () banked
  6961  000530  EE20 F00A          	lfsr	2,10
  6962  000534  0100               	movlb	0	; () banked
  6963  000536  51C5               	movf	_ic_ptr& (0+255),w,b
  6964  000538  26D9               	addwf	fsr2l,f,c
  6965  00053A  0100               	movlb	0	; () banked
  6966  00053C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6967  00053E  22DA               	addwfc	fsr2h,f,c
  6968  000540  50DF               	movf	indf2,w,c
  6969  000542  6E48               	movwf	??_i2c_int_handler& (0+255),c
  6970  000544  2848               	incf	??_i2c_int_handler,w,c
  6971  000546  ECE6  F00E         	call	_ToMainHigh_sendmsg
  6972                           
  6973                           ;my_i2c.c: 250: ic_ptr->buflen = 0;
  6974  00054A  0100               	movlb	0	; () banked
  6975  00054C  EE20 F00A          	lfsr	2,10
  6976  000550  D03E               	goto	L5
  6977  000552                     i2l3600:
  6978                           
  6979                           ; BSR set to: 0
  6980  000552  0100               	movlb	0	; () banked
  6981  000554  EE20 F00E          	lfsr	2,14
  6982  000558  0100               	movlb	0	; () banked
  6983  00055A  51C5               	movf	_ic_ptr& (0+255),w,b
  6984  00055C  26D9               	addwf	fsr2l,f,c
  6985  00055E  0100               	movlb	0	; () banked
  6986  000560  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  6987  000562  22DA               	addwfc	fsr2h,f,c
  6988  000564  50DF               	movf	indf2,w,c
  6989  000566  B4D8               	btfsc	status,2,c
  6990  000568  D03A               	goto	i2l3608
  6991                           
  6992                           ; BSR set to: 0
  6993                           ;my_i2c.c: 252: error_buf[0] = ic_ptr->error_count;
  6994  00056A  0100               	movlb	0	; () banked
  6995  00056C  EE20 F00E          	lfsr	2,14
  6996  000570  0100               	movlb	0	; () banked
  6997  000572  51C5               	movf	_ic_ptr& (0+255),w,b
  6998  000574  26D9               	addwf	fsr2l,f,c
  6999  000576  0100               	movlb	0	; () banked
  7000  000578  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7001  00057A  22DA               	addwfc	fsr2h,f,c
  7002  00057C  50DF               	movf	indf2,w,c
  7003  00057E  0100               	movlb	0	; () banked
  7004  000580  6F80               	movwf	i2c_int_handler@error_buf& (0+255),b
  7005                           
  7006                           ;my_i2c.c: 253: error_buf[1] = ic_ptr->error_code;
  7007  000582  0100               	movlb	0	; () banked
  7008  000584  EE20 F00D          	lfsr	2,13
  7009  000588  0100               	movlb	0	; () banked
  7010  00058A  51C5               	movf	_ic_ptr& (0+255),w,b
  7011  00058C  26D9               	addwf	fsr2l,f,c
  7012  00058E  0100               	movlb	0	; () banked
  7013  000590  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7014  000592  22DA               	addwfc	fsr2h,f,c
  7015  000594  50DF               	movf	indf2,w,c
  7016  000596  0100               	movlb	0	; () banked
  7017  000598  6F81               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7018                           
  7019                           ;my_i2c.c: 254: error_buf[2] = ic_ptr->event_count;
  7020  00059A  0100               	movlb	0	; () banked
  7021  00059C  EE20 F00B          	lfsr	2,11
  7022  0005A0  0100               	movlb	0	; () banked
  7023  0005A2  51C5               	movf	_ic_ptr& (0+255),w,b
  7024  0005A4  26D9               	addwf	fsr2l,f,c
  7025  0005A6  0100               	movlb	0	; () banked
  7026  0005A8  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7027  0005AA  22DA               	addwfc	fsr2h,f,c
  7028  0005AC  50DF               	movf	indf2,w,c
  7029  0005AE  0100               	movlb	0	; () banked
  7030  0005B0  6F82               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  7031                           
  7032                           ; BSR set to: 0
  7033                           ;my_i2c.c: 255: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7034  0005B2  0E29               	movlw	41
  7035  0005B4  6E44               	movwf	ToMainHigh_sendmsg@msgtype,c
  7036  0005B6  0100               	movlb	0	; () banked
  7037  0005B8  0E00               	movlw	high i2c_int_handler@error_buf
  7038  0005BA  6E46               	movwf	ToMainHigh_sendmsg@data+1,c
  7039  0005BC  0100               	movlb	0	; () banked
  7040  0005BE  0E80               	movlw	low i2c_int_handler@error_buf
  7041  0005C0  6E45               	movwf	ToMainHigh_sendmsg@data,c
  7042  0005C2  0E03               	movlw	3
  7043  0005C4  ECE6  F00E         	call	_ToMainHigh_sendmsg
  7044                           
  7045                           ;my_i2c.c: 256: ic_ptr->error_count = 0;
  7046  0005C8  0100               	movlb	0	; () banked
  7047  0005CA  EE20 F00E          	lfsr	2,14
  7048  0005CE                     L5:
  7049  0005CE  0100               	movlb	0	; () banked
  7050  0005D0  51C5               	movf	_ic_ptr& (0+255),w,b
  7051  0005D2  26D9               	addwf	fsr2l,f,c
  7052  0005D4  0100               	movlb	0	; () banked
  7053  0005D6  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7054  0005D8  22DA               	addwfc	fsr2h,f,c
  7055  0005DA  0E00               	movlw	0
  7056  0005DC  6EDF               	movwf	indf2,c
  7057  0005DE                     i2l3608:
  7058                           
  7059                           ; BSR set to: 0
  7060                           ;my_i2c.c: 257: }
  7061                           ;my_i2c.c: 258: if (msg_to_send) {
  7062  0005DE  0100               	movlb	0	; () banked
  7063  0005E0  5186               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  7064  0005E2  B4D8               	btfsc	status,2,c
  7065  0005E4  0012               	return	
  7066                           
  7067                           ; BSR set to: 0
  7068                           ;my_i2c.c: 260: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  7069  0005E6  0E2A               	movlw	42
  7070  0005E8  6E44               	movwf	ToMainHigh_sendmsg@msgtype,c
  7071  0005EA  0100               	movlb	0	; () banked
  7072  0005EC  C0C6  F046         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7073  0005F0  0100               	movlb	0	; () banked
  7074  0005F2  C0C5  F045         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7075  0005F6  0E00               	movlw	0
  7076  0005F8  ECE6  F00E         	call	_ToMainHigh_sendmsg
  7077                           
  7078                           ;my_i2c.c: 261: msg_to_send = 0;
  7079  0005FC  0E00               	movlw	0
  7080  0005FE  0100               	movlb	0	; () banked
  7081  000600  6F86               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7082  000602  0012               	return	
  7083  000604                     __end_of_i2c_int_handler:
  7084                           	opt stack 0
  7085                           pclatu	equ	0xFFB
  7086                           pclath	equ	0xFFA
  7087                           tblptru	equ	0xFF8
  7088                           tblptrh	equ	0xFF7
  7089                           tblptrl	equ	0xFF6
  7090                           tablat	equ	0xFF5
  7091                           prodh	equ	0xFF4
  7092                           prodl	equ	0xFF3
  7093                           intcon	equ	0xFF2
  7094                           postinc0	equ	0xFEE
  7095                           fsr0h	equ	0xFEA
  7096                           fsr0l	equ	0xFE9
  7097                           wreg	equ	0xFE8
  7098                           indf1	equ	0xFE7
  7099                           fsr1h	equ	0xFE2
  7100                           fsr1l	equ	0xFE1
  7101                           bsr	equ	0xFE0
  7102                           indf2	equ	0xFDF
  7103                           postinc2	equ	0xFDE
  7104                           postdec2	equ	0xFDD
  7105                           fsr2h	equ	0xFDA
  7106                           fsr2l	equ	0xFD9
  7107                           status	equ	0xFD8
  7108                           
  7109 ;; *************** function _handle_start *****************
  7110 ;; Defined at:
  7111 ;;		line 71 in file "../src/my_i2c.c"
  7112 ;; Parameters:    Size  Location     Type
  7113 ;;  data_read       1    wreg     unsigned char 
  7114 ;; Auto vars:     Size  Location     Type
  7115 ;;  data_read       1   45[COMRAM] unsigned char 
  7116 ;; Return value:  Size  Location     Type
  7117 ;;		None               void
  7118 ;; Registers used:
  7119 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7120 ;; Tracked objects:
  7121 ;;		On entry : 0/0
  7122 ;;		On exit  : 0/0
  7123 ;;		Unchanged: 0/0
  7124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7125 ;;      Params:         0       0       0       0       0
  7126 ;;      Locals:         1       0       0       0       0
  7127 ;;      Temps:          0       0       0       0       0
  7128 ;;      Totals:         1       0       0       0       0
  7129 ;;Total ram usage:        1 bytes
  7130 ;; Hardware stack levels used:    1
  7131 ;; This function calls:
  7132 ;;		Nothing
  7133 ;; This function is called by:
  7134 ;;		_i2c_int_handler
  7135 ;; This function uses a non-reentrant model
  7136 ;;
  7137                           
  7138                           	psect	text44
  7139  001332                     __ptext44:
  7140                           	opt stack 0
  7141  001332                     _handle_start:
  7142                           	opt stack 19
  7143                           
  7144                           ; BSR set to: 0
  7145                           ;incstack = 0
  7146                           ;handle_start@data_read stored from wreg
  7147  001332  6E2E               	movwf	handle_start@data_read,c
  7148                           
  7149                           ;my_i2c.c: 72: ic_ptr->event_count = 1;
  7150  001334  0100               	movlb	0	; () banked
  7151  001336  EE20 F00B          	lfsr	2,11
  7152  00133A  0100               	movlb	0	; () banked
  7153  00133C  51C5               	movf	_ic_ptr& (0+255),w,b
  7154  00133E  26D9               	addwf	fsr2l,f,c
  7155  001340  0100               	movlb	0	; () banked
  7156  001342  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7157  001344  22DA               	addwfc	fsr2h,f,c
  7158  001346  0E01               	movlw	1
  7159  001348  6EDF               	movwf	indf2,c
  7160                           
  7161                           ;my_i2c.c: 73: ic_ptr->buflen = 0;
  7162  00134A  0100               	movlb	0	; () banked
  7163  00134C  EE20 F00A          	lfsr	2,10
  7164  001350  0100               	movlb	0	; () banked
  7165  001352  51C5               	movf	_ic_ptr& (0+255),w,b
  7166  001354  26D9               	addwf	fsr2l,f,c
  7167  001356  0100               	movlb	0	; () banked
  7168  001358  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7169  00135A  22DA               	addwfc	fsr2h,f,c
  7170  00135C  0E00               	movlw	0
  7171  00135E  6EDF               	movwf	indf2,c
  7172                           
  7173                           ; BSR set to: 0
  7174                           ;my_i2c.c: 75: if (data_read) {
  7175  001360  502E               	movf	handle_start@data_read,w,c
  7176  001362  B4D8               	btfsc	status,2,c
  7177  001364  D03D               	goto	i2l3452
  7178                           
  7179                           ; BSR set to: 0
  7180                           ;my_i2c.c: 76: if (SSPSTATbits.D_A == 1) {
  7181  001366  AAC7               	btfss	4039,5,c	;volatile
  7182  001368  D021               	goto	i2l182
  7183                           
  7184                           ; BSR set to: 0
  7185                           ;my_i2c.c: 79: ic_ptr->status = 0x5;
  7186  00136A  0100               	movlb	0	; () banked
  7187  00136C  EE20 F00C          	lfsr	2,12
  7188  001370  0100               	movlb	0	; () banked
  7189  001372  51C5               	movf	_ic_ptr& (0+255),w,b
  7190  001374  26D9               	addwf	fsr2l,f,c
  7191  001376  0100               	movlb	0	; () banked
  7192  001378  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7193  00137A  22DA               	addwfc	fsr2h,f,c
  7194  00137C  0E05               	movlw	5
  7195  00137E  6EDF               	movwf	indf2,c
  7196                           
  7197                           ;my_i2c.c: 80: ic_ptr->error_count++;
  7198  001380  0100               	movlb	0	; () banked
  7199  001382  EE20 F00E          	lfsr	2,14
  7200  001386  0100               	movlb	0	; () banked
  7201  001388  51C5               	movf	_ic_ptr& (0+255),w,b
  7202  00138A  26D9               	addwf	fsr2l,f,c
  7203  00138C  0100               	movlb	0	; () banked
  7204  00138E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7205  001390  22DA               	addwfc	fsr2h,f,c
  7206  001392  2ADF               	incf	indf2,f,c
  7207                           
  7208                           ;my_i2c.c: 81: ic_ptr->error_code = 0x5;
  7209  001394  0100               	movlb	0	; () banked
  7210  001396  EE20 F00D          	lfsr	2,13
  7211  00139A  0100               	movlb	0	; () banked
  7212  00139C  51C5               	movf	_ic_ptr& (0+255),w,b
  7213  00139E  26D9               	addwf	fsr2l,f,c
  7214  0013A0  0100               	movlb	0	; () banked
  7215  0013A2  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7216  0013A4  22DA               	addwfc	fsr2h,f,c
  7217  0013A6  0E05               	movlw	5
  7218  0013A8  6EDF               	movwf	indf2,c
  7219                           
  7220                           ;my_i2c.c: 82: } else {
  7221  0013AA  0012               	return	
  7222  0013AC                     i2l182:
  7223                           
  7224                           ; BSR set to: 0
  7225                           ;my_i2c.c: 83: if (SSPSTATbits.R_W == 1) {
  7226  0013AC  A4C7               	btfss	4039,2,c	;volatile
  7227  0013AE  D00C               	goto	i2l3450
  7228                           
  7229                           ; BSR set to: 0
  7230                           ;my_i2c.c: 84: ic_ptr->status = 0x8;
  7231  0013B0  0100               	movlb	0	; () banked
  7232  0013B2  EE20 F00C          	lfsr	2,12
  7233  0013B6  0100               	movlb	0	; () banked
  7234  0013B8  51C5               	movf	_ic_ptr& (0+255),w,b
  7235  0013BA  26D9               	addwf	fsr2l,f,c
  7236  0013BC  0100               	movlb	0	; () banked
  7237  0013BE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7238  0013C0  22DA               	addwfc	fsr2h,f,c
  7239  0013C2  0E08               	movlw	8
  7240  0013C4  6EDF               	movwf	indf2,c
  7241                           
  7242                           ;my_i2c.c: 85: } else {
  7243  0013C6  0012               	return	
  7244  0013C8                     i2l3450:
  7245                           
  7246                           ; BSR set to: 0
  7247                           ;my_i2c.c: 86: ic_ptr->status = 0x7;
  7248  0013C8  0100               	movlb	0	; () banked
  7249  0013CA  EE20 F00C          	lfsr	2,12
  7250  0013CE  0100               	movlb	0	; () banked
  7251  0013D0  51C5               	movf	_ic_ptr& (0+255),w,b
  7252  0013D2  26D9               	addwf	fsr2l,f,c
  7253  0013D4  0100               	movlb	0	; () banked
  7254  0013D6  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7255  0013D8  22DA               	addwfc	fsr2h,f,c
  7256  0013DA  0E07               	movlw	7
  7257  0013DC  6EDF               	movwf	indf2,c
  7258  0013DE  0012               	return	
  7259  0013E0                     i2l3452:
  7260                           
  7261                           ; BSR set to: 0
  7262                           ;my_i2c.c: 90: ic_ptr->status = 0x6;
  7263  0013E0  0100               	movlb	0	; () banked
  7264  0013E2  EE20 F00C          	lfsr	2,12
  7265  0013E6  0100               	movlb	0	; () banked
  7266  0013E8  51C5               	movf	_ic_ptr& (0+255),w,b
  7267  0013EA  26D9               	addwf	fsr2l,f,c
  7268  0013EC  0100               	movlb	0	; () banked
  7269  0013EE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7270  0013F0  22DA               	addwfc	fsr2h,f,c
  7271  0013F2  0E06               	movlw	6
  7272  0013F4  6EDF               	movwf	indf2,c
  7273  0013F6  0012               	return	
  7274  0013F8                     __end_of_handle_start:
  7275                           	opt stack 0
  7276                           pclatu	equ	0xFFB
  7277                           pclath	equ	0xFFA
  7278                           tblptru	equ	0xFF8
  7279                           tblptrh	equ	0xFF7
  7280                           tblptrl	equ	0xFF6
  7281                           tablat	equ	0xFF5
  7282                           prodh	equ	0xFF4
  7283                           prodl	equ	0xFF3
  7284                           intcon	equ	0xFF2
  7285                           postinc0	equ	0xFEE
  7286                           fsr0h	equ	0xFEA
  7287                           fsr0l	equ	0xFE9
  7288                           wreg	equ	0xFE8
  7289                           indf1	equ	0xFE7
  7290                           fsr1h	equ	0xFE2
  7291                           fsr1l	equ	0xFE1
  7292                           bsr	equ	0xFE0
  7293                           indf2	equ	0xFDF
  7294                           postinc2	equ	0xFDE
  7295                           postdec2	equ	0xFDD
  7296                           fsr2h	equ	0xFDA
  7297                           fsr2l	equ	0xFD9
  7298                           status	equ	0xFD8
  7299                           
  7300 ;; *************** function _ToMainHigh_sendmsg *****************
  7301 ;; Defined at:
  7302 ;;		line 126 in file "../src/messages.c"
  7303 ;; Parameters:    Size  Location     Type
  7304 ;;  length          1    wreg     unsigned char 
  7305 ;;  msgtype         1   67[COMRAM] unsigned char 
  7306 ;;  data            2   68[COMRAM] PTR void 
  7307 ;;		 -> main@ic(28), timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), 
  7308 ;;		 -> RAM(1023), 
  7309 ;; Auto vars:     Size  Location     Type
  7310 ;;  length          1   70[COMRAM] unsigned char 
  7311 ;; Return value:  Size  Location     Type
  7312 ;;                  1    wreg      char 
  7313 ;; Registers used:
  7314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7315 ;; Tracked objects:
  7316 ;;		On entry : 0/0
  7317 ;;		On exit  : 0/0
  7318 ;;		Unchanged: 0/0
  7319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7320 ;;      Params:         3       0       0       0       0
  7321 ;;      Locals:         1       0       0       0       0
  7322 ;;      Temps:          0       0       0       0       0
  7323 ;;      Totals:         4       0       0       0       0
  7324 ;;Total ram usage:        4 bytes
  7325 ;; Hardware stack levels used:    1
  7326 ;; Hardware stack levels required when called:    2
  7327 ;; This function calls:
  7328 ;;		i2_send_msg
  7329 ;; This function is called by:
  7330 ;;		_InterruptHandlerHigh
  7331 ;;		_i2c_int_handler
  7332 ;;		_timer0_int_handler
  7333 ;; This function uses a non-reentrant model
  7334 ;;
  7335                           
  7336                           	psect	text45
  7337  001DCC                     __ptext45:
  7338                           	opt stack 0
  7339  001DCC                     _ToMainHigh_sendmsg:
  7340                           	opt stack 17
  7341                           
  7342                           ; BSR set to: 0
  7343                           ;incstack = 0
  7344                           ;ToMainHigh_sendmsg@length stored from wreg
  7345  001DCC  6E47               	movwf	ToMainHigh_sendmsg@length,c
  7346                           
  7347                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  7348                           ;	Return value of _ToMainHigh_sendmsg is never used
  7349  001DCE  0101               	movlb	1	; () banked
  7350  001DD0  0E01               	movlw	high _ToMainHigh_MQ
  7351  001DD2  6E39               	movwf	i2send_msg@qptr+1,c
  7352  001DD4  0101               	movlb	1	; () banked
  7353  001DD6  0E36               	movlw	low _ToMainHigh_MQ
  7354  001DD8  6E38               	movwf	i2send_msg@qptr,c
  7355  001DDA  C047  F03A         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  7356  001DDE  C044  F03B         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  7357  001DE2  C046  F03D         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  7358  001DE6  C045  F03C         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  7359  001DEA  EC51  F00A         	call	i2_send_msg	;wreg free
  7360  001DEE  0012               	return	
  7361  001DF0                     __end_of_ToMainHigh_sendmsg:
  7362                           	opt stack 0
  7363                           pclatu	equ	0xFFB
  7364                           pclath	equ	0xFFA
  7365                           tblptru	equ	0xFF8
  7366                           tblptrh	equ	0xFF7
  7367                           tblptrl	equ	0xFF6
  7368                           tablat	equ	0xFF5
  7369                           prodh	equ	0xFF4
  7370                           prodl	equ	0xFF3
  7371                           intcon	equ	0xFF2
  7372                           postinc0	equ	0xFEE
  7373                           fsr0h	equ	0xFEA
  7374                           fsr0l	equ	0xFE9
  7375                           wreg	equ	0xFE8
  7376                           indf1	equ	0xFE7
  7377                           fsr1h	equ	0xFE2
  7378                           fsr1l	equ	0xFE1
  7379                           bsr	equ	0xFE0
  7380                           indf2	equ	0xFDF
  7381                           postinc2	equ	0xFDE
  7382                           postdec2	equ	0xFDD
  7383                           fsr2h	equ	0xFDA
  7384                           fsr2l	equ	0xFD9
  7385                           status	equ	0xFD8
  7386                           
  7387 ;; *************** function i2_send_msg *****************
  7388 ;; Defined at:
  7389 ;;		line 24 in file "../src/messages.c"
  7390 ;; Parameters:    Size  Location     Type
  7391 ;;  qptr            2   55[COMRAM] PTR struct __msg_queue
  7392 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7393 ;;  length          1   57[COMRAM] unsigned char 
  7394 ;;  msgtype         1   58[COMRAM] unsigned char 
  7395 ;;  data            2   59[COMRAM] PTR void 
  7396 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), timer0_int_handler@val(2), 
  7397 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), RAM(1023), 
  7398 ;; Auto vars:     Size  Location     Type
  7399 ;;  send_msg        2   65[COMRAM] PTR struct __msg
  7400 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7401 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7402 ;;  send_msg        2   62[COMRAM] unsigned int 
  7403 ;;  send_msg        1   64[COMRAM] unsigned char 
  7404 ;; Return value:  Size  Location     Type
  7405 ;;                  1    wreg      char 
  7406 ;; Registers used:
  7407 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7408 ;; Tracked objects:
  7409 ;;		On entry : 0/0
  7410 ;;		On exit  : 0/0
  7411 ;;		Unchanged: 0/0
  7412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7413 ;;      Params:         6       0       0       0       0
  7414 ;;      Locals:         5       0       0       0       0
  7415 ;;      Temps:          1       0       0       0       0
  7416 ;;      Totals:        12       0       0       0       0
  7417 ;;Total ram usage:       12 bytes
  7418 ;; Hardware stack levels used:    1
  7419 ;; Hardware stack levels required when called:    1
  7420 ;; This function calls:
  7421 ;;		i2_memcpy
  7422 ;; This function is called by:
  7423 ;;		_ToMainHigh_sendmsg
  7424 ;; This function uses a non-reentrant model
  7425 ;;
  7426                           
  7427                           	psect	text46
  7428  0014A2                     __ptext46:
  7429                           	opt stack 0
  7430  0014A2                     i2_send_msg:
  7431                           	opt stack 17
  7432                           
  7433                           ;messages.c: 25: unsigned char slot;
  7434                           ;messages.c: 27: msg *qmsg;
  7435                           ;messages.c: 28: size_t tlength = length;
  7436                           
  7437                           ;incstack = 0
  7438  0014A2  C03A  F03F         	movff	i2send_msg@length,i2send_msg@tlength
  7439  0014A6  6A40               	clrf	i2send_msg@tlength+1,c
  7440                           
  7441                           ;messages.c: 38: slot = qptr->cur_write_ind;
  7442  0014A8  EE20 F034          	lfsr	2,52
  7443  0014AC  5038               	movf	i2send_msg@qptr,w,c
  7444  0014AE  26D9               	addwf	fsr2l,f,c
  7445  0014B0  5039               	movf	i2send_msg@qptr+1,w,c
  7446  0014B2  22DA               	addwfc	fsr2h,f,c
  7447  0014B4  50DF               	movf	indf2,w,c
  7448  0014B6  6E41               	movwf	i2send_msg@slot,c
  7449                           
  7450                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  7451  0014B8  5041               	movf	i2send_msg@slot,w,c
  7452  0014BA  0D0D               	mullw	13
  7453  0014BC  50F3               	movf	prodl,w,c
  7454  0014BE  2438               	addwf	i2send_msg@qptr,w,c
  7455  0014C0  6E42               	movwf	i2send_msg@qmsg,c
  7456  0014C2  50F4               	movf	prodh,w,c
  7457  0014C4  2039               	addwfc	i2send_msg@qptr+1,w,c
  7458  0014C6  6E43               	movwf	i2send_msg@qmsg+1,c
  7459                           
  7460                           ;messages.c: 41: if (qmsg->full != 0) {
  7461  0014C8  C042  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7462  0014CC  C043  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7463  0014D0  50DF               	movf	indf2,w,c
  7464  0014D2  B4D8               	btfsc	status,2,c
  7465  0014D4  D002               	goto	i2l3348
  7466                           
  7467                           ;messages.c: 42: return (-1);
  7468  0014D6  0EFF               	movlw	255
  7469  0014D8  0012               	return	
  7470  0014DA                     i2l3348:
  7471                           
  7472                           ;messages.c: 43: }
  7473                           ;messages.c: 46: qmsg->length = length;
  7474  0014DA  EE20 F001          	lfsr	2,1
  7475  0014DE  5042               	movf	i2send_msg@qmsg,w,c
  7476  0014E0  26D9               	addwf	fsr2l,f,c
  7477  0014E2  5043               	movf	i2send_msg@qmsg+1,w,c
  7478  0014E4  22DA               	addwfc	fsr2h,f,c
  7479  0014E6  C03A  FFDF         	movff	i2send_msg@length,indf2
  7480                           
  7481                           ;messages.c: 47: qmsg->msgtype = msgtype;
  7482  0014EA  EE20 F002          	lfsr	2,2
  7483  0014EE  5042               	movf	i2send_msg@qmsg,w,c
  7484  0014F0  26D9               	addwf	fsr2l,f,c
  7485  0014F2  5043               	movf	i2send_msg@qmsg+1,w,c
  7486  0014F4  22DA               	addwfc	fsr2h,f,c
  7487  0014F6  C03B  FFDF         	movff	i2send_msg@msgtype,indf2
  7488                           
  7489                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  7490  0014FA  0E03               	movlw	3
  7491  0014FC  2442               	addwf	i2send_msg@qmsg,w,c
  7492  0014FE  6E2E               	movwf	i2memcpy@d1,c
  7493  001500  0E00               	movlw	0
  7494  001502  2043               	addwfc	i2send_msg@qmsg+1,w,c
  7495  001504  6E2F               	movwf	i2memcpy@d1+1,c
  7496  001506  C03D  F031         	movff	i2send_msg@data+1,i2memcpy@s1+1
  7497  00150A  C03C  F030         	movff	i2send_msg@data,i2memcpy@s1
  7498  00150E  C03F  F032         	movff	i2send_msg@tlength,i2memcpy@n
  7499  001512  C040  F033         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  7500  001516  EC7C  F00D         	call	i2_memcpy	;wreg free
  7501                           
  7502                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  7503  00151A  EE20 F034          	lfsr	2,52
  7504  00151E  5038               	movf	i2send_msg@qptr,w,c
  7505  001520  26D9               	addwf	fsr2l,f,c
  7506  001522  5039               	movf	i2send_msg@qptr+1,w,c
  7507  001524  22DA               	addwfc	fsr2h,f,c
  7508  001526  EE10 F034          	lfsr	1,52
  7509  00152A  5038               	movf	i2send_msg@qptr,w,c
  7510  00152C  26E1               	addwf	fsr1l,f,c
  7511  00152E  5039               	movf	i2send_msg@qptr+1,w,c
  7512  001530  22E2               	addwfc	fsr1h,f,c
  7513  001532  50E7               	movf	indf1,w,c
  7514  001534  6E3E               	movwf	??i2_send_msg& (0+255),c
  7515  001536  283E               	incf	??i2_send_msg,w,c
  7516  001538  0B03               	andlw	3
  7517  00153A  6EDF               	movwf	indf2,c
  7518                           
  7519                           ;messages.c: 59: qmsg->full = 1;
  7520  00153C  C042  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7521  001540  C043  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7522  001544  0E01               	movlw	1
  7523  001546  6EDF               	movwf	indf2,c
  7524                           
  7525                           ;messages.c: 60: return (1);
  7526  001548  0E01               	movlw	1
  7527  00154A  0012               	return	
  7528  00154C                     __end_ofi2_send_msg:
  7529                           	opt stack 0
  7530                           pclatu	equ	0xFFB
  7531                           pclath	equ	0xFFA
  7532                           tblptru	equ	0xFF8
  7533                           tblptrh	equ	0xFF7
  7534                           tblptrl	equ	0xFF6
  7535                           tablat	equ	0xFF5
  7536                           prodh	equ	0xFF4
  7537                           prodl	equ	0xFF3
  7538                           intcon	equ	0xFF2
  7539                           postinc0	equ	0xFEE
  7540                           fsr0h	equ	0xFEA
  7541                           fsr0l	equ	0xFE9
  7542                           wreg	equ	0xFE8
  7543                           indf1	equ	0xFE7
  7544                           fsr1h	equ	0xFE2
  7545                           fsr1l	equ	0xFE1
  7546                           bsr	equ	0xFE0
  7547                           indf2	equ	0xFDF
  7548                           postinc2	equ	0xFDE
  7549                           postdec2	equ	0xFDD
  7550                           fsr2h	equ	0xFDA
  7551                           fsr2l	equ	0xFD9
  7552                           status	equ	0xFD8
  7553                           
  7554 ;; *************** function i2_memcpy *****************
  7555 ;; Defined at:
  7556 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\memcpy.c"
  7557 ;; Parameters:    Size  Location     Type
  7558 ;;  d1              2   45[COMRAM] PTR void 
  7559 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7560 ;;		 -> main@msgbuffer(11), timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  7561 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7562 ;;  s1              2   47[COMRAM] PTR const void 
  7563 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7564 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7565 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), timer0_int_handler@val(2), 
  7566 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  7567 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), RAM(1023), 
  7568 ;;  n               2   49[COMRAM] unsigned int 
  7569 ;; Auto vars:     Size  Location     Type
  7570 ;;  memcpy          2   53[COMRAM] PTR const unsigned char 
  7571 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7572 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7573 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), timer0_int_handler@val(2), 
  7574 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  7575 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), RAM(1023), 
  7576 ;;  memcpy          2   51[COMRAM] PTR unsigned char 
  7577 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7578 ;;		 -> main@msgbuffer(11), timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  7579 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7580 ;; Return value:  Size  Location     Type
  7581 ;;                  2   45[COMRAM] PTR void 
  7582 ;; Registers used:
  7583 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7584 ;; Tracked objects:
  7585 ;;		On entry : 0/0
  7586 ;;		On exit  : 0/0
  7587 ;;		Unchanged: 0/0
  7588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7589 ;;      Params:         6       0       0       0       0
  7590 ;;      Locals:         4       0       0       0       0
  7591 ;;      Temps:          0       0       0       0       0
  7592 ;;      Totals:        10       0       0       0       0
  7593 ;;Total ram usage:       10 bytes
  7594 ;; Hardware stack levels used:    1
  7595 ;; This function calls:
  7596 ;;		Nothing
  7597 ;; This function is called by:
  7598 ;;		i2_send_msg
  7599 ;;		i2_recv_msg
  7600 ;; This function uses a non-reentrant model
  7601 ;;
  7602                           
  7603                           	psect	text47
  7604  001AF8                     __ptext47:
  7605                           	opt stack 0
  7606  001AF8                     i2_memcpy:
  7607                           	opt stack 17
  7608                           
  7609                           ;incstack = 0
  7610  001AF8  C031  F037         	movff	i2memcpy@s1+1,i2memcpy@s+1
  7611  001AFC  C030  F036         	movff	i2memcpy@s1,i2memcpy@s
  7612  001B00  C02F  F035         	movff	i2memcpy@d1+1,i2memcpy@d+1
  7613  001B04  C02E  F034         	movff	i2memcpy@d1,i2memcpy@d
  7614  001B08  D00E               	goto	i2l3286
  7615  001B0A                     i2l3280:
  7616  001B0A  C036  FFD9         	movff	i2memcpy@s,fsr2l
  7617  001B0E  C037  FFDA         	movff	i2memcpy@s+1,fsr2h
  7618  001B12  C034  FFE1         	movff	i2memcpy@d,fsr1l
  7619  001B16  C035  FFE2         	movff	i2memcpy@d+1,fsr1h
  7620  001B1A  CFDF FFE7          	movff	indf2,indf1
  7621  001B1E  4A36               	infsnz	i2memcpy@s,f,c
  7622  001B20  2A37               	incf	i2memcpy@s+1,f,c
  7623  001B22  4A34               	infsnz	i2memcpy@d,f,c
  7624  001B24  2A35               	incf	i2memcpy@d+1,f,c
  7625  001B26                     i2l3286:
  7626  001B26  0632               	decf	i2memcpy@n,f,c
  7627  001B28  A0D8               	btfss	status,0,c
  7628  001B2A  0633               	decf	i2memcpy@n+1,f,c
  7629  001B2C  2832               	incf	i2memcpy@n& (0+255),w,c
  7630  001B2E  B4D8               	btfsc	status,2,c
  7631  001B30  2833               	incf	(i2memcpy@n+1)& (0+255),w,c
  7632  001B32  B4D8               	btfsc	status,2,c
  7633                           
  7634                           ;	Return value of i2_memcpy is never used
  7635  001B34  0012               	return	
  7636  001B36  D7E9               	goto	i2l3280
  7637  001B38                     __end_ofi2_memcpy:
  7638                           	opt stack 0
  7639                           pclatu	equ	0xFFB
  7640                           pclath	equ	0xFFA
  7641                           tblptru	equ	0xFF8
  7642                           tblptrh	equ	0xFF7
  7643                           tblptrl	equ	0xFF6
  7644                           tablat	equ	0xFF5
  7645                           prodh	equ	0xFF4
  7646                           prodl	equ	0xFF3
  7647                           intcon	equ	0xFF2
  7648                           postinc0	equ	0xFEE
  7649                           fsr0h	equ	0xFEA
  7650                           fsr0l	equ	0xFE9
  7651                           wreg	equ	0xFE8
  7652                           indf1	equ	0xFE7
  7653                           fsr1h	equ	0xFE2
  7654                           fsr1l	equ	0xFE1
  7655                           bsr	equ	0xFE0
  7656                           indf2	equ	0xFDF
  7657                           postinc2	equ	0xFDE
  7658                           postdec2	equ	0xFDD
  7659                           fsr2h	equ	0xFDA
  7660                           fsr2l	equ	0xFD9
  7661                           status	equ	0xFD8
  7662                           
  7663 ;; *************** function ___lwtoft *****************
  7664 ;; Defined at:
  7665 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\lwtoft.c"
  7666 ;; Parameters:    Size  Location     Type
  7667 ;;  c               2   53[COMRAM] unsigned int 
  7668 ;; Auto vars:     Size  Location     Type
  7669 ;;		None
  7670 ;; Return value:  Size  Location     Type
  7671 ;;                  3   53[COMRAM] float 
  7672 ;; Registers used:
  7673 ;;		wreg, status,2, status,0, cstack
  7674 ;; Tracked objects:
  7675 ;;		On entry : 0/0
  7676 ;;		On exit  : 0/0
  7677 ;;		Unchanged: 0/0
  7678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7679 ;;      Params:         3       0       0       0       0
  7680 ;;      Locals:         0       0       0       0       0
  7681 ;;      Temps:          0       0       0       0       0
  7682 ;;      Totals:         3       0       0       0       0
  7683 ;;Total ram usage:        3 bytes
  7684 ;; Hardware stack levels used:    1
  7685 ;; Hardware stack levels required when called:    1
  7686 ;; This function calls:
  7687 ;;		___ftpack
  7688 ;; This function is called by:
  7689 ;;		_InterruptHandlerHigh
  7690 ;; This function uses a non-reentrant model
  7691 ;;
  7692                           
  7693                           	psect	text48
  7694  001DF0                     __ptext48:
  7695                           	opt stack 0
  7696  001DF0                     ___lwtoft:
  7697                           	opt stack 19
  7698                           
  7699                           ;incstack = 0
  7700  001DF0  C036  F02E         	movff	___lwtoft@c,___ftpack@arg
  7701  001DF4  C037  F02F         	movff	___lwtoft@c+1,___ftpack@arg+1
  7702  001DF8  6A30               	clrf	___ftpack@arg+2,c
  7703  001DFA  0E8E               	movlw	142
  7704  001DFC  6E31               	movwf	___ftpack@exp,c
  7705  001DFE  0E00               	movlw	0
  7706  001E00  6E32               	movwf	___ftpack@sign,c
  7707  001E02  ECA6  F00A         	call	___ftpack	;wreg free
  7708  001E06  C02E  F036         	movff	?___ftpack,?___lwtoft
  7709  001E0A  C02F  F037         	movff	?___ftpack+1,?___lwtoft+1
  7710  001E0E  C030  F038         	movff	?___ftpack+2,?___lwtoft+2
  7711  001E12  0012               	return	
  7712  001E14                     __end_of___lwtoft:
  7713                           	opt stack 0
  7714                           pclatu	equ	0xFFB
  7715                           pclath	equ	0xFFA
  7716                           tblptru	equ	0xFF8
  7717                           tblptrh	equ	0xFF7
  7718                           tblptrl	equ	0xFF6
  7719                           tablat	equ	0xFF5
  7720                           prodh	equ	0xFF4
  7721                           prodl	equ	0xFF3
  7722                           intcon	equ	0xFF2
  7723                           postinc0	equ	0xFEE
  7724                           fsr0h	equ	0xFEA
  7725                           fsr0l	equ	0xFE9
  7726                           wreg	equ	0xFE8
  7727                           indf1	equ	0xFE7
  7728                           fsr1h	equ	0xFE2
  7729                           fsr1l	equ	0xFE1
  7730                           bsr	equ	0xFE0
  7731                           indf2	equ	0xFDF
  7732                           postinc2	equ	0xFDE
  7733                           postdec2	equ	0xFDD
  7734                           fsr2h	equ	0xFDA
  7735                           fsr2l	equ	0xFD9
  7736                           status	equ	0xFD8
  7737                           
  7738 ;; *************** function ___fttol *****************
  7739 ;; Defined at:
  7740 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\fttol.c"
  7741 ;; Parameters:    Size  Location     Type
  7742 ;;  f1              3   21[BANK0 ] float 
  7743 ;; Auto vars:     Size  Location     Type
  7744 ;;  lval            4   31[BANK0 ] unsigned long 
  7745 ;;  exp1            1   35[BANK0 ] unsigned char 
  7746 ;;  sign1           1   30[BANK0 ] unsigned char 
  7747 ;; Return value:  Size  Location     Type
  7748 ;;                  4   21[BANK0 ] long 
  7749 ;; Registers used:
  7750 ;;		wreg, status,2, status,0
  7751 ;; Tracked objects:
  7752 ;;		On entry : 0/0
  7753 ;;		On exit  : 0/0
  7754 ;;		Unchanged: 0/0
  7755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7756 ;;      Params:         0       4       0       0       0
  7757 ;;      Locals:         0       6       0       0       0
  7758 ;;      Temps:          0       5       0       0       0
  7759 ;;      Totals:         0      15       0       0       0
  7760 ;;Total ram usage:       15 bytes
  7761 ;; Hardware stack levels used:    1
  7762 ;; This function calls:
  7763 ;;		Nothing
  7764 ;; This function is called by:
  7765 ;;		_InterruptHandlerHigh
  7766 ;; This function uses a non-reentrant model
  7767 ;;
  7768                           
  7769                           	psect	text49
  7770  0009FC                     __ptext49:
  7771                           	opt stack 0
  7772  0009FC                     ___fttol:
  7773                           	opt stack 20
  7774                           
  7775                           ;incstack = 0
  7776  0009FC  0100               	movlb	0	; () banked
  7777  0009FE  C097  F099         	movff	___fttol@f1+2,??___fttol
  7778  000A02  0100               	movlb	0	; () banked
  7779  000A04  6B9A               	clrf	(??___fttol+1)& (0+255),b
  7780  000A06  6B9B               	clrf	(??___fttol+2)& (0+255),b
  7781  000A08  0100               	movlb	0	; () banked
  7782  000A0A  3596               	rlcf	(___fttol@f1+1)& (0+255),w,b
  7783  000A0C  0100               	movlb	0	; () banked
  7784  000A0E  3799               	rlcf	??___fttol& (0+255),f,b
  7785  000A10  E301               	bnc	u261_41
  7786  000A12  819A               	bsf	(??___fttol+1)& (0+255),0,b
  7787  000A14                     u261_41:
  7788  000A14  0100               	movlb	0	; () banked
  7789  000A16  5199               	movf	??___fttol& (0+255),w,b
  7790  000A18  0100               	movlb	0	; () banked
  7791  000A1A  6FA3               	movwf	___fttol@exp1& (0+255),b
  7792  000A1C  0100               	movlb	0	; () banked
  7793  000A1E  67A3               	tstfsz	___fttol@exp1& (0+255),b
  7794  000A20  D00D               	goto	i2l3090
  7795                           
  7796                           ; BSR set to: 0
  7797  000A22  0E00               	movlw	0
  7798  000A24  0100               	movlb	0	; () banked
  7799  000A26  6F95               	movwf	?___fttol& (0+255),b
  7800  000A28  0E00               	movlw	0
  7801  000A2A  0100               	movlb	0	; () banked
  7802  000A2C  6F96               	movwf	(?___fttol+1)& (0+255),b
  7803  000A2E  0E00               	movlw	0
  7804  000A30  0100               	movlb	0	; () banked
  7805  000A32  6F97               	movwf	(?___fttol+2)& (0+255),b
  7806  000A34  0E00               	movlw	0
  7807  000A36  0100               	movlb	0	; () banked
  7808  000A38  6F98               	movwf	(?___fttol+3)& (0+255),b
  7809  000A3A  0012               	return	
  7810  000A3C                     i2l3090:
  7811                           
  7812                           ; BSR set to: 0
  7813  000A3C  0E17               	movlw	23
  7814  000A3E  0100               	movlb	0	; () banked
  7815  000A40  6F99               	movwf	??___fttol& (0+255),b
  7816  000A42  0100               	movlb	0	; () banked
  7817  000A44  C095  F09A         	movff	___fttol@f1,??___fttol+1
  7818  000A48  0100               	movlb	0	; () banked
  7819  000A4A  C096  F09B         	movff	___fttol@f1+1,??___fttol+2
  7820  000A4E  0100               	movlb	0	; () banked
  7821  000A50  C097  F09C         	movff	___fttol@f1+2,??___fttol+3
  7822  000A54  0100               	movlb	0	; () banked
  7823  000A56  2999               	incf	??___fttol& (0+255),w,b
  7824  000A58  0100               	movlb	0	; () banked
  7825  000A5A  6F9D               	movwf	(??___fttol+4)& (0+255),b
  7826  000A5C  D005               	goto	i2u263_40
  7827  000A5E                     i2u263_45:
  7828  000A5E  0100               	movlb	0	; () banked
  7829  000A60  90D8               	bcf	status,0,c
  7830  000A62  339C               	rrcf	(??___fttol+3)& (0+255),f,b
  7831  000A64  339B               	rrcf	(??___fttol+2)& (0+255),f,b
  7832  000A66  339A               	rrcf	(??___fttol+1)& (0+255),f,b
  7833  000A68                     i2u263_40:
  7834  000A68  0100               	movlb	0	; () banked
  7835  000A6A  2F9D               	decfsz	(??___fttol+4)& (0+255),f,b
  7836  000A6C  D7F8               	goto	i2u263_45
  7837  000A6E  0100               	movlb	0	; () banked
  7838  000A70  519A               	movf	(??___fttol+1)& (0+255),w,b
  7839  000A72  0100               	movlb	0	; () banked
  7840  000A74  6F9E               	movwf	___fttol@sign1& (0+255),b
  7841                           
  7842                           ; BSR set to: 0
  7843  000A76  0100               	movlb	0	; () banked
  7844  000A78  8F96               	bsf	(___fttol@f1+1)& (0+255),7,b
  7845                           
  7846                           ; BSR set to: 0
  7847  000A7A  0EFF               	movlw	255
  7848  000A7C  0100               	movlb	0	; () banked
  7849  000A7E  1795               	andwf	___fttol@f1& (0+255),f,b
  7850  000A80  0EFF               	movlw	255
  7851  000A82  0100               	movlb	0	; () banked
  7852  000A84  1796               	andwf	(___fttol@f1+1)& (0+255),f,b
  7853  000A86  0E00               	movlw	0
  7854  000A88  0100               	movlb	0	; () banked
  7855  000A8A  1797               	andwf	(___fttol@f1+2)& (0+255),f,b
  7856                           
  7857                           ; BSR set to: 0
  7858  000A8C  0100               	movlb	0	; () banked
  7859  000A8E  5195               	movf	___fttol@f1& (0+255),w,b
  7860  000A90  0100               	movlb	0	; () banked
  7861  000A92  6F9F               	movwf	___fttol@lval& (0+255),b
  7862  000A94  0100               	movlb	0	; () banked
  7863  000A96  5196               	movf	(___fttol@f1+1)& (0+255),w,b
  7864  000A98  0100               	movlb	0	; () banked
  7865  000A9A  6FA0               	movwf	(___fttol@lval+1)& (0+255),b
  7866  000A9C  0100               	movlb	0	; () banked
  7867  000A9E  5197               	movf	(___fttol@f1+2)& (0+255),w,b
  7868  000AA0  0100               	movlb	0	; () banked
  7869  000AA2  6FA1               	movwf	(___fttol@lval+2)& (0+255),b
  7870  000AA4  0100               	movlb	0	; () banked
  7871  000AA6  6BA2               	clrf	(___fttol@lval+3)& (0+255),b
  7872                           
  7873                           ; BSR set to: 0
  7874  000AA8  0E8E               	movlw	142
  7875  000AAA  0100               	movlb	0	; () banked
  7876  000AAC  5FA3               	subwf	___fttol@exp1& (0+255),f,b
  7877                           
  7878                           ; BSR set to: 0
  7879  000AAE  0100               	movlb	0	; () banked
  7880  000AB0  AFA3               	btfss	___fttol@exp1& (0+255),7,b
  7881  000AB2  D026               	goto	i2l3112
  7882                           
  7883                           ; BSR set to: 0
  7884  000AB4  0100               	movlb	0	; () banked
  7885  000AB6  51A3               	movf	___fttol@exp1& (0+255),w,b
  7886  000AB8  0A80               	xorlw	128
  7887  000ABA  0100               	movlb	0	; () banked
  7888  000ABC  6F99               	movwf	??___fttol& (0+255),b
  7889  000ABE  0EF1               	movlw	241
  7890  000AC0  0A80               	xorlw	128
  7891  000AC2  0100               	movlb	0	; () banked
  7892  000AC4  5D99               	subwf	??___fttol& (0+255),w,b
  7893  000AC6  B0D8               	btfsc	status,0,c
  7894  000AC8  D00D               	goto	i2l3108
  7895                           
  7896                           ; BSR set to: 0
  7897  000ACA  0E00               	movlw	0
  7898  000ACC  0100               	movlb	0	; () banked
  7899  000ACE  6F95               	movwf	?___fttol& (0+255),b
  7900  000AD0  0E00               	movlw	0
  7901  000AD2  0100               	movlb	0	; () banked
  7902  000AD4  6F96               	movwf	(?___fttol+1)& (0+255),b
  7903  000AD6  0E00               	movlw	0
  7904  000AD8  0100               	movlb	0	; () banked
  7905  000ADA  6F97               	movwf	(?___fttol+2)& (0+255),b
  7906  000ADC  0E00               	movlw	0
  7907  000ADE  0100               	movlb	0	; () banked
  7908  000AE0  6F98               	movwf	(?___fttol+3)& (0+255),b
  7909  000AE2  0012               	return	
  7910  000AE4                     i2l3108:
  7911                           
  7912                           ; BSR set to: 0
  7913  000AE4  0100               	movlb	0	; () banked
  7914  000AE6  90D8               	bcf	status,0,c
  7915  000AE8  0100               	movlb	0	; () banked
  7916  000AEA  33A2               	rrcf	(___fttol@lval+3)& (0+255),f,b
  7917  000AEC  0100               	movlb	0	; () banked
  7918  000AEE  33A1               	rrcf	(___fttol@lval+2)& (0+255),f,b
  7919  000AF0  0100               	movlb	0	; () banked
  7920  000AF2  33A0               	rrcf	(___fttol@lval+1)& (0+255),f,b
  7921  000AF4  0100               	movlb	0	; () banked
  7922  000AF6  339F               	rrcf	___fttol@lval& (0+255),f,b
  7923                           
  7924                           ; BSR set to: 0
  7925  000AF8  0100               	movlb	0	; () banked
  7926  000AFA  3FA3               	incfsz	___fttol@exp1& (0+255),f,b
  7927  000AFC  D7F3               	goto	i2l3108
  7928  000AFE  D020               	goto	i2l3122
  7929  000B00                     i2l3112:
  7930                           
  7931                           ; BSR set to: 0
  7932  000B00  0E17               	movlw	23
  7933  000B02  0100               	movlb	0	; () banked
  7934  000B04  65A3               	cpfsgt	___fttol@exp1& (0+255),b
  7935  000B06  D019               	goto	i2l3120
  7936                           
  7937                           ; BSR set to: 0
  7938  000B08  0E00               	movlw	0
  7939  000B0A  0100               	movlb	0	; () banked
  7940  000B0C  6F95               	movwf	?___fttol& (0+255),b
  7941  000B0E  0E00               	movlw	0
  7942  000B10  0100               	movlb	0	; () banked
  7943  000B12  6F96               	movwf	(?___fttol+1)& (0+255),b
  7944  000B14  0E00               	movlw	0
  7945  000B16  0100               	movlb	0	; () banked
  7946  000B18  6F97               	movwf	(?___fttol+2)& (0+255),b
  7947  000B1A  0E00               	movlw	0
  7948  000B1C  0100               	movlb	0	; () banked
  7949  000B1E  6F98               	movwf	(?___fttol+3)& (0+255),b
  7950  000B20  0012               	return	
  7951  000B22                     i2l3118:
  7952                           
  7953                           ; BSR set to: 0
  7954  000B22  0100               	movlb	0	; () banked
  7955  000B24  90D8               	bcf	status,0,c
  7956  000B26  0100               	movlb	0	; () banked
  7957  000B28  379F               	rlcf	___fttol@lval& (0+255),f,b
  7958  000B2A  0100               	movlb	0	; () banked
  7959  000B2C  37A0               	rlcf	(___fttol@lval+1)& (0+255),f,b
  7960  000B2E  0100               	movlb	0	; () banked
  7961  000B30  37A1               	rlcf	(___fttol@lval+2)& (0+255),f,b
  7962  000B32  0100               	movlb	0	; () banked
  7963  000B34  37A2               	rlcf	(___fttol@lval+3)& (0+255),f,b
  7964  000B36  0100               	movlb	0	; () banked
  7965  000B38  07A3               	decf	___fttol@exp1& (0+255),f,b
  7966  000B3A                     i2l3120:
  7967                           
  7968                           ; BSR set to: 0
  7969  000B3A  0100               	movlb	0	; () banked
  7970  000B3C  67A3               	tstfsz	___fttol@exp1& (0+255),b
  7971  000B3E  D7F1               	goto	i2l3118
  7972  000B40                     i2l3122:
  7973                           
  7974                           ; BSR set to: 0
  7975  000B40  0100               	movlb	0	; () banked
  7976  000B42  519E               	movf	___fttol@sign1& (0+255),w,b
  7977  000B44  B4D8               	btfsc	status,2,c
  7978  000B46  D00F               	goto	i2l3126
  7979                           
  7980                           ; BSR set to: 0
  7981  000B48  0100               	movlb	0	; () banked
  7982  000B4A  1FA2               	comf	(___fttol@lval+3)& (0+255),f,b
  7983  000B4C  0100               	movlb	0	; () banked
  7984  000B4E  1FA1               	comf	(___fttol@lval+2)& (0+255),f,b
  7985  000B50  0100               	movlb	0	; () banked
  7986  000B52  1FA0               	comf	(___fttol@lval+1)& (0+255),f,b
  7987  000B54  0100               	movlb	0	; () banked
  7988  000B56  6D9F               	negf	___fttol@lval& (0+255),b
  7989  000B58  0E00               	movlw	0
  7990  000B5A  0100               	movlb	0	; () banked
  7991  000B5C  23A0               	addwfc	(___fttol@lval+1)& (0+255),f,b
  7992  000B5E  0100               	movlb	0	; () banked
  7993  000B60  23A1               	addwfc	(___fttol@lval+2)& (0+255),f,b
  7994  000B62  0100               	movlb	0	; () banked
  7995  000B64  23A2               	addwfc	(___fttol@lval+3)& (0+255),f,b
  7996  000B66                     i2l3126:
  7997                           
  7998                           ; BSR set to: 0
  7999  000B66  C09F  F095         	movff	___fttol@lval,?___fttol
  8000  000B6A  C0A0  F096         	movff	___fttol@lval+1,?___fttol+1
  8001  000B6E  C0A1  F097         	movff	___fttol@lval+2,?___fttol+2
  8002  000B72  C0A2  F098         	movff	___fttol@lval+3,?___fttol+3
  8003  000B76  0012               	return	
  8004  000B78                     __end_of___fttol:
  8005                           	opt stack 0
  8006                           pclatu	equ	0xFFB
  8007                           pclath	equ	0xFFA
  8008                           tblptru	equ	0xFF8
  8009                           tblptrh	equ	0xFF7
  8010                           tblptrl	equ	0xFF6
  8011                           tablat	equ	0xFF5
  8012                           prodh	equ	0xFF4
  8013                           prodl	equ	0xFF3
  8014                           intcon	equ	0xFF2
  8015                           postinc0	equ	0xFEE
  8016                           fsr0h	equ	0xFEA
  8017                           fsr0l	equ	0xFE9
  8018                           wreg	equ	0xFE8
  8019                           indf1	equ	0xFE7
  8020                           fsr1h	equ	0xFE2
  8021                           fsr1l	equ	0xFE1
  8022                           bsr	equ	0xFE0
  8023                           indf2	equ	0xFDF
  8024                           postinc2	equ	0xFDE
  8025                           postdec2	equ	0xFDD
  8026                           fsr2h	equ	0xFDA
  8027                           fsr2l	equ	0xFD9
  8028                           status	equ	0xFD8
  8029                           
  8030 ;; *************** function ___ftmul *****************
  8031 ;; Defined at:
  8032 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\ftmul.c"
  8033 ;; Parameters:    Size  Location     Type
  8034 ;;  f1              3    6[BANK0 ] float 
  8035 ;;  f2              3    9[BANK0 ] float 
  8036 ;; Auto vars:     Size  Location     Type
  8037 ;;  f3_as_produc    3   16[BANK0 ] unsigned um
  8038 ;;  sign            1   20[BANK0 ] unsigned char 
  8039 ;;  cntr            1   19[BANK0 ] unsigned char 
  8040 ;;  exp             1   15[BANK0 ] unsigned char 
  8041 ;; Return value:  Size  Location     Type
  8042 ;;                  3    6[BANK0 ] float 
  8043 ;; Registers used:
  8044 ;;		wreg, status,2, status,0, cstack
  8045 ;; Tracked objects:
  8046 ;;		On entry : 0/0
  8047 ;;		On exit  : 0/0
  8048 ;;		Unchanged: 0/0
  8049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8050 ;;      Params:         0       6       0       0       0
  8051 ;;      Locals:         0       6       0       0       0
  8052 ;;      Temps:          0       3       0       0       0
  8053 ;;      Totals:         0      15       0       0       0
  8054 ;;Total ram usage:       15 bytes
  8055 ;; Hardware stack levels used:    1
  8056 ;; Hardware stack levels required when called:    1
  8057 ;; This function calls:
  8058 ;;		___ftpack
  8059 ;; This function is called by:
  8060 ;;		_InterruptHandlerHigh
  8061 ;; This function uses a non-reentrant model
  8062 ;;
  8063                           
  8064                           	psect	text50
  8065  000B78                     __ptext50:
  8066                           	opt stack 0
  8067  000B78                     ___ftmul:
  8068                           	opt stack 19
  8069                           
  8070                           ; BSR set to: 0
  8071                           ;incstack = 0
  8072  000B78  0100               	movlb	0	; () banked
  8073  000B7A  C088  F08C         	movff	___ftmul@f1+2,??___ftmul
  8074  000B7E  0100               	movlb	0	; () banked
  8075  000B80  6B8D               	clrf	(??___ftmul+1)& (0+255),b
  8076  000B82  6B8E               	clrf	(??___ftmul+2)& (0+255),b
  8077  000B84  0100               	movlb	0	; () banked
  8078  000B86  3587               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  8079  000B88  0100               	movlb	0	; () banked
  8080  000B8A  378C               	rlcf	??___ftmul& (0+255),f,b
  8081  000B8C  E301               	bnc	u324_41
  8082  000B8E  818D               	bsf	(??___ftmul+1)& (0+255),0,b
  8083  000B90                     u324_41:
  8084  000B90  0100               	movlb	0	; () banked
  8085  000B92  518C               	movf	??___ftmul& (0+255),w,b
  8086  000B94  0100               	movlb	0	; () banked
  8087  000B96  6F8F               	movwf	___ftmul@exp& (0+255),b
  8088  000B98  0100               	movlb	0	; () banked
  8089  000B9A  678F               	tstfsz	___ftmul@exp& (0+255),b
  8090  000B9C  D00A               	goto	i2l3670
  8091                           
  8092                           ; BSR set to: 0
  8093  000B9E  0E00               	movlw	0
  8094  000BA0  0100               	movlb	0	; () banked
  8095  000BA2  6F86               	movwf	?___ftmul& (0+255),b
  8096  000BA4  0E00               	movlw	0
  8097  000BA6  0100               	movlb	0	; () banked
  8098  000BA8  6F87               	movwf	(?___ftmul+1)& (0+255),b
  8099  000BAA  0E00               	movlw	0
  8100  000BAC  0100               	movlb	0	; () banked
  8101  000BAE  6F88               	movwf	(?___ftmul+2)& (0+255),b
  8102  000BB0  0012               	return	
  8103  000BB2                     i2l3670:
  8104                           
  8105                           ; BSR set to: 0
  8106  000BB2  0100               	movlb	0	; () banked
  8107  000BB4  C08B  F08C         	movff	___ftmul@f2+2,??___ftmul
  8108  000BB8  0100               	movlb	0	; () banked
  8109  000BBA  6B8D               	clrf	(??___ftmul+1)& (0+255),b
  8110  000BBC  6B8E               	clrf	(??___ftmul+2)& (0+255),b
  8111  000BBE  0100               	movlb	0	; () banked
  8112  000BC0  358A               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  8113  000BC2  0100               	movlb	0	; () banked
  8114  000BC4  378C               	rlcf	??___ftmul& (0+255),f,b
  8115  000BC6  E301               	bnc	u326_41
  8116  000BC8  818D               	bsf	(??___ftmul+1)& (0+255),0,b
  8117  000BCA                     u326_41:
  8118  000BCA  0100               	movlb	0	; () banked
  8119  000BCC  518C               	movf	??___ftmul& (0+255),w,b
  8120  000BCE  0100               	movlb	0	; () banked
  8121  000BD0  6F94               	movwf	___ftmul@sign& (0+255),b
  8122  000BD2  0100               	movlb	0	; () banked
  8123  000BD4  6794               	tstfsz	___ftmul@sign& (0+255),b
  8124  000BD6  D00A               	goto	i2l3676
  8125                           
  8126                           ; BSR set to: 0
  8127  000BD8  0E00               	movlw	0
  8128  000BDA  0100               	movlb	0	; () banked
  8129  000BDC  6F86               	movwf	?___ftmul& (0+255),b
  8130  000BDE  0E00               	movlw	0
  8131  000BE0  0100               	movlb	0	; () banked
  8132  000BE2  6F87               	movwf	(?___ftmul+1)& (0+255),b
  8133  000BE4  0E00               	movlw	0
  8134  000BE6  0100               	movlb	0	; () banked
  8135  000BE8  6F88               	movwf	(?___ftmul+2)& (0+255),b
  8136  000BEA  0012               	return	
  8137  000BEC                     i2l3676:
  8138                           
  8139                           ; BSR set to: 0
  8140  000BEC  0100               	movlb	0	; () banked
  8141  000BEE  5194               	movf	___ftmul@sign& (0+255),w,b
  8142  000BF0  0F7B               	addlw	123
  8143  000BF2  0100               	movlb	0	; () banked
  8144  000BF4  278F               	addwf	___ftmul@exp& (0+255),f,b
  8145                           
  8146                           ; BSR set to: 0
  8147  000BF6  C088  F094         	movff	___ftmul@f1+2,___ftmul@sign
  8148  000BFA  0100               	movlb	0	; () banked
  8149  000BFC  518B               	movf	(___ftmul@f2+2)& (0+255),w,b
  8150  000BFE  0100               	movlb	0	; () banked
  8151  000C00  1B94               	xorwf	___ftmul@sign& (0+255),f,b
  8152  000C02  0E80               	movlw	128
  8153  000C04  0100               	movlb	0	; () banked
  8154  000C06  1794               	andwf	___ftmul@sign& (0+255),f,b
  8155                           
  8156                           ; BSR set to: 0
  8157  000C08  0100               	movlb	0	; () banked
  8158  000C0A  8F87               	bsf	(___ftmul@f1+1)& (0+255),7,b
  8159                           
  8160                           ; BSR set to: 0
  8161  000C0C  0100               	movlb	0	; () banked
  8162  000C0E  8F8A               	bsf	(___ftmul@f2+1)& (0+255),7,b
  8163                           
  8164                           ; BSR set to: 0
  8165  000C10  0EFF               	movlw	255
  8166  000C12  0100               	movlb	0	; () banked
  8167  000C14  1789               	andwf	___ftmul@f2& (0+255),f,b
  8168  000C16  0EFF               	movlw	255
  8169  000C18  0100               	movlb	0	; () banked
  8170  000C1A  178A               	andwf	(___ftmul@f2+1)& (0+255),f,b
  8171  000C1C  0E00               	movlw	0
  8172  000C1E  0100               	movlb	0	; () banked
  8173  000C20  178B               	andwf	(___ftmul@f2+2)& (0+255),f,b
  8174                           
  8175                           ; BSR set to: 0
  8176  000C22  0E00               	movlw	0
  8177  000C24  0100               	movlb	0	; () banked
  8178  000C26  6F90               	movwf	___ftmul@f3_as_product& (0+255),b
  8179  000C28  0E00               	movlw	0
  8180  000C2A  0100               	movlb	0	; () banked
  8181  000C2C  6F91               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  8182  000C2E  0E00               	movlw	0
  8183  000C30  0100               	movlb	0	; () banked
  8184  000C32  6F92               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  8185                           
  8186                           ; BSR set to: 0
  8187  000C34  0E07               	movlw	7
  8188  000C36  0100               	movlb	0	; () banked
  8189  000C38  6F93               	movwf	___ftmul@cntr& (0+255),b
  8190  000C3A                     i2l3690:
  8191                           
  8192                           ; BSR set to: 0
  8193  000C3A  0100               	movlb	0	; () banked
  8194  000C3C  A186               	btfss	___ftmul@f1& (0+255),0,b
  8195  000C3E  D00C               	goto	i2l3694
  8196                           
  8197                           ; BSR set to: 0
  8198  000C40  0100               	movlb	0	; () banked
  8199  000C42  5189               	movf	___ftmul@f2& (0+255),w,b
  8200  000C44  0100               	movlb	0	; () banked
  8201  000C46  2790               	addwf	___ftmul@f3_as_product& (0+255),f,b
  8202  000C48  0100               	movlb	0	; () banked
  8203  000C4A  518A               	movf	(___ftmul@f2+1)& (0+255),w,b
  8204  000C4C  0100               	movlb	0	; () banked
  8205  000C4E  2391               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  8206  000C50  0100               	movlb	0	; () banked
  8207  000C52  518B               	movf	(___ftmul@f2+2)& (0+255),w,b
  8208  000C54  0100               	movlb	0	; () banked
  8209  000C56  2392               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  8210  000C58                     i2l3694:
  8211                           
  8212                           ; BSR set to: 0
  8213  000C58  0100               	movlb	0	; () banked
  8214  000C5A  90D8               	bcf	status,0,c
  8215  000C5C  0100               	movlb	0	; () banked
  8216  000C5E  3388               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  8217  000C60  0100               	movlb	0	; () banked
  8218  000C62  3387               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  8219  000C64  0100               	movlb	0	; () banked
  8220  000C66  3386               	rrcf	___ftmul@f1& (0+255),f,b
  8221  000C68  0100               	movlb	0	; () banked
  8222  000C6A  90D8               	bcf	status,0,c
  8223  000C6C  0100               	movlb	0	; () banked
  8224  000C6E  3789               	rlcf	___ftmul@f2& (0+255),f,b
  8225  000C70  0100               	movlb	0	; () banked
  8226  000C72  378A               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  8227  000C74  0100               	movlb	0	; () banked
  8228  000C76  378B               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  8229                           
  8230                           ; BSR set to: 0
  8231  000C78  0100               	movlb	0	; () banked
  8232  000C7A  2F93               	decfsz	___ftmul@cntr& (0+255),f,b
  8233  000C7C  D7DE               	goto	i2l3690
  8234                           
  8235                           ; BSR set to: 0
  8236                           
  8237                           ; BSR set to: 0
  8238  000C7E  0E09               	movlw	9
  8239  000C80  0100               	movlb	0	; () banked
  8240  000C82  6F93               	movwf	___ftmul@cntr& (0+255),b
  8241  000C84                     i2l3700:
  8242                           
  8243                           ; BSR set to: 0
  8244  000C84  0100               	movlb	0	; () banked
  8245  000C86  A186               	btfss	___ftmul@f1& (0+255),0,b
  8246  000C88  D00C               	goto	i2l3704
  8247                           
  8248                           ; BSR set to: 0
  8249  000C8A  0100               	movlb	0	; () banked
  8250  000C8C  5189               	movf	___ftmul@f2& (0+255),w,b
  8251  000C8E  0100               	movlb	0	; () banked
  8252  000C90  2790               	addwf	___ftmul@f3_as_product& (0+255),f,b
  8253  000C92  0100               	movlb	0	; () banked
  8254  000C94  518A               	movf	(___ftmul@f2+1)& (0+255),w,b
  8255  000C96  0100               	movlb	0	; () banked
  8256  000C98  2391               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  8257  000C9A  0100               	movlb	0	; () banked
  8258  000C9C  518B               	movf	(___ftmul@f2+2)& (0+255),w,b
  8259  000C9E  0100               	movlb	0	; () banked
  8260  000CA0  2392               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  8261  000CA2                     i2l3704:
  8262                           
  8263                           ; BSR set to: 0
  8264  000CA2  0100               	movlb	0	; () banked
  8265  000CA4  90D8               	bcf	status,0,c
  8266  000CA6  0100               	movlb	0	; () banked
  8267  000CA8  3388               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  8268  000CAA  0100               	movlb	0	; () banked
  8269  000CAC  3387               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  8270  000CAE  0100               	movlb	0	; () banked
  8271  000CB0  3386               	rrcf	___ftmul@f1& (0+255),f,b
  8272  000CB2  0100               	movlb	0	; () banked
  8273  000CB4  90D8               	bcf	status,0,c
  8274  000CB6  0100               	movlb	0	; () banked
  8275  000CB8  3392               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  8276  000CBA  0100               	movlb	0	; () banked
  8277  000CBC  3391               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  8278  000CBE  0100               	movlb	0	; () banked
  8279  000CC0  3390               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  8280                           
  8281                           ; BSR set to: 0
  8282  000CC2  0100               	movlb	0	; () banked
  8283  000CC4  2F93               	decfsz	___ftmul@cntr& (0+255),f,b
  8284  000CC6  D7DE               	goto	i2l3700
  8285                           
  8286                           ; BSR set to: 0
  8287                           
  8288                           ; BSR set to: 0
  8289  000CC8  C090  F02E         	movff	___ftmul@f3_as_product,___ftpack@arg
  8290  000CCC  C091  F02F         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  8291  000CD0  C092  F030         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  8292  000CD4  C08F  F031         	movff	___ftmul@exp,___ftpack@exp
  8293  000CD8  C094  F032         	movff	___ftmul@sign,___ftpack@sign
  8294  000CDC  ECA6  F00A         	call	___ftpack	;wreg free
  8295  000CE0  C02E  F086         	movff	?___ftpack,?___ftmul
  8296  000CE4  C02F  F087         	movff	?___ftpack+1,?___ftmul+1
  8297  000CE8  C030  F088         	movff	?___ftpack+2,?___ftmul+2
  8298  000CEC  0012               	return	
  8299  000CEE                     __end_of___ftmul:
  8300                           	opt stack 0
  8301                           pclatu	equ	0xFFB
  8302                           pclath	equ	0xFFA
  8303                           tblptru	equ	0xFF8
  8304                           tblptrh	equ	0xFF7
  8305                           tblptrl	equ	0xFF6
  8306                           tablat	equ	0xFF5
  8307                           prodh	equ	0xFF4
  8308                           prodl	equ	0xFF3
  8309                           intcon	equ	0xFF2
  8310                           postinc0	equ	0xFEE
  8311                           fsr0h	equ	0xFEA
  8312                           fsr0l	equ	0xFE9
  8313                           wreg	equ	0xFE8
  8314                           indf1	equ	0xFE7
  8315                           fsr1h	equ	0xFE2
  8316                           fsr1l	equ	0xFE1
  8317                           bsr	equ	0xFE0
  8318                           indf2	equ	0xFDF
  8319                           postinc2	equ	0xFDE
  8320                           postdec2	equ	0xFDD
  8321                           fsr2h	equ	0xFDA
  8322                           fsr2l	equ	0xFD9
  8323                           status	equ	0xFD8
  8324                           
  8325 ;; *************** function ___ftdiv *****************
  8326 ;; Defined at:
  8327 ;;		line 49 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\ftdiv.c"
  8328 ;; Parameters:    Size  Location     Type
  8329 ;;  f1              3   68[COMRAM] float 
  8330 ;;  f2              3   71[COMRAM] float 
  8331 ;; Auto vars:     Size  Location     Type
  8332 ;;  f3              3    1[BANK0 ] float 
  8333 ;;  sign            1    5[BANK0 ] unsigned char 
  8334 ;;  exp             1    4[BANK0 ] unsigned char 
  8335 ;;  cntr            1    0[BANK0 ] unsigned char 
  8336 ;; Return value:  Size  Location     Type
  8337 ;;                  3   68[COMRAM] float 
  8338 ;; Registers used:
  8339 ;;		wreg, status,2, status,0, cstack
  8340 ;; Tracked objects:
  8341 ;;		On entry : 0/0
  8342 ;;		On exit  : 0/0
  8343 ;;		Unchanged: 0/0
  8344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8345 ;;      Params:         6       0       0       0       0
  8346 ;;      Locals:         0       6       0       0       0
  8347 ;;      Temps:          3       0       0       0       0
  8348 ;;      Totals:         9       6       0       0       0
  8349 ;;Total ram usage:       15 bytes
  8350 ;; Hardware stack levels used:    1
  8351 ;; Hardware stack levels required when called:    1
  8352 ;; This function calls:
  8353 ;;		___ftpack
  8354 ;; This function is called by:
  8355 ;;		_InterruptHandlerHigh
  8356 ;; This function uses a non-reentrant model
  8357 ;;
  8358                           
  8359                           	psect	text51
  8360  000F66                     __ptext51:
  8361                           	opt stack 0
  8362  000F66                     ___ftdiv:
  8363                           	opt stack 19
  8364                           
  8365                           ;incstack = 0
  8366  000F66  C047  F04B         	movff	___ftdiv@f1+2,??___ftdiv
  8367  000F6A  6A4C               	clrf	(??___ftdiv+1)& (0+255),c
  8368  000F6C  6A4D               	clrf	(??___ftdiv+2)& (0+255),c
  8369  000F6E  3446               	rlcf	___ftdiv@f1+1,w,c
  8370  000F70  364B               	rlcf	??___ftdiv& (0+255),f,c
  8371  000F72  E301               	bnc	u250_41
  8372  000F74  804C               	bsf	(??___ftdiv+1)& (0+255),0,c
  8373  000F76                     u250_41:
  8374  000F76  504B               	movf	??___ftdiv,w,c
  8375  000F78  0100               	movlb	0	; () banked
  8376  000F7A  6F84               	movwf	___ftdiv@exp& (0+255),b
  8377  000F7C  0100               	movlb	0	; () banked
  8378  000F7E  6784               	tstfsz	___ftdiv@exp& (0+255),b
  8379  000F80  D007               	goto	i2l2996
  8380                           
  8381                           ; BSR set to: 0
  8382  000F82  0E00               	movlw	0
  8383  000F84  6E45               	movwf	?___ftdiv,c
  8384  000F86  0E00               	movlw	0
  8385  000F88  6E46               	movwf	?___ftdiv+1,c
  8386  000F8A  0E00               	movlw	0
  8387  000F8C  6E47               	movwf	?___ftdiv+2,c
  8388  000F8E  0012               	return	
  8389  000F90                     i2l2996:
  8390                           
  8391                           ; BSR set to: 0
  8392  000F90  C04A  F04B         	movff	___ftdiv@f2+2,??___ftdiv
  8393  000F94  6A4C               	clrf	(??___ftdiv+1)& (0+255),c
  8394  000F96  6A4D               	clrf	(??___ftdiv+2)& (0+255),c
  8395  000F98  3449               	rlcf	___ftdiv@f2+1,w,c
  8396  000F9A  364B               	rlcf	??___ftdiv& (0+255),f,c
  8397  000F9C  E301               	bnc	u252_41
  8398  000F9E  804C               	bsf	(??___ftdiv+1)& (0+255),0,c
  8399  000FA0                     u252_41:
  8400  000FA0  504B               	movf	??___ftdiv,w,c
  8401  000FA2  0100               	movlb	0	; () banked
  8402  000FA4  6F85               	movwf	___ftdiv@sign& (0+255),b
  8403  000FA6  0100               	movlb	0	; () banked
  8404  000FA8  6785               	tstfsz	___ftdiv@sign& (0+255),b
  8405  000FAA  D007               	goto	i2l3002
  8406                           
  8407                           ; BSR set to: 0
  8408  000FAC  0E00               	movlw	0
  8409  000FAE  6E45               	movwf	?___ftdiv,c
  8410  000FB0  0E00               	movlw	0
  8411  000FB2  6E46               	movwf	?___ftdiv+1,c
  8412  000FB4  0E00               	movlw	0
  8413  000FB6  6E47               	movwf	?___ftdiv+2,c
  8414  000FB8  0012               	return	
  8415  000FBA                     i2l3002:
  8416                           
  8417                           ; BSR set to: 0
  8418  000FBA  0E00               	movlw	0
  8419  000FBC  0100               	movlb	0	; () banked
  8420  000FBE  6F81               	movwf	___ftdiv@f3& (0+255),b
  8421  000FC0  0E00               	movlw	0
  8422  000FC2  0100               	movlb	0	; () banked
  8423  000FC4  6F82               	movwf	(___ftdiv@f3+1)& (0+255),b
  8424  000FC6  0E00               	movlw	0
  8425  000FC8  0100               	movlb	0	; () banked
  8426  000FCA  6F83               	movwf	(___ftdiv@f3+2)& (0+255),b
  8427                           
  8428                           ; BSR set to: 0
  8429  000FCC  0100               	movlb	0	; () banked
  8430  000FCE  5185               	movf	___ftdiv@sign& (0+255),w,b
  8431  000FD0  0F89               	addlw	137
  8432  000FD2  0100               	movlb	0	; () banked
  8433  000FD4  5F84               	subwf	___ftdiv@exp& (0+255),f,b
  8434                           
  8435                           ; BSR set to: 0
  8436  000FD6  C047  F085         	movff	___ftdiv@f1+2,___ftdiv@sign
  8437                           
  8438                           ; BSR set to: 0
  8439  000FDA  504A               	movf	___ftdiv@f2+2,w,c
  8440  000FDC  0100               	movlb	0	; () banked
  8441  000FDE  1B85               	xorwf	___ftdiv@sign& (0+255),f,b
  8442                           
  8443                           ; BSR set to: 0
  8444  000FE0  0E80               	movlw	128
  8445  000FE2  0100               	movlb	0	; () banked
  8446  000FE4  1785               	andwf	___ftdiv@sign& (0+255),f,b
  8447                           
  8448                           ; BSR set to: 0
  8449  000FE6  8E46               	bsf	___ftdiv@f1+1,7,c
  8450                           
  8451                           ; BSR set to: 0
  8452  000FE8  0EFF               	movlw	255
  8453  000FEA  1645               	andwf	___ftdiv@f1,f,c
  8454  000FEC  0EFF               	movlw	255
  8455  000FEE  1646               	andwf	___ftdiv@f1+1,f,c
  8456  000FF0  0E00               	movlw	0
  8457  000FF2  1647               	andwf	___ftdiv@f1+2,f,c
  8458                           
  8459                           ; BSR set to: 0
  8460  000FF4  8E49               	bsf	___ftdiv@f2+1,7,c
  8461                           
  8462                           ; BSR set to: 0
  8463  000FF6  0EFF               	movlw	255
  8464  000FF8  1648               	andwf	___ftdiv@f2,f,c
  8465  000FFA  0EFF               	movlw	255
  8466  000FFC  1649               	andwf	___ftdiv@f2+1,f,c
  8467  000FFE  0E00               	movlw	0
  8468  001000  164A               	andwf	___ftdiv@f2+2,f,c
  8469                           
  8470                           ; BSR set to: 0
  8471  001002  0E18               	movlw	24
  8472  001004  0100               	movlb	0	; () banked
  8473  001006  6F80               	movwf	___ftdiv@cntr& (0+255),b
  8474  001008                     i2l3022:
  8475                           
  8476                           ; BSR set to: 0
  8477  001008  0100               	movlb	0	; () banked
  8478  00100A  90D8               	bcf	status,0,c
  8479  00100C  0100               	movlb	0	; () banked
  8480  00100E  3781               	rlcf	___ftdiv@f3& (0+255),f,b
  8481  001010  0100               	movlb	0	; () banked
  8482  001012  3782               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  8483  001014  0100               	movlb	0	; () banked
  8484  001016  3783               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  8485                           
  8486                           ; BSR set to: 0
  8487  001018  5048               	movf	___ftdiv@f2,w,c
  8488  00101A  5C45               	subwf	___ftdiv@f1,w,c
  8489  00101C  5049               	movf	___ftdiv@f2+1,w,c
  8490  00101E  5846               	subwfb	___ftdiv@f1+1,w,c
  8491  001020  504A               	movf	___ftdiv@f2+2,w,c
  8492  001022  5847               	subwfb	___ftdiv@f1+2,w,c
  8493  001024  A0D8               	btfss	status,0,c
  8494  001026  D008               	goto	i2l873
  8495                           
  8496                           ; BSR set to: 0
  8497  001028  5048               	movf	___ftdiv@f2,w,c
  8498  00102A  5E45               	subwf	___ftdiv@f1,f,c
  8499  00102C  5049               	movf	___ftdiv@f2+1,w,c
  8500  00102E  5A46               	subwfb	___ftdiv@f1+1,f,c
  8501  001030  504A               	movf	___ftdiv@f2+2,w,c
  8502  001032  5A47               	subwfb	___ftdiv@f1+2,f,c
  8503                           
  8504                           ; BSR set to: 0
  8505  001034  0100               	movlb	0	; () banked
  8506  001036  8181               	bsf	___ftdiv@f3& (0+255),0,b
  8507  001038                     i2l873:
  8508                           
  8509                           ; BSR set to: 0
  8510  001038  90D8               	bcf	status,0,c
  8511  00103A  3645               	rlcf	___ftdiv@f1,f,c
  8512  00103C  3646               	rlcf	___ftdiv@f1+1,f,c
  8513  00103E  3647               	rlcf	___ftdiv@f1+2,f,c
  8514                           
  8515                           ; BSR set to: 0
  8516  001040  0100               	movlb	0	; () banked
  8517  001042  2F80               	decfsz	___ftdiv@cntr& (0+255),f,b
  8518  001044  D7E1               	goto	i2l3022
  8519                           
  8520                           ; BSR set to: 0
  8521                           
  8522                           ; BSR set to: 0
  8523  001046  C081  F02E         	movff	___ftdiv@f3,___ftpack@arg
  8524  00104A  C082  F02F         	movff	___ftdiv@f3+1,___ftpack@arg+1
  8525  00104E  C083  F030         	movff	___ftdiv@f3+2,___ftpack@arg+2
  8526  001052  C084  F031         	movff	___ftdiv@exp,___ftpack@exp
  8527  001056  C085  F032         	movff	___ftdiv@sign,___ftpack@sign
  8528  00105A  ECA6  F00A         	call	___ftpack	;wreg free
  8529  00105E  C02E  F045         	movff	?___ftpack,?___ftdiv
  8530  001062  C02F  F046         	movff	?___ftpack+1,?___ftdiv+1
  8531  001066  C030  F047         	movff	?___ftpack+2,?___ftdiv+2
  8532  00106A  0012               	return	
  8533  00106C                     __end_of___ftdiv:
  8534                           	opt stack 0
  8535                           pclatu	equ	0xFFB
  8536                           pclath	equ	0xFFA
  8537                           tblptru	equ	0xFF8
  8538                           tblptrh	equ	0xFF7
  8539                           tblptrl	equ	0xFF6
  8540                           tablat	equ	0xFF5
  8541                           prodh	equ	0xFF4
  8542                           prodl	equ	0xFF3
  8543                           intcon	equ	0xFF2
  8544                           postinc0	equ	0xFEE
  8545                           fsr0h	equ	0xFEA
  8546                           fsr0l	equ	0xFE9
  8547                           wreg	equ	0xFE8
  8548                           indf1	equ	0xFE7
  8549                           fsr1h	equ	0xFE2
  8550                           fsr1l	equ	0xFE1
  8551                           bsr	equ	0xFE0
  8552                           indf2	equ	0xFDF
  8553                           postinc2	equ	0xFDE
  8554                           postdec2	equ	0xFDD
  8555                           fsr2h	equ	0xFDA
  8556                           fsr2l	equ	0xFD9
  8557                           status	equ	0xFD8
  8558                           
  8559 ;; *************** function ___ftadd *****************
  8560 ;; Defined at:
  8561 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\ftadd.c"
  8562 ;; Parameters:    Size  Location     Type
  8563 ;;  f1              3   56[COMRAM] float 
  8564 ;;  f2              3   59[COMRAM] float 
  8565 ;; Auto vars:     Size  Location     Type
  8566 ;;  exp1            1   67[COMRAM] unsigned char 
  8567 ;;  exp2            1   66[COMRAM] unsigned char 
  8568 ;;  sign            1   65[COMRAM] unsigned char 
  8569 ;; Return value:  Size  Location     Type
  8570 ;;                  3   56[COMRAM] float 
  8571 ;; Registers used:
  8572 ;;		wreg, status,2, status,0, cstack
  8573 ;; Tracked objects:
  8574 ;;		On entry : 0/0
  8575 ;;		On exit  : 0/0
  8576 ;;		Unchanged: 0/0
  8577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8578 ;;      Params:         6       0       0       0       0
  8579 ;;      Locals:         3       0       0       0       0
  8580 ;;      Temps:          3       0       0       0       0
  8581 ;;      Totals:        12       0       0       0       0
  8582 ;;Total ram usage:       12 bytes
  8583 ;; Hardware stack levels used:    1
  8584 ;; Hardware stack levels required when called:    1
  8585 ;; This function calls:
  8586 ;;		___ftpack
  8587 ;; This function is called by:
  8588 ;;		_InterruptHandlerHigh
  8589 ;; This function uses a non-reentrant model
  8590 ;;
  8591                           
  8592                           	psect	text52
  8593  000850                     __ptext52:
  8594                           	opt stack 0
  8595  000850                     ___ftadd:
  8596                           	opt stack 19
  8597                           
  8598                           ;incstack = 0
  8599  000850  C03B  F03F         	movff	___ftadd@f1+2,??___ftadd
  8600  000854  6A40               	clrf	(??___ftadd+1)& (0+255),c
  8601  000856  6A41               	clrf	(??___ftadd+2)& (0+255),c
  8602  000858  343A               	rlcf	___ftadd@f1+1,w,c
  8603  00085A  363F               	rlcf	??___ftadd& (0+255),f,c
  8604  00085C  E301               	bnc	u229_41
  8605  00085E  8040               	bsf	(??___ftadd+1)& (0+255),0,c
  8606  000860                     u229_41:
  8607  000860  503F               	movf	??___ftadd,w,c
  8608  000862  6E44               	movwf	___ftadd@exp1,c
  8609  000864  C03E  F03F         	movff	___ftadd@f2+2,??___ftadd
  8610  000868  6A40               	clrf	(??___ftadd+1)& (0+255),c
  8611  00086A  6A41               	clrf	(??___ftadd+2)& (0+255),c
  8612  00086C  343D               	rlcf	___ftadd@f2+1,w,c
  8613  00086E  363F               	rlcf	??___ftadd& (0+255),f,c
  8614  000870  E301               	bnc	u230_41
  8615  000872  8040               	bsf	(??___ftadd+1)& (0+255),0,c
  8616  000874                     u230_41:
  8617  000874  503F               	movf	??___ftadd,w,c
  8618  000876  6E43               	movwf	___ftadd@exp2,c
  8619  000878  5044               	movf	___ftadd@exp1,w,c
  8620  00087A  B4D8               	btfsc	status,2,c
  8621  00087C  D00C               	goto	i2l838
  8622  00087E  5043               	movf	___ftadd@exp2,w,c
  8623  000880  5C44               	subwf	___ftadd@exp1,w,c
  8624  000882  B0D8               	btfsc	status,0,c
  8625  000884  D00F               	goto	i2l2928
  8626  000886  5044               	movf	___ftadd@exp1,w,c
  8627  000888  0800               	sublw	0
  8628  00088A  2443               	addwf	___ftadd@exp2,w,c
  8629  00088C  6E3F               	movwf	??___ftadd& (0+255),c
  8630  00088E  0E19               	movlw	25
  8631  000890  5C3F               	subwf	??___ftadd,w,c
  8632  000892  A0D8               	btfss	status,0,c
  8633  000894  D007               	goto	i2l2928
  8634  000896                     i2l838:
  8635  000896  C03C  F039         	movff	___ftadd@f2,?___ftadd
  8636  00089A  C03D  F03A         	movff	___ftadd@f2+1,?___ftadd+1
  8637  00089E  C03E  F03B         	movff	___ftadd@f2+2,?___ftadd+2
  8638  0008A2  0012               	return	
  8639  0008A4                     i2l2928:
  8640  0008A4  5043               	movf	___ftadd@exp2,w,c
  8641  0008A6  B4D8               	btfsc	status,2,c
  8642  0008A8  D00C               	goto	i2l842
  8643  0008AA  5044               	movf	___ftadd@exp1,w,c
  8644  0008AC  5C43               	subwf	___ftadd@exp2,w,c
  8645  0008AE  B0D8               	btfsc	status,0,c
  8646  0008B0  D00F               	goto	i2l2934
  8647  0008B2  5043               	movf	___ftadd@exp2,w,c
  8648  0008B4  0800               	sublw	0
  8649  0008B6  2444               	addwf	___ftadd@exp1,w,c
  8650  0008B8  6E3F               	movwf	??___ftadd& (0+255),c
  8651  0008BA  0E19               	movlw	25
  8652  0008BC  5C3F               	subwf	??___ftadd,w,c
  8653  0008BE  A0D8               	btfss	status,0,c
  8654  0008C0  D007               	goto	i2l2934
  8655  0008C2                     i2l842:
  8656  0008C2  C039  F039         	movff	___ftadd@f1,?___ftadd
  8657  0008C6  C03A  F03A         	movff	___ftadd@f1+1,?___ftadd+1
  8658  0008CA  C03B  F03B         	movff	___ftadd@f1+2,?___ftadd+2
  8659  0008CE  0012               	return	
  8660  0008D0                     i2l2934:
  8661  0008D0  0E06               	movlw	6
  8662  0008D2  6E42               	movwf	___ftadd@sign,c
  8663  0008D4  BE3B               	btfsc	___ftadd@f1+2,7,c
  8664  0008D6  8E42               	bsf	___ftadd@sign,7,c
  8665  0008D8  BE3E               	btfsc	___ftadd@f2+2,7,c
  8666  0008DA  8C42               	bsf	___ftadd@sign,6,c
  8667  0008DC  8E3A               	bsf	___ftadd@f1+1,7,c
  8668  0008DE  0EFF               	movlw	255
  8669  0008E0  1639               	andwf	___ftadd@f1,f,c
  8670  0008E2  0EFF               	movlw	255
  8671  0008E4  163A               	andwf	___ftadd@f1+1,f,c
  8672  0008E6  0E00               	movlw	0
  8673  0008E8  163B               	andwf	___ftadd@f1+2,f,c
  8674  0008EA  8E3D               	bsf	___ftadd@f2+1,7,c
  8675  0008EC  0EFF               	movlw	255
  8676  0008EE  163C               	andwf	___ftadd@f2,f,c
  8677  0008F0  0EFF               	movlw	255
  8678  0008F2  163D               	andwf	___ftadd@f2+1,f,c
  8679  0008F4  0E00               	movlw	0
  8680  0008F6  163E               	andwf	___ftadd@f2+2,f,c
  8681  0008F8  5043               	movf	___ftadd@exp2,w,c
  8682  0008FA  5C44               	subwf	___ftadd@exp1,w,c
  8683  0008FC  B0D8               	btfsc	status,0,c
  8684  0008FE  D01A               	goto	i2l2960
  8685  000900                     i2l2950:
  8686  000900  90D8               	bcf	status,0,c
  8687  000902  363C               	rlcf	___ftadd@f2,f,c
  8688  000904  363D               	rlcf	___ftadd@f2+1,f,c
  8689  000906  363E               	rlcf	___ftadd@f2+2,f,c
  8690  000908  0643               	decf	___ftadd@exp2,f,c
  8691  00090A  5043               	movf	___ftadd@exp2,w,c
  8692  00090C  1844               	xorwf	___ftadd@exp1,w,c
  8693  00090E  B4D8               	btfsc	status,2,c
  8694  000910  D00D               	goto	i2l2958
  8695  000912  0642               	decf	___ftadd@sign,f,c
  8696  000914  C042  F03F         	movff	___ftadd@sign,??___ftadd
  8697  000918  0E07               	movlw	7
  8698  00091A  163F               	andwf	??___ftadd,f,c
  8699  00091C  B4D8               	btfsc	status,2,c
  8700  00091E  D006               	goto	i2l2958
  8701  000920  D7EF               	goto	i2l2950
  8702  000922                     i2l2956:
  8703  000922  90D8               	bcf	status,0,c
  8704  000924  323B               	rrcf	___ftadd@f1+2,f,c
  8705  000926  323A               	rrcf	___ftadd@f1+1,f,c
  8706  000928  3239               	rrcf	___ftadd@f1,f,c
  8707  00092A  2A44               	incf	___ftadd@exp1,f,c
  8708  00092C                     i2l2958:
  8709  00092C  5043               	movf	___ftadd@exp2,w,c
  8710  00092E  6244               	cpfseq	___ftadd@exp1,c
  8711  000930  D7F8               	goto	i2l2956
  8712  000932  D01D               	goto	i2l853
  8713  000934                     i2l2960:
  8714  000934  5044               	movf	___ftadd@exp1,w,c
  8715  000936  5C43               	subwf	___ftadd@exp2,w,c
  8716  000938  B0D8               	btfsc	status,0,c
  8717  00093A  D019               	goto	i2l853
  8718  00093C                     i2l2962:
  8719  00093C  90D8               	bcf	status,0,c
  8720  00093E  3639               	rlcf	___ftadd@f1,f,c
  8721  000940  363A               	rlcf	___ftadd@f1+1,f,c
  8722  000942  363B               	rlcf	___ftadd@f1+2,f,c
  8723  000944  0644               	decf	___ftadd@exp1,f,c
  8724  000946  5043               	movf	___ftadd@exp2,w,c
  8725  000948  1844               	xorwf	___ftadd@exp1,w,c
  8726  00094A  B4D8               	btfsc	status,2,c
  8727  00094C  D00D               	goto	i2l2970
  8728  00094E  0642               	decf	___ftadd@sign,f,c
  8729  000950  C042  F03F         	movff	___ftadd@sign,??___ftadd
  8730  000954  0E07               	movlw	7
  8731  000956  163F               	andwf	??___ftadd,f,c
  8732  000958  B4D8               	btfsc	status,2,c
  8733  00095A  D006               	goto	i2l2970
  8734  00095C  D7EF               	goto	i2l2962
  8735  00095E                     i2l2968:
  8736  00095E  90D8               	bcf	status,0,c
  8737  000960  323E               	rrcf	___ftadd@f2+2,f,c
  8738  000962  323D               	rrcf	___ftadd@f2+1,f,c
  8739  000964  323C               	rrcf	___ftadd@f2,f,c
  8740  000966  2A43               	incf	___ftadd@exp2,f,c
  8741  000968                     i2l2970:
  8742  000968  5043               	movf	___ftadd@exp2,w,c
  8743  00096A  6244               	cpfseq	___ftadd@exp1,c
  8744  00096C  D7F8               	goto	i2l2968
  8745  00096E                     i2l853:
  8746  00096E  AE42               	btfss	___ftadd@sign,7,c
  8747  000970  D00C               	goto	i2l862
  8748  000972  0EFF               	movlw	255
  8749  000974  1A39               	xorwf	___ftadd@f1,f,c
  8750  000976  0EFF               	movlw	255
  8751  000978  1A3A               	xorwf	___ftadd@f1+1,f,c
  8752  00097A  0EFF               	movlw	255
  8753  00097C  1A3B               	xorwf	___ftadd@f1+2,f,c
  8754  00097E  0E01               	movlw	1
  8755  000980  2639               	addwf	___ftadd@f1,f,c
  8756  000982  0E00               	movlw	0
  8757  000984  223A               	addwfc	___ftadd@f1+1,f,c
  8758  000986  0E00               	movlw	0
  8759  000988  223B               	addwfc	___ftadd@f1+2,f,c
  8760  00098A                     i2l862:
  8761  00098A  AC42               	btfss	___ftadd@sign,6,c
  8762  00098C  D00C               	goto	i2l2976
  8763  00098E  0EFF               	movlw	255
  8764  000990  1A3C               	xorwf	___ftadd@f2,f,c
  8765  000992  0EFF               	movlw	255
  8766  000994  1A3D               	xorwf	___ftadd@f2+1,f,c
  8767  000996  0EFF               	movlw	255
  8768  000998  1A3E               	xorwf	___ftadd@f2+2,f,c
  8769  00099A  0E01               	movlw	1
  8770  00099C  263C               	addwf	___ftadd@f2,f,c
  8771  00099E  0E00               	movlw	0
  8772  0009A0  223D               	addwfc	___ftadd@f2+1,f,c
  8773  0009A2  0E00               	movlw	0
  8774  0009A4  223E               	addwfc	___ftadd@f2+2,f,c
  8775  0009A6                     i2l2976:
  8776  0009A6  0E00               	movlw	0
  8777  0009A8  6E42               	movwf	___ftadd@sign,c
  8778  0009AA  5039               	movf	___ftadd@f1,w,c
  8779  0009AC  263C               	addwf	___ftadd@f2,f,c
  8780  0009AE  503A               	movf	___ftadd@f1+1,w,c
  8781  0009B0  223D               	addwfc	___ftadd@f2+1,f,c
  8782  0009B2  503B               	movf	___ftadd@f1+2,w,c
  8783  0009B4  223E               	addwfc	___ftadd@f2+2,f,c
  8784  0009B6  AE3E               	btfss	___ftadd@f2+2,7,c
  8785  0009B8  D00E               	goto	i2l2986
  8786  0009BA  0EFF               	movlw	255
  8787  0009BC  1A3C               	xorwf	___ftadd@f2,f,c
  8788  0009BE  0EFF               	movlw	255
  8789  0009C0  1A3D               	xorwf	___ftadd@f2+1,f,c
  8790  0009C2  0EFF               	movlw	255
  8791  0009C4  1A3E               	xorwf	___ftadd@f2+2,f,c
  8792  0009C6  0E01               	movlw	1
  8793  0009C8  263C               	addwf	___ftadd@f2,f,c
  8794  0009CA  0E00               	movlw	0
  8795  0009CC  223D               	addwfc	___ftadd@f2+1,f,c
  8796  0009CE  0E00               	movlw	0
  8797  0009D0  223E               	addwfc	___ftadd@f2+2,f,c
  8798  0009D2  0E01               	movlw	1
  8799  0009D4  6E42               	movwf	___ftadd@sign,c
  8800  0009D6                     i2l2986:
  8801  0009D6  C03C  F02E         	movff	___ftadd@f2,___ftpack@arg
  8802  0009DA  C03D  F02F         	movff	___ftadd@f2+1,___ftpack@arg+1
  8803  0009DE  C03E  F030         	movff	___ftadd@f2+2,___ftpack@arg+2
  8804  0009E2  C044  F031         	movff	___ftadd@exp1,___ftpack@exp
  8805  0009E6  C042  F032         	movff	___ftadd@sign,___ftpack@sign
  8806  0009EA  ECA6  F00A         	call	___ftpack	;wreg free
  8807  0009EE  C02E  F039         	movff	?___ftpack,?___ftadd
  8808  0009F2  C02F  F03A         	movff	?___ftpack+1,?___ftadd+1
  8809  0009F6  C030  F03B         	movff	?___ftpack+2,?___ftadd+2
  8810  0009FA  0012               	return	
  8811  0009FC                     __end_of___ftadd:
  8812                           	opt stack 0
  8813                           pclatu	equ	0xFFB
  8814                           pclath	equ	0xFFA
  8815                           tblptru	equ	0xFF8
  8816                           tblptrh	equ	0xFF7
  8817                           tblptrl	equ	0xFF6
  8818                           tablat	equ	0xFF5
  8819                           prodh	equ	0xFF4
  8820                           prodl	equ	0xFF3
  8821                           intcon	equ	0xFF2
  8822                           postinc0	equ	0xFEE
  8823                           fsr0h	equ	0xFEA
  8824                           fsr0l	equ	0xFE9
  8825                           wreg	equ	0xFE8
  8826                           indf1	equ	0xFE7
  8827                           fsr1h	equ	0xFE2
  8828                           fsr1l	equ	0xFE1
  8829                           bsr	equ	0xFE0
  8830                           indf2	equ	0xFDF
  8831                           postinc2	equ	0xFDE
  8832                           postdec2	equ	0xFDD
  8833                           fsr2h	equ	0xFDA
  8834                           fsr2l	equ	0xFD9
  8835                           status	equ	0xFD8
  8836                           
  8837 ;; *************** function ___ftpack *****************
  8838 ;; Defined at:
  8839 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\float.c"
  8840 ;; Parameters:    Size  Location     Type
  8841 ;;  arg             3   45[COMRAM] unsigned um
  8842 ;;  exp             1   48[COMRAM] unsigned char 
  8843 ;;  sign            1   49[COMRAM] unsigned char 
  8844 ;; Auto vars:     Size  Location     Type
  8845 ;;		None
  8846 ;; Return value:  Size  Location     Type
  8847 ;;                  3   45[COMRAM] float 
  8848 ;; Registers used:
  8849 ;;		wreg, status,2, status,0
  8850 ;; Tracked objects:
  8851 ;;		On entry : 0/0
  8852 ;;		On exit  : 0/0
  8853 ;;		Unchanged: 0/0
  8854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8855 ;;      Params:         5       0       0       0       0
  8856 ;;      Locals:         0       0       0       0       0
  8857 ;;      Temps:          3       0       0       0       0
  8858 ;;      Totals:         8       0       0       0       0
  8859 ;;Total ram usage:        8 bytes
  8860 ;; Hardware stack levels used:    1
  8861 ;; This function calls:
  8862 ;;		Nothing
  8863 ;; This function is called by:
  8864 ;;		___ftadd
  8865 ;;		___ftdiv
  8866 ;;		___ftmul
  8867 ;;		___lwtoft
  8868 ;; This function uses a non-reentrant model
  8869 ;;
  8870                           
  8871                           	psect	text53
  8872  00154C                     __ptext53:
  8873                           	opt stack 0
  8874  00154C                     ___ftpack:
  8875                           	opt stack 19
  8876                           
  8877                           ;incstack = 0
  8878  00154C  5031               	movf	___ftpack@exp,w,c
  8879  00154E  B4D8               	btfsc	status,2,c
  8880  001550  D005               	goto	i2l2460
  8881  001552  502E               	movf	___ftpack@arg,w,c
  8882  001554  102F               	iorwf	___ftpack@arg+1,w,c
  8883  001556  1030               	iorwf	___ftpack@arg+2,w,c
  8884  001558  A4D8               	btfss	status,2,c
  8885  00155A  D00C               	goto	i2l2466
  8886  00155C                     i2l2460:
  8887  00155C  0E00               	movlw	0
  8888  00155E  6E2E               	movwf	?___ftpack,c
  8889  001560  0E00               	movlw	0
  8890  001562  6E2F               	movwf	?___ftpack+1,c
  8891  001564  0E00               	movlw	0
  8892  001566  6E30               	movwf	?___ftpack+2,c
  8893  001568  0012               	return	
  8894  00156A                     i2l2464:
  8895  00156A  2A31               	incf	___ftpack@exp,f,c
  8896  00156C  90D8               	bcf	status,0,c
  8897  00156E  3230               	rrcf	___ftpack@arg+2,f,c
  8898  001570  322F               	rrcf	___ftpack@arg+1,f,c
  8899  001572  322E               	rrcf	___ftpack@arg,f,c
  8900  001574                     i2l2466:
  8901  001574  0E00               	movlw	0
  8902  001576  142E               	andwf	___ftpack@arg,w,c
  8903  001578  6E33               	movwf	??___ftpack& (0+255),c
  8904  00157A  0E00               	movlw	0
  8905  00157C  142F               	andwf	___ftpack@arg+1,w,c
  8906  00157E  6E34               	movwf	(??___ftpack+1)& (0+255),c
  8907  001580  0EFE               	movlw	254
  8908  001582  1430               	andwf	___ftpack@arg+2,w,c
  8909  001584  6E35               	movwf	(??___ftpack+2)& (0+255),c
  8910  001586  5033               	movf	??___ftpack,w,c
  8911  001588  1034               	iorwf	??___ftpack+1,w,c
  8912  00158A  1035               	iorwf	??___ftpack+2,w,c
  8913  00158C  B4D8               	btfsc	status,2,c
  8914  00158E  D00C               	goto	i2l2472
  8915  001590  D7EC               	goto	i2l2464
  8916  001592                     i2l2468:
  8917  001592  2A31               	incf	___ftpack@exp,f,c
  8918  001594  0E01               	movlw	1
  8919  001596  262E               	addwf	___ftpack@arg,f,c
  8920  001598  0E00               	movlw	0
  8921  00159A  222F               	addwfc	___ftpack@arg+1,f,c
  8922  00159C  0E00               	movlw	0
  8923  00159E  2230               	addwfc	___ftpack@arg+2,f,c
  8924  0015A0  90D8               	bcf	status,0,c
  8925  0015A2  3230               	rrcf	___ftpack@arg+2,f,c
  8926  0015A4  322F               	rrcf	___ftpack@arg+1,f,c
  8927  0015A6  322E               	rrcf	___ftpack@arg,f,c
  8928  0015A8                     i2l2472:
  8929  0015A8  0E00               	movlw	0
  8930  0015AA  142E               	andwf	___ftpack@arg,w,c
  8931  0015AC  6E33               	movwf	??___ftpack& (0+255),c
  8932  0015AE  0E00               	movlw	0
  8933  0015B0  142F               	andwf	___ftpack@arg+1,w,c
  8934  0015B2  6E34               	movwf	(??___ftpack+1)& (0+255),c
  8935  0015B4  0EFF               	movlw	255
  8936  0015B6  1430               	andwf	___ftpack@arg+2,w,c
  8937  0015B8  6E35               	movwf	(??___ftpack+2)& (0+255),c
  8938  0015BA  5033               	movf	??___ftpack,w,c
  8939  0015BC  1034               	iorwf	??___ftpack+1,w,c
  8940  0015BE  1035               	iorwf	??___ftpack+2,w,c
  8941  0015C0  B4D8               	btfsc	status,2,c
  8942  0015C2  D006               	goto	i2l2476
  8943  0015C4  D7E6               	goto	i2l2468
  8944  0015C6                     i2l2474:
  8945  0015C6  0631               	decf	___ftpack@exp,f,c
  8946  0015C8  90D8               	bcf	status,0,c
  8947  0015CA  362E               	rlcf	___ftpack@arg,f,c
  8948  0015CC  362F               	rlcf	___ftpack@arg+1,f,c
  8949  0015CE  3630               	rlcf	___ftpack@arg+2,f,c
  8950  0015D0                     i2l2476:
  8951  0015D0  AE2F               	btfss	___ftpack@arg+1,7,c
  8952  0015D2  D7F9               	goto	i2l2474
  8953  0015D4  A031               	btfss	___ftpack@exp,0,c
  8954  0015D6  9E2F               	bcf	___ftpack@arg+1,7,c
  8955  0015D8  90D8               	bcf	status,0,c
  8956  0015DA  3231               	rrcf	___ftpack@exp,f,c
  8957  0015DC  5031               	movf	___ftpack@exp,w,c
  8958  0015DE  1230               	iorwf	___ftpack@arg+2,f,c
  8959  0015E0  5032               	movf	___ftpack@sign,w,c
  8960  0015E2  A4D8               	btfss	status,2,c
  8961  0015E4  8E30               	bsf	___ftpack@arg+2,7,c
  8962  0015E6  C02E  F02E         	movff	___ftpack@arg,?___ftpack
  8963  0015EA  C02F  F02F         	movff	___ftpack@arg+1,?___ftpack+1
  8964  0015EE  C030  F030         	movff	___ftpack@arg+2,?___ftpack+2
  8965  0015F2  0012               	return	
  8966  0015F4                     __end_of___ftpack:
  8967                           	opt stack 0
  8968                           pclatu	equ	0xFFB
  8969                           pclath	equ	0xFFA
  8970                           tblptru	equ	0xFF8
  8971                           tblptrh	equ	0xFF7
  8972                           tblptrl	equ	0xFF6
  8973                           tablat	equ	0xFF5
  8974                           prodh	equ	0xFF4
  8975                           prodl	equ	0xFF3
  8976                           intcon	equ	0xFF2
  8977                           postinc0	equ	0xFEE
  8978                           fsr0h	equ	0xFEA
  8979                           fsr0l	equ	0xFE9
  8980                           wreg	equ	0xFE8
  8981                           indf1	equ	0xFE7
  8982                           fsr1h	equ	0xFE2
  8983                           fsr1l	equ	0xFE1
  8984                           bsr	equ	0xFE0
  8985                           indf2	equ	0xFDF
  8986                           postinc2	equ	0xFDE
  8987                           postdec2	equ	0xFDD
  8988                           fsr2h	equ	0xFDA
  8989                           fsr2l	equ	0xFD9
  8990                           status	equ	0xFD8
  8991                           
  8992 ;; *************** function _SleepIfOkay *****************
  8993 ;; Defined at:
  8994 ;;		line 226 in file "../src/messages.c"
  8995 ;; Parameters:    Size  Location     Type
  8996 ;;		None
  8997 ;; Auto vars:     Size  Location     Type
  8998 ;;		None
  8999 ;; Return value:  Size  Location     Type
  9000 ;;		None               void
  9001 ;; Registers used:
  9002 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9003 ;; Tracked objects:
  9004 ;;		On entry : 0/0
  9005 ;;		On exit  : 0/0
  9006 ;;		Unchanged: 0/0
  9007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9008 ;;      Params:         0       0       0       0       0
  9009 ;;      Locals:         0       0       0       0       0
  9010 ;;      Temps:          0       0       0       0       0
  9011 ;;      Totals:         0       0       0       0       0
  9012 ;;Total ram usage:        0 bytes
  9013 ;; Hardware stack levels used:    1
  9014 ;; Hardware stack levels required when called:    2
  9015 ;; This function calls:
  9016 ;;		_enter_sleep_mode
  9017 ;;		i2_check_msg
  9018 ;;		i2_in_high_int
  9019 ;;		i2_in_low_int
  9020 ;; This function is called by:
  9021 ;;		_InterruptHandlerHigh
  9022 ;; This function uses a non-reentrant model
  9023 ;;
  9024                           
  9025                           	psect	text54
  9026  001A6A                     __ptext54:
  9027                           	opt stack 0
  9028  001A6A                     _SleepIfOkay:
  9029                           	opt stack 18
  9030                           
  9031                           ;messages.c: 228: if (MQ_Main_Willing_to_block == 0) {
  9032                           
  9033                           ;incstack = 0
  9034  001A6A  6650               	tstfsz	_MQ_Main_Willing_to_block,c
  9035  001A6C  D001               	goto	i2l2686
  9036  001A6E  0012               	return	
  9037  001A70                     i2l2686:
  9038                           
  9039                           ;messages.c: 230: }
  9040                           ;messages.c: 233: if (in_low_int()) {
  9041  001A70  EC6F  F00E         	call	i2_in_low_int	;wreg free
  9042  001A74  5031               	movf	?i2_in_low_int+1,w,c
  9043  001A76  1030               	iorwf	?i2_in_low_int,w,c
  9044  001A78  A4D8               	btfss	status,2,c
  9045  001A7A  0012               	return	
  9046                           
  9047                           ;messages.c: 235: }
  9048                           ;messages.c: 238: if (!in_high_int()) {
  9049                           
  9050                           ;messages.c: 234: return;
  9051  001A7C  EC80  F00F         	call	i2_in_high_int	;wreg free
  9052  001A80  502F               	movf	?i2_in_high_int+1,w,c
  9053  001A82  102E               	iorwf	?i2_in_high_int,w,c
  9054  001A84  B4D8               	btfsc	status,2,c
  9055  001A86  0012               	return	
  9056                           
  9057                           ;messages.c: 240: }
  9058                           ;messages.c: 245: if (check_msg(&ToMainHigh_MQ)) {
  9059                           
  9060                           ;messages.c: 239: return;
  9061  001A88  0101               	movlb	1	; () banked
  9062  001A8A  0E01               	movlw	high _ToMainHigh_MQ
  9063  001A8C  6E2F               	movwf	i2check_msg@qptr+1,c
  9064  001A8E  0101               	movlb	1	; () banked
  9065  001A90  0E36               	movlw	low _ToMainHigh_MQ
  9066  001A92  6E2E               	movwf	i2check_msg@qptr,c
  9067  001A94  EC0A  F00F         	call	i2_check_msg	;wreg free
  9068  001A98  0900               	iorlw	0
  9069  001A9A  A4D8               	btfss	status,2,c
  9070  001A9C  0012               	return	
  9071                           
  9072                           ;messages.c: 247: }
  9073                           ;messages.c: 248: if (check_msg(&ToMainLow_MQ)) {
  9074                           
  9075                           ;messages.c: 246: return;
  9076  001A9E  0101               	movlb	1	; () banked
  9077  001AA0  0E01               	movlw	high _ToMainLow_MQ
  9078  001AA2  6E2F               	movwf	i2check_msg@qptr+1,c
  9079  001AA4  0101               	movlb	1	; () banked
  9080  001AA6  0E6C               	movlw	low _ToMainLow_MQ
  9081  001AA8  6E2E               	movwf	i2check_msg@qptr,c
  9082  001AAA  EC0A  F00F         	call	i2_check_msg	;wreg free
  9083  001AAE  0900               	iorlw	0
  9084  001AB0  B4D8               	btfsc	status,2,c
  9085                           
  9086                           ;messages.c: 250: }
  9087                           ;messages.c: 251: enter_sleep_mode();
  9088                           
  9089                           ;messages.c: 249: return;
  9090  001AB2  EC8A  F00F         	call	_enter_sleep_mode	;wreg free
  9091  001AB6  0012               	return	
  9092  001AB8                     __end_of_SleepIfOkay:
  9093                           	opt stack 0
  9094                           pclatu	equ	0xFFB
  9095                           pclath	equ	0xFFA
  9096                           tblptru	equ	0xFF8
  9097                           tblptrh	equ	0xFF7
  9098                           tblptrl	equ	0xFF6
  9099                           tablat	equ	0xFF5
  9100                           prodh	equ	0xFF4
  9101                           prodl	equ	0xFF3
  9102                           intcon	equ	0xFF2
  9103                           postinc0	equ	0xFEE
  9104                           fsr0h	equ	0xFEA
  9105                           fsr0l	equ	0xFE9
  9106                           wreg	equ	0xFE8
  9107                           indf1	equ	0xFE7
  9108                           fsr1h	equ	0xFE2
  9109                           fsr1l	equ	0xFE1
  9110                           bsr	equ	0xFE0
  9111                           indf2	equ	0xFDF
  9112                           postinc2	equ	0xFDE
  9113                           postdec2	equ	0xFDD
  9114                           fsr2h	equ	0xFDA
  9115                           fsr2l	equ	0xFD9
  9116                           status	equ	0xFD8
  9117                           
  9118 ;; *************** function i2_in_low_int *****************
  9119 ;; Defined at:
  9120 ;;		line 32 in file "../src/interrupts.c"
  9121 ;; Parameters:    Size  Location     Type
  9122 ;;		None
  9123 ;; Auto vars:     Size  Location     Type
  9124 ;;		None
  9125 ;; Return value:  Size  Location     Type
  9126 ;;                  2   47[COMRAM] int 
  9127 ;; Registers used:
  9128 ;;		wreg, status,2, status,0, cstack
  9129 ;; Tracked objects:
  9130 ;;		On entry : 0/0
  9131 ;;		On exit  : 0/0
  9132 ;;		Unchanged: 0/0
  9133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9134 ;;      Params:         2       0       0       0       0
  9135 ;;      Locals:         0       0       0       0       0
  9136 ;;      Temps:          0       0       0       0       0
  9137 ;;      Totals:         2       0       0       0       0
  9138 ;;Total ram usage:        2 bytes
  9139 ;; Hardware stack levels used:    1
  9140 ;; Hardware stack levels required when called:    1
  9141 ;; This function calls:
  9142 ;;		i2_in_high_int
  9143 ;; This function is called by:
  9144 ;;		_SleepIfOkay
  9145 ;; This function uses a non-reentrant model
  9146 ;;
  9147                           
  9148                           	psect	text55
  9149  001CDE                     __ptext55:
  9150                           	opt stack 0
  9151  001CDE                     i2_in_low_int:
  9152                           	opt stack 18
  9153                           
  9154                           ;interrupts.c: 33: if (INTCONbits.GIEL == 1) {
  9155                           
  9156                           ;incstack = 0
  9157  001CDE  ACF2               	btfss	intcon,6,c	;volatile
  9158  001CE0  D005               	goto	i2l2514
  9159                           
  9160                           ;interrupts.c: 34: return (0);
  9161  001CE2  0E00               	movlw	0
  9162  001CE4  6E31               	movwf	?i2_in_low_int+1,c
  9163  001CE6  0E00               	movlw	0
  9164  001CE8  6E30               	movwf	?i2_in_low_int,c
  9165  001CEA  0012               	return	
  9166  001CEC                     i2l2514:
  9167  001CEC  EC80  F00F         	call	i2_in_high_int	;wreg free
  9168  001CF0  502F               	movf	?i2_in_high_int+1,w,c
  9169  001CF2  102E               	iorwf	?i2_in_high_int,w,c
  9170  001CF4  B4D8               	btfsc	status,2,c
  9171  001CF6  D005               	goto	i2l2522
  9172                           
  9173                           ;interrupts.c: 36: return (0);
  9174  001CF8  0E00               	movlw	0
  9175  001CFA  6E31               	movwf	?i2_in_low_int+1,c
  9176  001CFC  0E00               	movlw	0
  9177  001CFE  6E30               	movwf	?i2_in_low_int,c
  9178  001D00  0012               	return	
  9179  001D02                     i2l2522:
  9180                           
  9181                           ;interrupts.c: 38: return (1);
  9182  001D02  0E00               	movlw	0
  9183  001D04  6E31               	movwf	?i2_in_low_int+1,c
  9184  001D06  0E01               	movlw	1
  9185  001D08  6E30               	movwf	?i2_in_low_int,c
  9186  001D0A  0012               	return	
  9187  001D0C                     __end_ofi2_in_low_int:
  9188                           	opt stack 0
  9189                           pclatu	equ	0xFFB
  9190                           pclath	equ	0xFFA
  9191                           tblptru	equ	0xFF8
  9192                           tblptrh	equ	0xFF7
  9193                           tblptrl	equ	0xFF6
  9194                           tablat	equ	0xFF5
  9195                           prodh	equ	0xFF4
  9196                           prodl	equ	0xFF3
  9197                           intcon	equ	0xFF2
  9198                           postinc0	equ	0xFEE
  9199                           fsr0h	equ	0xFEA
  9200                           fsr0l	equ	0xFE9
  9201                           wreg	equ	0xFE8
  9202                           indf1	equ	0xFE7
  9203                           fsr1h	equ	0xFE2
  9204                           fsr1l	equ	0xFE1
  9205                           bsr	equ	0xFE0
  9206                           indf2	equ	0xFDF
  9207                           postinc2	equ	0xFDE
  9208                           postdec2	equ	0xFDD
  9209                           fsr2h	equ	0xFDA
  9210                           fsr2l	equ	0xFD9
  9211                           status	equ	0xFD8
  9212                           
  9213 ;; *************** function i2_in_high_int *****************
  9214 ;; Defined at:
  9215 ;;		line 24 in file "../src/interrupts.c"
  9216 ;; Parameters:    Size  Location     Type
  9217 ;;		None
  9218 ;; Auto vars:     Size  Location     Type
  9219 ;;		None
  9220 ;; Return value:  Size  Location     Type
  9221 ;;                  2   45[COMRAM] int 
  9222 ;; Registers used:
  9223 ;;		wreg, status,2
  9224 ;; Tracked objects:
  9225 ;;		On entry : 0/0
  9226 ;;		On exit  : 0/0
  9227 ;;		Unchanged: 0/0
  9228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9229 ;;      Params:         2       0       0       0       0
  9230 ;;      Locals:         0       0       0       0       0
  9231 ;;      Temps:          0       0       0       0       0
  9232 ;;      Totals:         2       0       0       0       0
  9233 ;;Total ram usage:        2 bytes
  9234 ;; Hardware stack levels used:    1
  9235 ;; This function calls:
  9236 ;;		Nothing
  9237 ;; This function is called by:
  9238 ;;		_SleepIfOkay
  9239 ;;		i2_in_low_int
  9240 ;; This function uses a non-reentrant model
  9241 ;;
  9242                           
  9243                           	psect	text56
  9244  001F00                     __ptext56:
  9245                           	opt stack 0
  9246  001F00                     i2_in_high_int:
  9247                           	opt stack 18
  9248                           
  9249                           ;interrupts.c: 25: return (!INTCONbits.GIEH);
  9250                           
  9251                           ;incstack = 0
  9252  001F00  0E00               	movlw	0
  9253  001F02  AEF2               	btfss	intcon,7,c	;volatile
  9254  001F04  0E01               	movlw	1
  9255  001F06  6E2E               	movwf	?i2_in_high_int,c
  9256  001F08  6A2F               	clrf	?i2_in_high_int+1,c
  9257  001F0A  0012               	return	
  9258  001F0C                     __end_ofi2_in_high_int:
  9259                           	opt stack 0
  9260                           pclatu	equ	0xFFB
  9261                           pclath	equ	0xFFA
  9262                           tblptru	equ	0xFF8
  9263                           tblptrh	equ	0xFF7
  9264                           tblptrl	equ	0xFF6
  9265                           tablat	equ	0xFF5
  9266                           prodh	equ	0xFF4
  9267                           prodl	equ	0xFF3
  9268                           intcon	equ	0xFF2
  9269                           postinc0	equ	0xFEE
  9270                           fsr0h	equ	0xFEA
  9271                           fsr0l	equ	0xFE9
  9272                           wreg	equ	0xFE8
  9273                           indf1	equ	0xFE7
  9274                           fsr1h	equ	0xFE2
  9275                           fsr1l	equ	0xFE1
  9276                           bsr	equ	0xFE0
  9277                           indf2	equ	0xFDF
  9278                           postinc2	equ	0xFDE
  9279                           postdec2	equ	0xFDD
  9280                           fsr2h	equ	0xFDA
  9281                           fsr2l	equ	0xFD9
  9282                           status	equ	0xFD8
  9283                           
  9284 ;; *************** function i2_check_msg *****************
  9285 ;; Defined at:
  9286 ;;		line 220 in file "../src/messages.c"
  9287 ;; Parameters:    Size  Location     Type
  9288 ;;  qptr            2   45[COMRAM] PTR struct __msg_queue
  9289 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9290 ;; Auto vars:     Size  Location     Type
  9291 ;;		None
  9292 ;; Return value:  Size  Location     Type
  9293 ;;                  1    wreg      unsigned char 
  9294 ;; Registers used:
  9295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9296 ;; Tracked objects:
  9297 ;;		On entry : 0/0
  9298 ;;		On exit  : 0/0
  9299 ;;		Unchanged: 0/0
  9300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9301 ;;      Params:         2       0       0       0       0
  9302 ;;      Locals:         0       0       0       0       0
  9303 ;;      Temps:          1       0       0       0       0
  9304 ;;      Totals:         3       0       0       0       0
  9305 ;;Total ram usage:        3 bytes
  9306 ;; Hardware stack levels used:    1
  9307 ;; This function calls:
  9308 ;;		Nothing
  9309 ;; This function is called by:
  9310 ;;		_SleepIfOkay
  9311 ;; This function uses a non-reentrant model
  9312 ;;
  9313                           
  9314                           	psect	text57
  9315  001E14                     __ptext57:
  9316                           	opt stack 0
  9317  001E14                     i2_check_msg:
  9318                           	opt stack 19
  9319                           
  9320                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
  9321                           
  9322                           ;incstack = 0
  9323  001E14  EE20 F035          	lfsr	2,53
  9324  001E18  502E               	movf	i2check_msg@qptr,w,c
  9325  001E1A  26D9               	addwf	fsr2l,f,c
  9326  001E1C  502F               	movf	i2check_msg@qptr+1,w,c
  9327  001E1E  22DA               	addwfc	fsr2h,f,c
  9328  001E20  50DF               	movf	indf2,w,c
  9329  001E22  6E30               	movwf	??i2_check_msg& (0+255),c
  9330  001E24  5030               	movf	??i2_check_msg,w,c
  9331  001E26  0D0D               	mullw	13
  9332  001E28  50F3               	movf	prodl,w,c
  9333  001E2A  242E               	addwf	i2check_msg@qptr,w,c
  9334  001E2C  6ED9               	movwf	fsr2l,c
  9335  001E2E  50F4               	movf	prodh,w,c
  9336  001E30  202F               	addwfc	i2check_msg@qptr+1,w,c
  9337  001E32  6EDA               	movwf	fsr2h,c
  9338  001E34  50DF               	movf	indf2,w,c
  9339  001E36  0012               	return	
  9340  001E38                     __end_ofi2_check_msg:
  9341                           	opt stack 0
  9342                           pclatu	equ	0xFFB
  9343                           pclath	equ	0xFFA
  9344                           tblptru	equ	0xFF8
  9345                           tblptrh	equ	0xFF7
  9346                           tblptrl	equ	0xFF6
  9347                           tablat	equ	0xFF5
  9348                           prodh	equ	0xFF4
  9349                           prodl	equ	0xFF3
  9350                           intcon	equ	0xFF2
  9351                           postinc0	equ	0xFEE
  9352                           fsr0h	equ	0xFEA
  9353                           fsr0l	equ	0xFE9
  9354                           wreg	equ	0xFE8
  9355                           indf1	equ	0xFE7
  9356                           fsr1h	equ	0xFE2
  9357                           fsr1l	equ	0xFE1
  9358                           bsr	equ	0xFE0
  9359                           indf2	equ	0xFDF
  9360                           postinc2	equ	0xFDE
  9361                           postdec2	equ	0xFDD
  9362                           fsr2h	equ	0xFDA
  9363                           fsr2l	equ	0xFD9
  9364                           status	equ	0xFD8
  9365                           
  9366 ;; *************** function _enter_sleep_mode *****************
  9367 ;; Defined at:
  9368 ;;		line 202 in file "../src/messages.c"
  9369 ;; Parameters:    Size  Location     Type
  9370 ;;		None
  9371 ;; Auto vars:     Size  Location     Type
  9372 ;;		None
  9373 ;; Return value:  Size  Location     Type
  9374 ;;		None               void
  9375 ;; Registers used:
  9376 ;;		None
  9377 ;; Tracked objects:
  9378 ;;		On entry : 0/0
  9379 ;;		On exit  : 0/0
  9380 ;;		Unchanged: 0/0
  9381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9382 ;;      Params:         0       0       0       0       0
  9383 ;;      Locals:         0       0       0       0       0
  9384 ;;      Temps:          0       0       0       0       0
  9385 ;;      Totals:         0       0       0       0       0
  9386 ;;Total ram usage:        0 bytes
  9387 ;; Hardware stack levels used:    1
  9388 ;; This function calls:
  9389 ;;		Nothing
  9390 ;; This function is called by:
  9391 ;;		_SleepIfOkay
  9392 ;; This function uses a non-reentrant model
  9393 ;;
  9394                           
  9395                           	psect	text58
  9396  001F14                     __ptext58:
  9397                           	opt stack 0
  9398  001F14                     _enter_sleep_mode:
  9399                           	opt stack 19
  9400                           
  9401                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  9402                           
  9403                           ;incstack = 0
  9404  001F14  8ED3               	bsf	4051,7,c	;volatile
  9405  001F16  0003               	sleep		;# 
  9406  001F18  0012               	return	
  9407  001F1A                     __end_of_enter_sleep_mode:
  9408                           	opt stack 0
  9409  0000                     pclatu	equ	0xFFB
  9410                           pclath	equ	0xFFA
  9411                           tblptru	equ	0xFF8
  9412                           tblptrh	equ	0xFF7
  9413                           tblptrl	equ	0xFF6
  9414                           tablat	equ	0xFF5
  9415                           prodh	equ	0xFF4
  9416                           prodl	equ	0xFF3
  9417                           intcon	equ	0xFF2
  9418                           postinc0	equ	0xFEE
  9419                           fsr0h	equ	0xFEA
  9420                           fsr0l	equ	0xFE9
  9421                           wreg	equ	0xFE8
  9422                           indf1	equ	0xFE7
  9423                           fsr1h	equ	0xFE2
  9424                           fsr1l	equ	0xFE1
  9425                           bsr	equ	0xFE0
  9426                           indf2	equ	0xFDF
  9427                           postinc2	equ	0xFDE
  9428                           postdec2	equ	0xFDD
  9429                           fsr2h	equ	0xFDA
  9430                           fsr2l	equ	0xFD9
  9431                           status	equ	0xFD8
  9432                           pclatu	equ	0xFFB
  9433                           pclath	equ	0xFFA
  9434                           tblptru	equ	0xFF8
  9435                           tblptrh	equ	0xFF7
  9436                           tblptrl	equ	0xFF6
  9437                           tablat	equ	0xFF5
  9438                           prodh	equ	0xFF4
  9439                           prodl	equ	0xFF3
  9440                           intcon	equ	0xFF2
  9441                           postinc0	equ	0xFEE
  9442                           fsr0h	equ	0xFEA
  9443                           fsr0l	equ	0xFE9
  9444                           wreg	equ	0xFE8
  9445                           indf1	equ	0xFE7
  9446                           fsr1h	equ	0xFE2
  9447                           fsr1l	equ	0xFE1
  9448                           bsr	equ	0xFE0
  9449                           indf2	equ	0xFDF
  9450                           postinc2	equ	0xFDE
  9451                           postdec2	equ	0xFDD
  9452                           fsr2h	equ	0xFDA
  9453                           fsr2l	equ	0xFD9
  9454                           status	equ	0xFD8
  9455                           
  9456                           	psect	rparam
  9457  0000                     pclatu	equ	0xFFB
  9458                           pclath	equ	0xFFA
  9459                           tblptru	equ	0xFF8
  9460                           tblptrh	equ	0xFF7
  9461                           tblptrl	equ	0xFF6
  9462                           tablat	equ	0xFF5
  9463                           prodh	equ	0xFF4
  9464                           prodl	equ	0xFF3
  9465                           intcon	equ	0xFF2
  9466                           postinc0	equ	0xFEE
  9467                           fsr0h	equ	0xFEA
  9468                           fsr0l	equ	0xFE9
  9469                           wreg	equ	0xFE8
  9470                           indf1	equ	0xFE7
  9471                           fsr1h	equ	0xFE2
  9472                           fsr1l	equ	0xFE1
  9473                           bsr	equ	0xFE0
  9474                           indf2	equ	0xFDF
  9475                           postinc2	equ	0xFDE
  9476                           postdec2	equ	0xFDD
  9477                           fsr2h	equ	0xFDA
  9478                           fsr2l	equ	0xFD9
  9479                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         218
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     77      81
    BANK0           128     69      71
    BANK1           256     80     242
    BANK2           256      0      54
    BANK3           256      0       0

Pointer List with Targets:

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> main@msgbuffer(BANK1[11]), timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> main@msgbuffer(BANK1[11]), timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    memcpy@s1	PTR const void  size(2) Largest target is 1023
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[28]), main@uc(BANK1[5]), timer0_int_handler@val(BANK0[2]), 
		 -> NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), RAM(DATA[1023]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 1023
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[28]), main@uc(BANK1[5]), timer0_int_handler@val(BANK0[2]), 
		 -> NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), RAM(DATA[1023]), 

    uthread_data.data	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    S1186__uart_thread_struct$data	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    uart_lthread@uptr.data	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 6
		 -> main@uthread_data(BANK1[5]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), NULL(NULL[0]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), NULL(NULL[0]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), NULL(NULL[0]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 1023
		 -> main@ic(BANK1[28]), timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> RAM(DATA[1023]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> main@uc(BANK1[5]), NULL(NULL[0]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> main@msgtype(BANK1[1]), timer0_int_handler@msgtype(BANK0[2]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), timer0_int_handler@val(BANK0[2]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> main@msgbuffer(BANK1[11]), timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@data	PTR void  size(2) Largest target is 1023
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[28]), main@uc(BANK1[5]), timer0_int_handler@val(BANK0[2]), 
		 -> NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), RAM(DATA[1023]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _InterruptHandlerHigh->___ftdiv
    _timer0_int_handler->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    ___lwtoft->___ftpack
    ___fttol->___ftdiv
    ___ftmul->___ftdiv
    ___ftdiv->___ftadd
    ___ftadd->___lwtoft
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_timer1_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->___fttol
    ___fttol->___ftmul
    ___ftmul->___ftdiv

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                60    60      0   10633
                                             22 BANK1     58    58      0
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                         _init_debug
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
              _start_i2c_slave_reply
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8     410
                                             56 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                       9     1      8    2710
                                             68 BANK0      1     1      0
                                             14 BANK1      8     0      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     302
                                             56 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2021
                                             67 BANK0      1     1      0
                                             11 BANK1      3     0      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1798
                                             66 BANK0      1     1      0
                                              0 BANK1     11     5      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     235
                                             56 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     172
                                             56 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      75
                                             56 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      75
                                             56 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          0     0      0     346
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           3     1      2     346
                                             56 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      75
                                             56 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_debug                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             56 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                0     0      0     226
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             60 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             58 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             56 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     204
                                             56 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             56 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2192
                                             68 BANK0      1     1      0
                                             12 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2192
                                             68 BANK0      1     1      0
                                             12 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1969
                                             66 BANK0      2     2      0
                                              0 BANK1     12     5      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                             56 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     273
                                             56 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      66
                                             56 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             56 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    2896
                                             28 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    1399
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   2     2      0    1497
                                             26 COMRAM     2     2      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    1376
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6     893
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     279
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               20    20      0   16983
                                             36 BANK0     20    20      0
                        _SleepIfOkay
                 _ToMainHigh_sendmsg
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  6     6      0    3323
                                              0 BANK0      6     6      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     164
                                             45 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) _FromMainHigh_recvmsg                                5     1      4    1252
                                             69 COMRAM     5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7    1029
                                             55 COMRAM    14     7      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    10    10      0    2352
                                             71 COMRAM     1     1      0
                                              0 BANK0      9     9      0
                 _ToMainHigh_sendmsg
                       _handle_start
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      31
                                             45 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     1      3    1741
                                             67 COMRAM     4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6     998
                                             55 COMRAM    12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6     384
                                             45 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (11) ___lwtoft                                            3     0      3    1760
                                             53 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (11) ___fttol                                            15    11      4     305
                                             21 BANK0     15    11      4
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (11) ___ftmul                                            15     9      6    2393
                                              6 BANK0     15     9      6
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (11) ___ftdiv                                            15     9      6    2151
                                             68 COMRAM     9     3      6
                                              0 BANK0      6     6      0
                            ___ftadd (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (11) ___ftadd                                            12     6      6    2791
                                             56 COMRAM    12     6      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (12) ___ftpack                                            8     3      5    1685
                                             45 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0      96
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             47 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             45 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2      96
                                             45 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_debug
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _start_i2c_slave_reply
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_lthread

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _ToMainHigh_sendmsg
     i2_send_msg
       i2_memcpy
   ___ftadd
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___ftdiv
     ___ftadd (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftmul
     ___ftadd (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftdiv (ARG)
       ___ftadd (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___fttol
     ___ftadd (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftdiv (ARG)
       ___ftadd (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___ftadd (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      36       8       21.1%
BITBANK1           100      0       0       5        0.0%
BANK1              100     50      F2       6       94.5%
BITBANK0            80      0       0       3        0.0%
BANK0               80     45      47       4       55.5%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     4D      51       1       63.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1C0      11        0.0%
DATA                 0      0     1C0      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Mon Sep 29 15:14:37 2014

              main@uthread_data 01CF        _MQ_Main_Willing_to_block 0050                     _SSPSTATbits 000FC7  
     __end_of_ToMainLow_recvmsg 1BE8                              bsr 000FE0       __end_of_ToMainLow_sendmsg 1DCC  
                  __CFG_CP0$OFF 000000               i2recv_msg@msgtype 003B               i2recv_msg@tlength 0042  
                  ___ftadd@exp1 0044                    ___ftadd@exp2 0043                    ___ftadd@sign 0042  
                           l421 1C7C                             l422 1C7E                             l362 0700  
                           l419 1C66                             l363 0706                             l470 16DE  
                           l463 16B4                             l711 1E78                             l367 072A  
                           l395 1DA2                             l467 16CE                             l396 1DA4  
                           l468 16D0                             l469 16DC            __size_of_WriteTimer0 0012  
          __size_of_WriteTimer1 0012                  _FromMainLow_MQ 0100                             wreg 000FE8  
                  __CFG_IESO$ON 000000                    ?_in_high_int 00B8                ??_init_uart_recv 00BA  
               ReadTimer1@timer 0003                    ___ftdiv@cntr 0080                    ___ftdiv@sign 0085  
           i2recv_msg@maxlength 003A                            l1017 18A4                            l2226 1B68  
                          l2218 1B4A                            l3300 11BE                            l3260 1A34  
                          l2348 1BA4                            l2364 1826                            l3408 0EA4  
                          l3424 0F62                            l3266 1A54                            l3460 1860  
                          l3462 186C                            l2760 1940                            l3464 1872  
                          l2754 1920                            l2770 1088                            l3802 06BC  
                          l3468 1896                            l3804 0710                            l3812 0720  
                          l3820 075E                            l2862 1C68                            l2766 1960  
                          l2774 1104                            l3830 07F4                            l3822 0780  
                          l2880 16A4                            l3816 074A                            l3834 0838  
                          l3828 07B2                            l2888 16B6                            l3794 0686  
                          _LATB 000F8A                            u3387 1E7A                            i1l54 0070  
               _FromMainHigh_MQ 0200                   __CFG_FCMEN$ON 000000          ?_block_on_To_msgqueues 0001  
                          _main 0604                    ___ftpack@arg 002E                    ___ftpack@exp 0031  
                          fsr0h 000FEA                            fsr1h 000FE2                            fsr0l 000FE9  
                          fsr2h 000FDA                            indf1 000FE7                            fsr1l 000FE1  
                          indf2 000FDF                            fsr2l 000FD9                     main@msgtype 01D5  
                    i1_send_msg 13F8                            pclat 000FFA                     i2_check_msg 1E14  
                          prodh 000FF4                            prodl 000FF3           handle_start@data_read 002E  
                          start 00B6                      i2_recv_msg 1260                   __CFG_FOSC2$ON 000000  
                    i2_send_msg 14A2                    ___ftmul@cntr 0093       ToMainHigh_recvmsg@msgtype 01AE  
                  ___ftmul@sign 0094                  send_msg@length 01A4                    ___fttol@exp1 00A3  
   __size_of_timer0_int_handler 005C                    ___fttol@lval 009F                     _Delay1KTCYx 1E74  
                         ?_main 0001                 __end_of___ftadd 09FC                 __end_of___ftdiv 106C  
               __end_of___ftmul 0CEE                           _T0CON 000FD5                           _T1CON 000FCD  
               __end_of___fttol 0B78                 __end_of___lwmod 18AE                      i1memcpy@d1 0001  
                         i2l220 03F6                           i2l212 02DC                           i1l481 1E64  
                         i2l226 0474                           i2l182 13AC                           i2l192 0466  
                         i2l194 013A                           i2l198 016C                      i1memcpy@s1 0003  
                         i2l842 08C2     FromMainHigh_recvmsg@msgtype 0046                           i2l853 096E  
                         i2l862 098A                           i2l838 0896                           i2l873 1038  
                         _RCREG 000FAE                           _RCSTA 000FAB  InterruptHandlerHigh@a_d_result 00B6  
                         _TMR0H 000FD7                           _TMR1H 000FCF                           _TMR0L 000FD6  
                         _TMR1L 000FCE                           _SPBRG 000FAF                           _TRISB 000F93  
                         _TXSTA 000FAC                      i2memcpy@d1 002E                      i2memcpy@s1 0030  
                  ?_init_queues 0001       __size_of_enter_sleep_mode 0006                 __end_of_in_main 1BB2  
    ToMainLow_recvmsg@maxlength 00C4                   ___ftpack@sign 0032         timer0_lthread@msgbuffer 00BE  
       i2c_configure_slave@addr 00B8                           tablat 000FF5                           status 000FD8  
              __end_ofi1_memcpy 1AF8                __end_ofi2_memcpy 1B38                 __initialization 1D5C  
                  __end_of_main 0850                      _ReadTimer1 1EBE     __size_of_timer1_int_handler 002E  
    __size_of_ToMainLow_recvmsg 0036      __size_of_ToMainLow_sendmsg 0024   __size_of_FromMainHigh_recvmsg 0028  
         __size_ofi2_in_low_int 002E   __size_of_FromMainHigh_sendmsg 002E                          ??_main 00C5  
                 ___fttol@sign1 009E                 send_msg@msgtype 01A5                   __activetblptr 000002  
               send_msg@tlength 01A8            __end_of_handle_start 13F8                          _ADRESH 000FC4  
                        _ADRESL 000FC3         ??_uart_recv_int_handler 001B                __end_of___ftpack 15F4  
                        i1l3324 1430                          i1l3270 1ACA                          i1l3276 1AE6  
                        i2l3002 0FBA                          i1l3642 166C                          i2l3022 1008  
                        i2l3120 0B3A                          i2l3112 0B00                          i1l3744 0066  
                        i2l3122 0B40                          i2l3108 0AE4                          i2l3126 0B66  
                        i2l3118 0B22                      _OpenTimer0 1D82                          i2l2522 1D02  
                        i2l2514 1CEC                          i2l3090 0A3C                      _OpenTimer1 1C50  
                        i2l2460 155C                          i2l3510 0198                  __CFG_WDTEN$OFF 000000  
                        i2l2472 15A8                          i2l2464 156A                          i2l3280 1B0A  
                        i2l3600 0552                          i2l3512 01C4                          i2l2474 15C6  
                        i2l2466 1574                          i2l3450 13C8                          i2l3530 0256  
                        i2l3522 01FE                          i2l2476 15D0                          i2l2468 1592  
                        i2l3700 0C84                          i2l3348 14DA                          i2l3452 13E0  
                        i2l3372 12A6                          u230_41 0874                          i2l3286 1B26  
                        i2l3704 0CA2                          i2l3608 05DE                          i2l3552 0346  
                        i2l3528 0216                          i2l3554 0388                          i2l3580 043A  
                        i2l3492 0132                          i2l3388 132E                          i2l3724 0D2E  
                        i2l2686 1A70                          i2l2950 0900                          i2l2934 08D0  
                        i2l3670 0BB2                          i2l3558 0390                          i2l3486 0124  
                        i2l3718 0D24                          i2l2960 0934                          i2l2928 08A4  
                        i2l3592 04D6                          i2l3736 0E06                          i2l2970 0968  
                        i2l2962 093C                          i2l3690 0C3A                          i2l3586 0478  
                        i2l2956 0922                          i2l3676 0BEC                          i2l2958 092C  
                        i2l3694 0C58                          i2l2976 09A6                          i2l2968 095E  
                        i2l2986 09D6                          i2l2996 0F90                          u250_41 0F76  
                        u252_41 0FA0                          u324_41 0B90                          u229_41 0860  
                        u261_41 0A14                          u326_41 0BCA     __end_of_i2c_configure_slave 1D34  
              __end_of___lwtoft 1E14                   ??_SleepIfOkay 0032              __size_of_ReadUSART 001E  
                        _OSCCON 000FD3                          _SPBRGH 000FB0                          _SSPADD 000FC8  
                        _SSPBUF 000FC9  __size_of_start_i2c_slave_reply 0104                     ?i1_send_msg 000B  
 __end_of_start_i2c_slave_reply 1170              timer0_lthread@tptr 00B8                     ?i2_recv_msg 0038  
                  i2_in_low_int 1CDE                     ?i2_send_msg 0038                  __CFG_XINST$OFF 000000  
            __size_of_OpenUSART 0082                 _i2c_int_handler 00BA                       ??___ftadd 003F  
                     ??___ftdiv 004B                       ??___ftmul 008C                       ??___fttol 0099  
              OpenTimer0@config 00B8                          _ic_ptr 00C5                       ??___lwmod 00BC  
                 main@msgbuffer 01BA                __end_of_init_i2c 17EA                OpenTimer1@config 00B8  
                        _memcpy 1A1A                          clear_0 1D62                          clear_1 1D6E  
                        _uc_ptr 004E                          main@ic 01D6                          main@uc 01CA  
              __end_of_recv_msg 0F66     start_i2c_slave_reply@length 00BC           ___ftmul@f3_as_product 0090  
                     ??_in_main 00BE                __end_of_send_msg 1260           timer0_int_handler@val 0084  
       i2c_int_handler@i2c_data 0085                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                     init_queue@i 00BA        ToMainLow_recvmsg@msgtype 01AE  
          __size_of_in_high_int 0010                 __CFG_FOSC$HSPLL 000000                      __accesstop 0080  
       __end_of__initialization 1D78      __end_of_ToMainHigh_recvmsg 1C1E      __end_of_ToMainHigh_sendmsg 1DF0  
                    ___ftadd@f1 0039                      ___ftadd@f2 003C                      ___ftdiv@f1 0045  
                    ___ftdiv@f2 0048                      ___ftdiv@f3 0081                      ___ftmul@f1 0086  
                    ___ftmul@f2 0089     __end_of_init_timer1_lthread 1E9A             __end_of_SleepIfOkay 1AB8  
                    ___fttol@f1 0095                  __pcstackCOMRAM 0001          __size_ofi2_in_high_int 000C  
                   ?_ReadTimer1 0001              __size_of_check_msg 0032               __end_of_ReadUSART 1E74  
                    ___lwtoft@c 0036       timer0_int_handler@msgtype 0082             __size_ofi1_send_msg 00AA  
                     ?i1_memcpy 0001   __size_of_InterruptHandlerHigh 0E3C     __end_of_InterruptHandlerLow 00B6  
                     ?i2_memcpy 002E                   _ToMainHigh_MQ 0136             __size_ofi2_recv_msg 00D2  
              _enter_sleep_mode 1F14             __size_ofi2_send_msg 00AA            timer1_lthread@length 01B4  
                 ReadUSART@data 0001               __end_of_OpenUSART 170A                   check_msg@qptr 00B8  
          timer1_lthread@retval 00C4         ??_block_on_To_msgqueues 00BE            __size_of_init_queues 0056  
                    __pbssBANK1 0100                      __pbssBANK2 0200                     ?_OpenTimer0 0001  
                   ?_OpenTimer1 0001                      __pnvCOMRAM 004E         __end_of_i2c_int_handler 0604  
                  ?i2_check_msg 002E              timer1_lthread@tptr 01B0               recv_msg@maxlength 01A4  
               recv_msg@msgtype 01A5                 recv_msg@tlength 01AA           __size_of_handle_start 00C6  
                  ?_Delay1KTCYx 0001                WriteTimer0@timer 0030                         ?_memcpy 00B8  
              WriteTimer1@timer 0003                   ??_WriteTimer0 0030                   ??_WriteTimer1 0003  
                     ?___ftpack 002E         __size_of_timer0_lthread 000E                       ?___lwtoft 0036  
       __size_of_timer1_lthread 005E                      ??i1_memcpy 0007                      ??i2_memcpy 0034  
              i1send_msg@length 000D                   i2_in_high_int 1F00                         _SSPCON1 000FC6  
                       _SSPCON2 000FC5                         _SSPSTAT 000FC7             __size_of_ReadTimer1 0012  
             __end_of_check_msg 1C50                       ?_init_i2c 00B8                     _SleepIfOkay 1A6A  
                     ?_recv_msg 01A2                      _in_low_int 1B38                    _handle_start 1332  
                       __Hparam 0000                       ?_send_msg 01A2                         __Lparam 0000  
    __end_of_timer0_int_handler 19C4                init_uart_recv@uc 00B8                         ___ftadd 0850  
                       ___ftdiv 0F66                         ___ftmul 0B78                         ___fttol 09FC  
                       ___lwmod 184E                      _init_debug 1E9A                 __CFG_STVREN$OFF 000000  
                       __pcinit 1D5C                 __size_of_memcpy 0050                      ??___ftpack 0033  
                    _init_queue 17EA                         __ramtop 0400             __size_of_OpenTimer0 0026  
           __size_of_OpenTimer1 0032                         __ptext0 0604                         __ptext1 170A  
                       __ptext2 18AE                         __ptext3 184E                         __ptext4 1C82  
                       __ptext5 1170                         __ptext6 1EF2                         __ptext7 106C  
                       __ptext8 1E38                         __ptext9 1E88                      ??___lwtoft 0039  
                     _T0CONbits 000FD5                         _in_main 1B76                       _T1CONbits 000FCD  
           __end_of_WriteTimer0 1EE2             __end_of_WriteTimer1 1EBE                  ?i2_in_high_int 002E  
                __pintcode_body 0CEE    __end_of_FromMainHigh_recvmsg 1D5C            end_of_initialization 1D78  
       timer1_lthread@msgbuffer 01B6    __end_of_FromMainHigh_sendmsg 1CB0  __size_of_uart_recv_int_handler 0094  
    FromMainHigh_sendmsg@length 00C3                         memcpy@d 00BE                         memcpy@n 00BC  
                       memcpy@s 00C0   __end_of_uart_recv_int_handler 1688                      ??_init_i2c 00BA  
   i2c_int_handler@data_written 0083                   __Lmediumconst 0000                         int_func 0CEE  
                  ??i1_send_msg 0011                   ?_uart_lthread 00B8         __size_of_init_uart_recv 001E  
              ?_i2c_int_handler 0001                    ??i2_recv_msg 003F                      ??_recv_msg 00C2  
                  ??i2_send_msg 003E                      ??_send_msg 00C2      __end_of_timer1_int_handler 1CDE  
                main@queue_data 01B8                       _RCSTAbits 000FAB                         postdec2 000FDD  
                       postinc0 000FEE                         postinc2 000FDE       ToMainHigh_sendmsg@msgtype 0044  
                     _PORTDbits 000F83              __end_ofi1_send_msg 14A2     FromMainHigh_sendmsg@msgtype 01AD  
                     _TRISCbits 000F94                       _TRISDbits 000F95              __end_ofi2_recv_msg 1332  
            __end_ofi2_send_msg 154C   FromMainHigh_recvmsg@maxlength 004A        timer1_int_handler@result 001B  
                ??_uart_lthread 00C0                     ___ftdiv@exp 0084                       _TXSTAbits 000FAC  
                    main@length 01D4                     ?_in_low_int 00BA           timer0_lthread@msgtype 00BA  
         _start_i2c_slave_reply 106C                     ___ftmul@exp 008F    __size_of_i2c_configure_slave 0028  
          __size_ofi2_check_msg 0024        __end_of_enter_sleep_mode 1F1A                    ??_ReadTimer1 0003  
                   ?_init_debug 0001              _ToMainHigh_recvmsg 1BE8                       i1memcpy@d 0007  
            _ToMainHigh_sendmsg 1DCC                       i1memcpy@n 0005                       i1memcpy@s 0009  
                _timer0_lthread 1EF2                     ?_init_queue 00B8                       i2memcpy@d 0034  
                   _WriteTimer0 1ED0                     _WriteTimer1 1EAC                       i2memcpy@n 0032  
                     i2memcpy@s 0036                  _timer1_lthread 18AE                  __end_of_memcpy 1A6A  
             _enable_interrupts 1F0C            __size_of_Delay1KTCYx 0014             ?_ToMainHigh_recvmsg 01AE  
               ??i2_in_high_int 0030        i2c_int_handler@data_read 0088             ?_ToMainHigh_sendmsg 0044  
            ?_enable_interrupts 0001             start_initialization 1D5C                   ??_in_high_int 00BA  
                     _ReadUSART 1E56               __size_ofi1_memcpy 0040               __size_ofi2_memcpy 0040  
           ??_enable_interrupts 00B8                    ??_OpenTimer0 00B8                    ??_OpenTimer1 00B8  
__size_of_block_on_To_msgqueues 005C              __end_of_ReadTimer1 1ED0   __end_of_block_on_To_msgqueues 1968  
                     _OpenUSART 1688    __end_of_InterruptHandlerHigh 0E44                      init_i2c@ic 00B8  
          ??_ToMainHigh_recvmsg 00C4            ??_ToMainHigh_sendmsg 0047          __end_of_timer0_lthread 1F00  
      i2c_int_handler@error_buf 0080          __end_of_timer1_lthread 190C       __end_of_enable_interrupts 1F14  
                      ??_memcpy 00BE           timer1_lthread@msgtype 01B2            _FromMainHigh_recvmsg 1D34  
          _FromMainHigh_sendmsg 1C82    __size_of_init_timer1_lthread 0012              __end_of_OpenTimer0 1DA8  
            __end_of_OpenTimer1 1C82        i2c_int_handler@msg_ready 0087               __size_of___ftpack 00A8  
                   __pbssCOMRAM 0050                      ?_ReadUSART 0001                   ??_init_queues 00BB  
             __size_of___lwtoft 0024                   __pcstackBANK0 0080                   __pcstackBANK1 01A2  
           __size_of_in_low_int 003E        start_i2c_slave_reply@msg 00B8             __CFG_CCP2MX$DEFAULT 000000  
               Delay1KTCYx@unit 00B8        ToMainLow_sendmsg@msgtype 0017    __size_of_InterruptHandlerLow 009E  
           __size_of_init_debug 0012             __end_of_in_high_int 1EF2                      ?_OpenUSART 00B8  
                  ?_SleepIfOkay 0001           ToMainLow_recvmsg@data 01B0                    _ToMainLow_MQ 016C  
           __size_of_init_queue 0064                  _init_uart_recv 1E38                       _check_msg 1C1E  
                     __pnvBANK0 00C5          ?_start_i2c_slave_reply 00B8               __size_of_init_i2c 0066  
                  recv_msg@data 01A7                    recv_msg@qmsg 01AC                    recv_msg@slot 01A9  
                  recv_msg@qptr 01A2               __size_of_recv_msg 0122                       __pintcode 0008  
             __size_of_send_msg 00F0                        ?___ftadd 0039                        ?___ftdiv 0045  
               ?_timer0_lthread 00B8                        ?___ftmul 0086                        ?___fttol 0095  
                      ?___lwmod 00B8           ?_FromMainHigh_recvmsg 0046                 ?_timer1_lthread 01B0  
         ?_FromMainHigh_sendmsg 01AD                     __pintcodelo 0018          ToMainHigh_recvmsg@data 01B0  
          __end_of_uart_lthread 1784      i2c_int_handler@msg_to_send 0086                        ?_in_main 00BC  
             WriteTimer0@timer0 002E              _timer0_int_handler 1968               WriteTimer1@timer1 0001  
           uart_lthread@msgtype 00BA           ToMainLow_sendmsg@data 0018             ?_timer0_int_handler 0001  
              uart_lthread@uptr 00B8          __end_of_init_uart_recv 1E56             __end_of_init_queues 1A1A  
               i2check_msg@qptr 002E                      ?_check_msg 00B8                        _IPR1bits 000F9F  
                      _PIE1bits 000F9D                   ?i2_in_low_int 0030                        i2u263_40 0A68  
                      i2u263_45 0A5E                        _PIR1bits 000F9E          ToMainHigh_sendmsg@data 0045  
                      _RCONbits 000FD0                __CFG_WDTPS$32768 000000            ??_timer0_int_handler 004B  
    __size_of_enable_interrupts 0008               i1send_msg@msgtype 000E               i1send_msg@tlength 0012  
                    _ADCON0bits 000FC2            timer0_lthread@length 00BC              _timer1_int_handler 1CB0  
                      i1_memcpy 1AB8            _InterruptHandlerHigh 0008                     ??_ReadUSART 0001  
                      i2_memcpy 1AF8            timer0_lthread@msgval 00C0        FromMainHigh_recvmsg@data 0048  
                   _in_high_int 1EE2                    send_msg@data 01A6             _i2c_configure_slave 1D0C  
                  send_msg@qmsg 01AB                    send_msg@slot 01AA                    send_msg@qptr 01A2  
         uart_lthread@msgbuffer 00BE             ?_timer1_int_handler 0001                 ?_init_uart_recv 00B8  
                   ??_OpenUSART 00BA                 OpenUSART@config 00BD                  ??i2_in_low_int 0032  
         _uart_recv_int_handler 15F4                    ??_in_low_int 00BC                        __Hrparam 0000  
          ?_i2c_configure_slave 0001                        __Lrparam 0000               ?_enter_sleep_mode 0001  
        ??_FromMainHigh_recvmsg 004A          ??_FromMainHigh_sendmsg 00C3            ??_timer1_int_handler 001B  
                  ??_init_debug 00B8                __size_of___ftadd 01AC        __size_of_i2c_int_handler 054A  
              __size_of___ftdiv 0106              ??_enter_sleep_mode 002E                __size_of___ftmul 0176  
              __size_of___fttol 017C                __size_of___lwmod 0060                    ??_init_queue 00BA  
                  ?_WriteTimer0 002E                    ?_WriteTimer1 0001        FromMainHigh_sendmsg@data 01AE  
                      ___ftpack 154C         ToMainLow_sendmsg@length 001A                        ___lwtoft 1DF0  
             main@t0thread_data 01C5           ?_InterruptHandlerHigh 0001                __size_of_in_main 003C  
             i2send_msg@msgtype 003B     ToMainHigh_recvmsg@maxlength 00C4               i2send_msg@tlength 003F  
       init_timer1_lthread@tptr 00B8                     _init_queues 19C4              __end_of_in_low_int 1B76  
                      __ptext10 19C4                        __ptext11 17EA                        __ptext20 1C1E  
                      __ptext12 1784                        __ptext21 1E74                        __ptext13 1E9A  
                      __ptext30 15F4                        __ptext22 1BB2                        __ptext14 1D0C  
                      __ptext31 1E56                        __ptext23 1BE8                        __ptext15 1F0C  
                      __ptext40 1ED0                        __ptext32 1CB0                        __ptext24 0E44  
                      __ptext16 190C                        __ptext41 1D34                        __ptext33 1EAC  
                      __ptext25 1A1A                        __ptext17 1B76                        __ptext50 0B78  
                      __ptext42 1260                        __ptext34 1DA8                        __ptext26 1688  
                      __ptext18 1B38                        __ptext51 0F66                        __ptext43 00BA  
                      __ptext35 13F8                        __ptext27 1C50                        __ptext19 1EE2  
                      __ptext52 0850                        __ptext44 1332                        __ptext36 1AB8  
                      __ptext28 1D82                        __ptext53 154C                        __ptext45 1DCC  
                      __ptext37 1EBE                        __ptext54 1A6A                        __ptext46 14A2  
                      __ptext55 1CDE                        __ptext47 1AF8                        __ptext39 1968  
                      __ptext56 1F00                        __ptext48 1DF0                        __ptext57 1E14  
                      __ptext49 09FC                        __ptext58 1F14                  i1send_msg@data 000F  
                i1send_msg@qmsg 0015                  i1send_msg@slot 0014                  i1send_msg@qptr 000B  
            uart_lthread@length 00BC        timer0_int_handler@length 0080                        _init_i2c 1784  
            __end_of_init_debug 1EAC             _init_timer1_lthread 1E88                   __size_of_main 024C  
                 ??i2_check_msg 0030               main@t1thread_data 01C8                     ??_check_msg 00BA  
            __end_of_init_queue 184E            __size_of_SleepIfOkay 004E                        _recv_msg 0E44  
         ??_i2c_configure_slave 00B8                        _send_msg 1170                  init_queue@qptr 00B8  
         __size_of_uart_lthread 007A                  i2recv_msg@data 003D                  i2recv_msg@qmsg 0044  
                 ??_Delay1KTCYx 00B8                  i2recv_msg@slot 0041                  i2recv_msg@qptr 0038  
           _InterruptHandlerLow 0018            ?_init_timer1_lthread 00B8                     _OSCTUNEbits 000F9B  
                    _INTCONbits 000FF2                  OpenUSART@spbrg 00B8                        memcpy@d1 00B8  
                      memcpy@s1 00BA           __end_ofi2_in_high_int 1F0C    i2c_int_handler@overrun_error 0084  
              i2send_msg@length 003A                        intlevel1 0000                        intlevel2 0000  
          ?_InterruptHandlerLow 0001         ??_start_i2c_slave_reply 00BA                ___lwmod@dividend 00B8  
        ?_uart_recv_int_handler 0001                    _uart_lthread 170A           _block_on_To_msgqueues 190C  
                 ?_handle_start 0001                ??_timer0_lthread 00C0     __size_of_ToMainHigh_recvmsg 0036  
   __size_of_ToMainHigh_sendmsg 0024                      _OSCCONbits 000FD3                ??_timer1_lthread 00C4  
      ToMainHigh_sendmsg@length 0047             __end_ofi2_check_msg 1E38           ??_init_timer1_lthread 00BA  
        ??_InterruptHandlerHigh 00A4               _ToMainLow_recvmsg 1BB2               _ToMainLow_sendmsg 1DA8  
            main@last_reg_recvd 01C7                 ___lwmod@divisor 00BA            __end_ofi2_in_low_int 1D0C  
            ?_ToMainLow_recvmsg 01AE             __end_of_Delay1KTCYx 1E88               ??_i2c_int_handler 0048  
               ___lwmod@counter 00BC              ?_ToMainLow_sendmsg 0017                     _SSPCON1bits 000FC6  
                   _SSPCON2bits 000FC5                  i2send_msg@data 003C           ??_InterruptHandlerLow 001D  
           ??_ToMainLow_recvmsg 00C4                  i2send_msg@qmsg 0042                  i2send_msg@slot 0041  
                i2send_msg@qptr 0038             ??_ToMainLow_sendmsg 001A                  ??_handle_start 002E  
                  _USART_Status 0051  
